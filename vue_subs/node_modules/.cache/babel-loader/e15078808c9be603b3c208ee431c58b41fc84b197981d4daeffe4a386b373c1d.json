{"ast":null,"code":"import { defineStore } from 'pinia';\nimport axios from 'axios';\nexport const useAuthStore = defineStore('auth', {\n  state: () => ({\n    user: null,\n    accessToken: null,\n    refreshToken: null\n  }),\n  actions: {\n    async login(credentials) {\n      try {\n        const response = await axios.post('/api/v1/auth/jwt/create/', credentials);\n        this.accessToken = response.data.access;\n        this.refreshToken = response.data.refresh;\n        console.log(this.accessToken);\n\n        // Fetch user details\n        const userResponse = await axios.get('/api/v1/auth/users/me/', {\n          headers: {\n            Authorization: `Bearer ${this.accessToken}`\n          }\n        });\n        this.user = userResponse.data;\n        console.log(this.user);\n\n        // Save tokens in localStorage for persistence\n        localStorage.setItem('accessToken', this.accessToken);\n        localStorage.setItem('refreshToken', this.refreshToken);\n      } catch (error) {\n        console.error('Login failed:', error);\n        throw error;\n      }\n    },\n    logout() {\n      this.user = null;\n      this.accessToken = null;\n      this.refreshToken = null;\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n    },\n    loadTokensFromStorage() {\n      this.accessToken = localStorage.getItem('accessToken');\n      this.refreshToken = localStorage.getItem('refreshToken');\n      if (this.accessToken) {\n        axios.get('/auth/users/me/', {\n          headers: {\n            Authorization: `Bearer ${this.accessToken}`\n          }\n        }).then(response => {\n          this.user = response.data;\n        }).catch(error => {\n          console.error('Error loading user from token:', error);\n          this.logout();\n        });\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","axios","useAuthStore","state","user","accessToken","refreshToken","actions","login","credentials","response","post","data","access","refresh","console","log","userResponse","get","headers","Authorization","localStorage","setItem","error","logout","removeItem","loadTokensFromStorage","getItem","then","catch"],"sources":["/home/josh/Documents/projects/subs/vue_subs/src/stores/auth.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport axios from 'axios';\n\nexport const useAuthStore = defineStore('auth', {\n  state: () => ({\n    user: null,\n    accessToken: null,\n    refreshToken: null,\n  }),\n  actions: {\n    async login(credentials) {\n      try {\n        const response = await axios.post('/api/v1/auth/jwt/create/', credentials);\n\n        this.accessToken = response.data.access;\n        this.refreshToken = response.data.refresh;\n\n        console.log(this.accessToken);\n\n        // Fetch user details\n        const userResponse = await axios.get('/api/v1/auth/users/me/', {\n          headers: { Authorization: `Bearer ${this.accessToken}` },\n        });\n\n        this.user = userResponse.data;\n\n        console.log(this.user);\n\n        // Save tokens in localStorage for persistence\n        localStorage.setItem('accessToken', this.accessToken);\n        localStorage.setItem('refreshToken', this.refreshToken);\n      } catch (error) {\n        console.error('Login failed:', error);\n        throw error;\n      }\n    },\n    logout() {\n      this.user = null;\n      this.accessToken = null;\n      this.refreshToken = null;\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n    },\n    loadTokensFromStorage() {\n      this.accessToken = localStorage.getItem('accessToken');\n      this.refreshToken = localStorage.getItem('refreshToken');\n\n      if (this.accessToken) {\n        axios\n          .get('/auth/users/me/', {\n            headers: { Authorization: `Bearer ${this.accessToken}` },\n          })\n          .then((response) => {\n            this.user = response.data;\n          })\n          .catch((error) => {\n            console.error('Error loading user from token:', error);\n            this.logout();\n          });\n      }\n    },\n  },\n});\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC,MAAM,EAAE;EAC9CG,KAAK,EAAEA,CAAA,MAAO;IACZC,IAAI,EAAE,IAAI;IACVC,WAAW,EAAE,IAAI;IACjBC,YAAY,EAAE;EAChB,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAACC,WAAW,EAAE;MACvB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,0BAA0B,EAAEF,WAAW,CAAC;QAE1E,IAAI,CAACJ,WAAW,GAAGK,QAAQ,CAACE,IAAI,CAACC,MAAM;QACvC,IAAI,CAACP,YAAY,GAAGI,QAAQ,CAACE,IAAI,CAACE,OAAO;QAEzCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,WAAW,CAAC;;QAE7B;QACA,MAAMY,YAAY,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,wBAAwB,EAAE;UAC7DC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAU,IAAI,CAACf,WAAW;UAAG;QACzD,CAAC,CAAC;QAEF,IAAI,CAACD,IAAI,GAAGa,YAAY,CAACL,IAAI;QAE7BG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,IAAI,CAAC;;QAEtB;QACAiB,YAAY,CAACC,OAAO,CAAC,aAAa,EAAE,IAAI,CAACjB,WAAW,CAAC;QACrDgB,YAAY,CAACC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAChB,YAAY,CAAC;MACzD,CAAC,CAAC,OAAOiB,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;QACrC,MAAMA,KAAK;MACb;IACF,CAAC;IACDC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACpB,IAAI,GAAG,IAAI;MAChB,IAAI,CAACC,WAAW,GAAG,IAAI;MACvB,IAAI,CAACC,YAAY,GAAG,IAAI;MACxBe,YAAY,CAACI,UAAU,CAAC,aAAa,CAAC;MACtCJ,YAAY,CAACI,UAAU,CAAC,cAAc,CAAC;IACzC,CAAC;IACDC,qBAAqBA,CAAA,EAAG;MACtB,IAAI,CAACrB,WAAW,GAAGgB,YAAY,CAACM,OAAO,CAAC,aAAa,CAAC;MACtD,IAAI,CAACrB,YAAY,GAAGe,YAAY,CAACM,OAAO,CAAC,cAAc,CAAC;MAExD,IAAI,IAAI,CAACtB,WAAW,EAAE;QACpBJ,KAAK,CACFiB,GAAG,CAAC,iBAAiB,EAAE;UACtBC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAU,IAAI,CAACf,WAAW;UAAG;QACzD,CAAC,CAAC,CACDuB,IAAI,CAAElB,QAAQ,IAAK;UAClB,IAAI,CAACN,IAAI,GAAGM,QAAQ,CAACE,IAAI;QAC3B,CAAC,CAAC,CACDiB,KAAK,CAAEN,KAAK,IAAK;UAChBR,OAAO,CAACQ,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;UACtD,IAAI,CAACC,MAAM,CAAC,CAAC;QACf,CAAC,CAAC;MACN;IACF;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}