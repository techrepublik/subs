{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\r\n * Module for \"Blur\" filter.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Filter } from \"./Filter\";\nimport { registry } from \"../../Registry\";\n;\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a \"Blur\" filter.\r\n */\nvar BlurFilter = /** @class */function (_super) {\n  __extends(BlurFilter, _super);\n  /**\r\n   * Constructor\r\n   */\n  function BlurFilter() {\n    var _this = _super.call(this) || this;\n    _this.className = \"BlurFilter\";\n    // Create elements\n    // NOTE: we do not need to add each individual element to `_disposers`\n    // because `filterPrimitives` has an event handler which automatically adds\n    // anything added to it to `_disposers`\n    _this.feGaussianBlur = _this.paper.add(\"feGaussianBlur\");\n    _this.feGaussianBlur.attr({\n      \"result\": \"blurOut\",\n      \"in\": \"SourceGraphic\"\n    });\n    _this.filterPrimitives.push(_this.feGaussianBlur);\n    // Set default properties\n    _this.width = 200;\n    _this.height = 200;\n    _this.blur = 1.5;\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(BlurFilter.prototype, \"blur\", {\n    /**\r\n     * @return Blur\r\n     */\n    get: function () {\n      return this.properties.blur;\n    },\n    /**\r\n     * Blur value.\r\n     *\r\n     * The bigger the value, the blurrier the target element will become.\r\n     *\r\n     * @default 1.5\r\n     * @param value Blur\r\n     */\n    set: function (value) {\n      this.properties.blur = value;\n      this.feGaussianBlur.attr({\n        \"stdDeviation\": value / this.scale\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return BlurFilter;\n}(Filter);\nexport { BlurFilter };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"BlurFilter\"] = BlurFilter;","map":{"version":3,"names":["Filter","registry","BlurFilter","_super","__extends","_this","call","className","feGaussianBlur","paper","add","attr","filterPrimitives","push","width","height","blur","applyTheme","Object","defineProperty","prototype","get","properties","set","value","scale","registeredClasses"],"sources":["../../../../../../src/.internal/core/rendering/filters/BlurFilter.ts"],"sourcesContent":["/**\r\n * Module for \"Blur\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { registry } from \"../../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Blur\" filter.\r\n */\r\nexport interface BlurFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Horizontal offset in pixels.\r\n\t *\r\n\t * @ignore Deprecated\r\n\t * @deprecated ?\r\n\t * @todo Remove?\r\n\t */\r\n\tdx?: number;\r\n\r\n\t/**\r\n\t * Vertical offset in pixels.\r\n\t *\r\n\t * @ignore Deprecated\r\n\t * @deprecated ?\r\n\t * @todo Remove?\r\n\t */\r\n\tdy?: number;\r\n\r\n\t/**\r\n\t * Blur value.\r\n\t */\r\n\tblur: number;\r\n\r\n\t/**\r\n\t * Opacity. (0-1)\r\n\t *\r\n\t * @ignore Deprecated\r\n\t * @deprecated ?\r\n\t * @todo Remove?\r\n\t */\r\n\topacity?: number;\r\n\r\n\t/**\r\n\t * Color.\r\n\t *\r\n\t * @ignore Deprecated\r\n\t * @deprecated ?\r\n\t * @todo Remove?\r\n\t */\r\n\tcolor?: Color;\r\n\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a \"Blur\" filter.\r\n */\r\nexport class BlurFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: BlurFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t * @see [@link BlurFilterProperties]\r\n\t */\r\n\t//public propertyValues: Dictionary<BlurFilterProperties, any>;\r\n\r\n\t/**\r\n\t * Reference to the `<feGaussianBlur>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feGaussianBlur: AMElement;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"BlurFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\r\n\t\tthis.feGaussianBlur = this.paper.add(\"feGaussianBlur\");\r\n\t\tthis.feGaussianBlur.attr({ \"result\": \"blurOut\", \"in\": \"SourceGraphic\" });\r\n\t\tthis.filterPrimitives.push(this.feGaussianBlur);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.width = 200;\r\n\t\tthis.height = 200;\r\n\t\tthis.blur = 1.5;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Blur value.\r\n\t *\r\n\t * The bigger the value, the blurrier the target element will become.\r\n\t *\r\n\t * @default 1.5\r\n\t * @param value Blur\r\n\t */\r\n\tpublic set blur(value: number) {\r\n\t\tthis.properties.blur = value;\r\n\t\tthis.feGaussianBlur.attr({ \"stdDeviation\": value / this.scale });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Blur\r\n\t */\r\n\tpublic get blur(): number {\r\n\t\treturn this.properties.blur;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"BlurFilter\"] = BlurFilter;\r\n"],"mappings":";AAAA;;;;AAIA;;;;;;AAMA,SAASA,MAAM,QAA0B,UAAU;AAGnD,SAASC,QAAQ,QAAQ,gBAAgB;AAwDxC;AAGD;;;;;;AAOA;;;AAGA,IAAAC,UAAA,0BAAAC,MAAA;EAAgCC,SAAA,CAAAF,UAAA,EAAAC,MAAA;EAoB/B;;;EAGA,SAAAD,WAAA;IAAA,IAAAG,KAAA,GACCF,MAAA,CAAAG,IAAA,MAAO;IAEPD,KAAI,CAACE,SAAS,GAAG,YAAY;IAE7B;IACA;IACA;IACA;IAEAF,KAAI,CAACG,cAAc,GAAGH,KAAI,CAACI,KAAK,CAACC,GAAG,CAAC,gBAAgB,CAAC;IACtDL,KAAI,CAACG,cAAc,CAACG,IAAI,CAAC;MAAE,QAAQ,EAAE,SAAS;MAAE,IAAI,EAAE;IAAe,CAAE,CAAC;IACxEN,KAAI,CAACO,gBAAgB,CAACC,IAAI,CAACR,KAAI,CAACG,cAAc,CAAC;IAE/C;IACAH,KAAI,CAACS,KAAK,GAAG,GAAG;IAChBT,KAAI,CAACU,MAAM,GAAG,GAAG;IACjBV,KAAI,CAACW,IAAI,GAAG,GAAG;IAEfX,KAAI,CAACY,UAAU,EAAE;;EAClB;EAUAC,MAAA,CAAAC,cAAA,CAAWjB,UAAA,CAAAkB,SAAA,QAAI;IAKf;;;SAGA,SAAAC,CAAA;MACC,OAAO,IAAI,CAACC,UAAU,CAACN,IAAI;IAC5B,CAAC;IAlBD;;;;;;;;SAQA,SAAAO,CAAgBC,KAAa;MAC5B,IAAI,CAACF,UAAU,CAACN,IAAI,GAAGQ,KAAK;MAC5B,IAAI,CAAChB,cAAc,CAACG,IAAI,CAAC;QAAE,cAAc,EAAEa,KAAK,GAAG,IAAI,CAACC;MAAK,CAAE,CAAC;IACjE,CAAC;;;;EASF,OAAAvB,UAAC;AAAD,CAAC,CAjE+BF,MAAM;;AAmEtC;;;;;;AAMAC,QAAQ,CAACyB,iBAAiB,CAAC,YAAY,CAAC,GAAGxB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}