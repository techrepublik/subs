{"ast":null,"code":"import { geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw } from \"d3-geo\";\nimport { acos, atan2, cos, sin, sqrt, tan } from \"./math.js\";\nimport twoPoint from \"./twoPoint.js\";\nexport function twoPointEquidistantRaw(z0) {\n  if (!(z0 *= 2)) return azimuthalEquidistantRaw;\n  var lambdaa = -z0 / 2,\n    lambdab = -lambdaa,\n    z02 = z0 * z0,\n    tanLambda0 = tan(lambdab),\n    S = 0.5 / sin(lambdab);\n  function forward(lambda, phi) {\n    var za = acos(cos(phi) * cos(lambda - lambdaa)),\n      zb = acos(cos(phi) * cos(lambda - lambdab)),\n      ys = phi < 0 ? -1 : 1;\n    za *= za, zb *= zb;\n    return [(za - zb) / (2 * z0), ys * sqrt(4 * z02 * zb - (z02 - za + zb) * (z02 - za + zb)) / (2 * z0)];\n  }\n  forward.invert = function (x, y) {\n    var y2 = y * y,\n      cosza = cos(sqrt(y2 + (t = x + lambdaa) * t)),\n      coszb = cos(sqrt(y2 + (t = x + lambdab) * t)),\n      t,\n      d;\n    return [atan2(d = cosza - coszb, t = (cosza + coszb) * tanLambda0), (y < 0 ? -1 : 1) * acos(sqrt(t * t + d * d) * S)];\n  };\n  return forward;\n}\nexport function twoPointEquidistantUsa() {\n  return twoPointEquidistant([-158, 21.5], [-77, 39]).clipAngle(130).scale(122.571);\n}\nexport default function twoPointEquidistant(p0, p1) {\n  return twoPoint(twoPointEquidistantRaw, p0, p1);\n}","map":{"version":3,"names":["geoAzimuthalEquidistantRaw","azimuthalEquidistantRaw","acos","atan2","cos","sin","sqrt","tan","twoPoint","twoPointEquidistantRaw","z0","lambdaa","lambdab","z02","tanLambda0","S","forward","lambda","phi","za","zb","ys","invert","x","y","y2","cosza","t","coszb","d","twoPointEquidistantUsa","twoPointEquidistant","clipAngle","scale","p0","p1"],"sources":["/Users/admin/Desktop/techrepublik/pro/subs/vue_subs/node_modules/d3-geo-projection/src/twoPointEquidistant.js"],"sourcesContent":["import {geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw} from \"d3-geo\";\nimport {acos, atan2, cos, sin, sqrt, tan} from \"./math.js\";\nimport twoPoint from \"./twoPoint.js\";\n\nexport function twoPointEquidistantRaw(z0) {\n  if (!(z0 *= 2)) return azimuthalEquidistantRaw;\n  var lambdaa = -z0 / 2,\n      lambdab = -lambdaa,\n      z02 = z0 * z0,\n      tanLambda0 = tan(lambdab),\n      S = 0.5 / sin(lambdab);\n\n  function forward(lambda, phi) {\n    var za = acos(cos(phi) * cos(lambda - lambdaa)),\n        zb = acos(cos(phi) * cos(lambda - lambdab)),\n        ys = phi < 0 ? -1 : 1;\n    za *= za, zb *= zb;\n    return [\n      (za - zb) / (2 * z0),\n      ys * sqrt(4 * z02 * zb - (z02 - za + zb) * (z02 - za + zb)) / (2 * z0)\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var y2 = y * y,\n        cosza = cos(sqrt(y2 + (t = x + lambdaa) * t)),\n        coszb = cos(sqrt(y2 + (t = x + lambdab) * t)),\n        t,\n        d;\n    return [\n      atan2(d = cosza - coszb, t = (cosza + coszb) * tanLambda0),\n      (y < 0 ? -1 : 1) * acos(sqrt(t * t + d * d) * S)\n    ];\n  };\n\n  return forward;\n}\n\nexport function twoPointEquidistantUsa() {\n  return twoPointEquidistant([-158, 21.5], [-77, 39])\n      .clipAngle(130)\n      .scale(122.571);\n}\n\nexport default function twoPointEquidistant(p0, p1) {\n  return twoPoint(twoPointEquidistantRaw, p0, p1);\n}\n"],"mappings":"AAAA,SAAQA,0BAA0B,IAAIC,uBAAuB,QAAO,QAAQ;AAC5E,SAAQC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,GAAG,QAAO,WAAW;AAC1D,OAAOC,QAAQ,MAAM,eAAe;AAEpC,OAAO,SAASC,sBAAsBA,CAACC,EAAE,EAAE;EACzC,IAAI,EAAEA,EAAE,IAAI,CAAC,CAAC,EAAE,OAAOT,uBAAuB;EAC9C,IAAIU,OAAO,GAAG,CAACD,EAAE,GAAG,CAAC;IACjBE,OAAO,GAAG,CAACD,OAAO;IAClBE,GAAG,GAAGH,EAAE,GAAGA,EAAE;IACbI,UAAU,GAAGP,GAAG,CAACK,OAAO,CAAC;IACzBG,CAAC,GAAG,GAAG,GAAGV,GAAG,CAACO,OAAO,CAAC;EAE1B,SAASI,OAAOA,CAACC,MAAM,EAAEC,GAAG,EAAE;IAC5B,IAAIC,EAAE,GAAGjB,IAAI,CAACE,GAAG,CAACc,GAAG,CAAC,GAAGd,GAAG,CAACa,MAAM,GAAGN,OAAO,CAAC,CAAC;MAC3CS,EAAE,GAAGlB,IAAI,CAACE,GAAG,CAACc,GAAG,CAAC,GAAGd,GAAG,CAACa,MAAM,GAAGL,OAAO,CAAC,CAAC;MAC3CS,EAAE,GAAGH,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACzBC,EAAE,IAAIA,EAAE,EAAEC,EAAE,IAAIA,EAAE;IAClB,OAAO,CACL,CAACD,EAAE,GAAGC,EAAE,KAAK,CAAC,GAAGV,EAAE,CAAC,EACpBW,EAAE,GAAGf,IAAI,CAAC,CAAC,GAAGO,GAAG,GAAGO,EAAE,GAAG,CAACP,GAAG,GAAGM,EAAE,GAAGC,EAAE,KAAKP,GAAG,GAAGM,EAAE,GAAGC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAGV,EAAE,CAAC,CACvE;EACH;EAEAM,OAAO,CAACM,MAAM,GAAG,UAASC,CAAC,EAAEC,CAAC,EAAE;IAC9B,IAAIC,EAAE,GAAGD,CAAC,GAAGA,CAAC;MACVE,KAAK,GAAGtB,GAAG,CAACE,IAAI,CAACmB,EAAE,GAAG,CAACE,CAAC,GAAGJ,CAAC,GAAGZ,OAAO,IAAIgB,CAAC,CAAC,CAAC;MAC7CC,KAAK,GAAGxB,GAAG,CAACE,IAAI,CAACmB,EAAE,GAAG,CAACE,CAAC,GAAGJ,CAAC,GAAGX,OAAO,IAAIe,CAAC,CAAC,CAAC;MAC7CA,CAAC;MACDE,CAAC;IACL,OAAO,CACL1B,KAAK,CAAC0B,CAAC,GAAGH,KAAK,GAAGE,KAAK,EAAED,CAAC,GAAG,CAACD,KAAK,GAAGE,KAAK,IAAId,UAAU,CAAC,EAC1D,CAACU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAItB,IAAI,CAACI,IAAI,CAACqB,CAAC,GAAGA,CAAC,GAAGE,CAAC,GAAGA,CAAC,CAAC,GAAGd,CAAC,CAAC,CACjD;EACH,CAAC;EAED,OAAOC,OAAO;AAChB;AAEA,OAAO,SAASc,sBAAsBA,CAAA,EAAG;EACvC,OAAOC,mBAAmB,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAC9CC,SAAS,CAAC,GAAG,CAAC,CACdC,KAAK,CAAC,OAAO,CAAC;AACrB;AAEA,eAAe,SAASF,mBAAmBA,CAACG,EAAE,EAAEC,EAAE,EAAE;EAClD,OAAO3B,QAAQ,CAACC,sBAAsB,EAAEyB,EAAE,EAAEC,EAAE,CAAC;AACjD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}