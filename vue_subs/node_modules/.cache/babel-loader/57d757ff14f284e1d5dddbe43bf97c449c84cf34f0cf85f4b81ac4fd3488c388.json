{"ast":null,"code":"import { abs, acos, asin, atan, cos, epsilon, pi, sin, tan } from \"./math.js\";\nimport parallel1 from \"./parallel1.js\";\nexport function rectangularPolyconicRaw(phi0) {\n  var sinPhi0 = sin(phi0);\n  function forward(lambda, phi) {\n    var A = sinPhi0 ? tan(lambda * sinPhi0 / 2) / sinPhi0 : lambda / 2;\n    if (!phi) return [2 * A, -phi0];\n    var E = 2 * atan(A * sin(phi)),\n      cotPhi = 1 / tan(phi);\n    return [sin(E) * cotPhi, phi + (1 - cos(E)) * cotPhi - phi0];\n  }\n\n  // TODO return null for points outside outline.\n  forward.invert = function (x, y) {\n    if (abs(y += phi0) < epsilon) return [sinPhi0 ? 2 * atan(sinPhi0 * x / 2) / sinPhi0 : x, 0];\n    var k = x * x + y * y,\n      phi = 0,\n      i = 10,\n      delta;\n    do {\n      var tanPhi = tan(phi),\n        secPhi = 1 / cos(phi),\n        j = k - 2 * y * phi + phi * phi;\n      phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n    } while (abs(delta) > epsilon && --i > 0);\n    var E = x * (tanPhi = tan(phi)),\n      A = tan(abs(y) < abs(phi + 1 / tanPhi) ? asin(E) * 0.5 : acos(E) * 0.5 + pi / 4) / sin(phi);\n    return [sinPhi0 ? 2 * atan(sinPhi0 * A) / sinPhi0 : 2 * A, phi];\n  };\n  return forward;\n}\nexport default function () {\n  return parallel1(rectangularPolyconicRaw).scale(131.215);\n}","map":{"version":3,"names":["abs","acos","asin","atan","cos","epsilon","pi","sin","tan","parallel1","rectangularPolyconicRaw","phi0","sinPhi0","forward","lambda","phi","A","E","cotPhi","invert","x","y","k","i","delta","tanPhi","secPhi","j","scale"],"sources":["/home/josh/Documents/projects/subs/vue_subs/node_modules/d3-geo-projection/src/rectangularPolyconic.js"],"sourcesContent":["import {abs, acos, asin, atan, cos, epsilon, pi, sin, tan} from \"./math.js\";\nimport parallel1 from \"./parallel1.js\";\n\nexport function rectangularPolyconicRaw(phi0) {\n  var sinPhi0 = sin(phi0);\n\n  function forward(lambda, phi) {\n    var A = sinPhi0 ? tan(lambda * sinPhi0 / 2) / sinPhi0 : lambda / 2;\n    if (!phi) return [2 * A, -phi0];\n    var E = 2 * atan(A * sin(phi)),\n        cotPhi = 1 / tan(phi);\n    return [\n      sin(E) * cotPhi,\n      phi + (1 - cos(E)) * cotPhi - phi0\n    ];\n  }\n\n  // TODO return null for points outside outline.\n  forward.invert = function(x, y) {\n    if (abs(y += phi0) < epsilon) return [sinPhi0 ? 2 * atan(sinPhi0 * x / 2) / sinPhi0 : x, 0];\n    var k = x * x + y * y,\n        phi = 0,\n        i = 10, delta;\n    do {\n      var tanPhi = tan(phi),\n          secPhi = 1 / cos(phi),\n          j = k - 2 * y * phi + phi * phi;\n      phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n    } while (abs(delta) > epsilon && --i > 0);\n    var E = x * (tanPhi = tan(phi)),\n        A = tan(abs(y) < abs(phi + 1 / tanPhi) ? asin(E) * 0.5 : acos(E) * 0.5 + pi / 4) / sin(phi);\n    return [\n      sinPhi0 ? 2 * atan(sinPhi0 * A) / sinPhi0 : 2 * A,\n      phi\n    ];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(rectangularPolyconicRaw)\n      .scale(131.215);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}