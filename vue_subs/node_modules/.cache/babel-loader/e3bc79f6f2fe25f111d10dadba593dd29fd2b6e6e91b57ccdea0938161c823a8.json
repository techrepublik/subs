{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport Layout from \"@/layout/main.vue\";\nimport pageheader from \"@/components/page-header.vue\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n// import flatPickr from \"vue-flatpickr-component\";\n// import \"flatpickr/dist/flatpickr.css\";\nimport { useAuthStore } from '@/stores/auth';\n// import { BoldIcon } from \"@zhuowenli/vue-feather-icons\";\n\nexport default {\n  name: \"BILLINGS\",\n  components: {\n    Layout,\n    pageheader\n  },\n  setup() {\n    const authStore = useAuthStore();\n    return {\n      authStore\n    };\n  },\n  data() {\n    return {\n      modalShow: false,\n      operation: false,\n      subscriptions: [],\n      regions: [],\n      provinces: [],\n      municipalities: [],\n      barangays: [],\n      plans: [],\n      modems: [],\n      subs1: {},\n      billing: {},\n      bills: [],\n      /* search */\n      searchQuery: \"\",\n      // Search input\n      loading: false\n    };\n  },\n  created() {},\n  mounted() {\n    const sub_id = this.$route.query.sub_id;\n    this.getSubscription1(sub_id);\n    this.getBills(sub_id);\n  },\n  methods: {\n    async updateRecord() {\n      try {\n        if (this.operation == false) {\n          await axios.post(\"/api/v1/subscriptions/\", {\n            subscriber: this.subscriber.id,\n            employee: this.authStore.user.id,\n            alias: this.subscription.alias,\n            note: this.subscription.note,\n            referred_by: this.subscription.referred_by,\n            region: this.subscription.region,\n            province: this.subscription.province,\n            municipality: this.subscription.municipality,\n            barangay: this.subscription.barangay,\n            latitude: this.subscription.latitude,\n            longitude: this.subscription.longitude,\n            plan: this.subscription.plan,\n            pon_no: this.subscription.pon_no,\n            nap_no: this.subscription.nap_no,\n            modem_serial: this.subscription.modem_serial,\n            modem: this.subscription.modem,\n            sub_status: this.subscription.sub_status,\n            sub_type: this.subscription.sub_type,\n            date_activated: this.subscription.date_activated,\n            date_terminated: this.subscription.date_terminated,\n            data_suspended: this.subscription.date_suspended,\n            modem_username: this.subscription.modem_username,\n            modem_password: this.subscription.modem_password,\n            created_on: Date.now()\n          }).then(response => {\n            console.log(response.data);\n            this.modalShow = !this.modalShow;\n            Swal.fire({\n              position: \"top-end\",\n              icon: \"success\",\n              title: \"Your work has been saved\",\n              showConfirmButton: false,\n              timer: 1500\n            });\n            this.getSubscribers();\n          });\n        } else {\n          await axios.patch(`/api/v1/subscriptions/${this.subscription.id}/`, {\n            subscriber: this.subscriber.id,\n            employee: this.authStore.user.id,\n            alias: this.subscription.alias,\n            note: this.subscription.note,\n            referred_by: this.subscription.referred_by,\n            region: this.subscription.region,\n            province: this.subscription.province,\n            municipality: this.subscription.municipality,\n            barangay: this.subscription.barangay,\n            latitude: this.subscription.latitude,\n            longitude: this.subscription.longitude,\n            plan: this.subscription.plan,\n            pon_no: this.subscription.pon_no,\n            nap_no: this.subscription.nap_no,\n            modem_serial: this.subscription.modem_serial,\n            modem: this.subscription.modem,\n            sub_status: this.subscription.sub_status,\n            sub_type: this.subscription.sub_type,\n            date_activated: this.subscription.date_activated,\n            date_terminated: this.subscription.date_terminated,\n            data_suspended: this.subscription.date_suspended,\n            modem_username: this.subscription.modem_username,\n            modem_password: this.subscription.modem_password\n          }).then(response => {\n            console.log(response.data);\n            this.modalShow = !this.modalShow;\n            Swal.fire({\n              position: \"top-end\",\n              icon: \"success\",\n              title: \"Your work has been saved\",\n              showConfirmButton: false,\n              timer: 1500\n            });\n            this.getSubscribers();\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching subscribers:', error);\n      }\n    },\n    async getSubscriptions() {\n      try {\n        await axios.get(\"/api/v1/subscriptions/\").then(response => {\n          this.subscriptions = response.data;\n        });\n      } catch (error) {\n        console.error('Error fetching subscriptions:', error);\n      }\n    },\n    async getSubscription(subs_id) {\n      this.modalShow = !this.modalShow;\n      this.operation = true;\n      await axios.get(`/api/v1/subscriptions/${subs_id}/`).then(response => {\n        this.subscription = response.data;\n        this.subs1 = response.data;\n      }).catch(error => {\n        console.log(JSON.stringify(error));\n      });\n    },\n    async getSubscription1(subs_id) {\n      await axios.get(`/api/v1/subscriptions/${subs_id}/`).then(response => {\n        this.subs1 = response.data;\n      }).catch(error => {\n        console.log(JSON.stringify(error));\n      });\n    },\n    async deleteSubscription(subs_id) {\n      await axios.delete(`/api/v1/subscriptions/${subs_id}/`).then(() => {\n        this.subscriptions = this.subscriptions.filter(subs => subs.id !== subs_id);\n      });\n    },\n    showAddModalOpen() {\n      this.subscription = {};\n      this.modalShow1 = !this.modalShow1;\n      this.operation = true;\n    },\n    showAddModalClose() {\n      this.subscription = {};\n      this.modalShow1 = !this.modalShow1;\n      this.operation = false;\n    },\n    cancelDelete(subs_id) {\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: \"btn btn-success\",\n          cancelButton: \"btn btn-danger ml-2\"\n        },\n        buttonsStyling: false\n      });\n      swalWithBootstrapButtons.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        icon: \"warning\",\n        confirmButtonText: \"Yes, delete it!\",\n        cancelButtonText: \"No, cancel!\",\n        showCancelButton: true\n      }).then(result => {\n        if (result.value) {\n          this.deleteSubscription(subs_id);\n          swalWithBootstrapButtons.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n        } else if (/* Read more about handling dismissals below */\n        result.dismiss === Swal.DismissReason.cancel) {\n          swalWithBootstrapButtons.fire(\"Cancelled\", \"Delete operation was cancelled.\", \"error\");\n        }\n      });\n    },\n    formattedDateTime(date_time_field) {\n      if (!date_time_field) return '';\n\n      // Parse the date-time string\n      const date = new Date(Date.parse(date_time_field));\n\n      // Check if the parsed date is valid\n      if (isNaN(date.getTime())) {\n        console.error('Invalid date:', date_time_field);\n        return 'Invalid date';\n      }\n\n      // Extract parts of the date\n      const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      const month = months[date.getMonth()];\n      const day = String(date.getDate()).padStart(2, '0');\n      const year = date.getFullYear();\n\n      // Extract and format time\n      const hours = date.getHours();\n      const minutes = String(date.getMinutes()).padStart(2, '0');\n      const period = hours >= 12 ? 'PM' : 'AM';\n      const formattedHours = hours % 12 || 12; // Convert 24-hour to 12-hour format\n\n      // Combine formatted parts\n      return `${month}-${day}-${year} @ ${formattedHours}:${minutes} ${period}`;\n    },\n    formattedDateTimeDate(date_time_field) {\n      if (!date_time_field) return '';\n\n      // Parse the date-time string\n      const date = new Date(Date.parse(date_time_field));\n\n      // Check if the parsed date is valid\n      if (isNaN(date.getTime())) {\n        console.error('Invalid date:', date_time_field);\n        return 'Invalid date';\n      }\n\n      // Extract parts of the date\n      const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      const month = months[date.getMonth()];\n      const day = String(date.getDate()).padStart(2, '0');\n      const year = date.getFullYear();\n\n      // Combine formatted parts\n      return `${month}-${day}-${year}`;\n    },\n    formattedBirthDate(date_time_field) {\n      if (!date_time_field) return '';\n\n      // Parse the date-time string\n      const date = new Date(Date.parse(date_time_field));\n\n      // Check if the parsed date is valid\n      if (isNaN(date.getTime())) {\n        console.error('Invalid date:', date_time_field);\n        return 'Invalid date';\n      }\n\n      // Extract parts of the date\n      const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      const month = months[date.getMonth()];\n      const day = String(date.getDate()).padStart(2, '0');\n      const year = date.getFullYear();\n\n      // Combine formatted parts\n      return `${month}-${day}-${year}`;\n    },\n    async getBills(id) {\n      try {\n        this.loading = true;\n        await axios.get(`/api/v1/billings/?id=${id}`).then(response => {\n          this.bills = response.data;\n        });\n      } catch (error) {\n        console.log(\"Error fetching bills\", error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    /* search */\n    // Apply search\n    applySearch() {\n      this.getSubscribersSearch(); // Fetch data with current search query\n    },\n    async getSubscribersSearch() {\n      try {\n        const params = {};\n        this.loading = true;\n        if (this.searchQuery) {\n          params.search = this.searchQuery; // Add search query to parameters\n        }\n        const response = await axios.get(\"/api/v1/subscriptions/\", {\n          params\n        });\n        this.subscriptions = response.data;\n      } catch (error) {\n        console.error(\"Error fetching subscribers:\", error);\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["Layout","pageheader","axios","Swal","useAuthStore","name","components","setup","authStore","data","modalShow","operation","subscriptions","regions","provinces","municipalities","barangays","plans","modems","subs1","billing","bills","searchQuery","loading","created","mounted","sub_id","$route","query","getSubscription1","getBills","methods","updateRecord","post","subscriber","id","employee","user","alias","subscription","note","referred_by","region","province","municipality","barangay","latitude","longitude","plan","pon_no","nap_no","modem_serial","modem","sub_status","sub_type","date_activated","date_terminated","data_suspended","date_suspended","modem_username","modem_password","created_on","Date","now","then","response","console","log","fire","position","icon","title","showConfirmButton","timer","getSubscribers","patch","error","getSubscriptions","get","getSubscription","subs_id","catch","JSON","stringify","deleteSubscription","delete","filter","subs","showAddModalOpen","modalShow1","showAddModalClose","cancelDelete","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","text","confirmButtonText","cancelButtonText","showCancelButton","result","value","dismiss","DismissReason","cancel","formattedDateTime","date_time_field","date","parse","isNaN","getTime","months","month","getMonth","day","String","getDate","padStart","year","getFullYear","hours","getHours","minutes","getMinutes","period","formattedHours","formattedDateTimeDate","formattedBirthDate","applySearch","getSubscribersSearch","params","search"],"sources":["/home/josh/Documents/projects/subs/vue_subs/src/views/adashboard/billings.vue"],"sourcesContent":["<script>\nimport Layout from \"@/layout/main.vue\"\nimport pageheader from \"@/components/page-header.vue\"\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n// import flatPickr from \"vue-flatpickr-component\";\n// import \"flatpickr/dist/flatpickr.css\";\nimport { useAuthStore } from '@/stores/auth';\n// import { BoldIcon } from \"@zhuowenli/vue-feather-icons\";\n\n\nexport default {\n    name: \"BILLINGS\",\n    components: {\n        Layout, pageheader,\n    },\n    setup() {\n        const authStore = useAuthStore();\n        return {\n            authStore,\n        };\n    },\n    data() {\n        return {\n            modalShow: false,\n            operation: false,\n\n            subscriptions: [],\n            regions: [],\n            provinces: [],\n            municipalities: [],\n            barangays: [],\n            plans: [],\n            modems: [],\n            subs1: {},\n            billing: {},\n            bills: [],\n        \n            /* search */\n            searchQuery: \"\", // Search input\n            loading: false,\n        }\n    },\n    created() {\n    },\n    mounted() {\n        const sub_id = this.$route.query.sub_id;\n        this.getSubscription1(sub_id);\n        this.getBills(sub_id);\n    },\n    methods: {\n        async updateRecord() {\n            try {\n                if (this.operation==false) {\n                    await axios.post(\"/api/v1/subscriptions/\", { \n                        subscriber: this.subscriber.id,\n                        employee: this.authStore.user.id,\n                        alias: this.subscription.alias,\n                        note: this.subscription.note,\n                        referred_by: this.subscription.referred_by,\n                        region: this.subscription.region,\n                        province: this.subscription.province,\n                        municipality: this.subscription.municipality,\n                        barangay: this.subscription.barangay,\n                        latitude: this.subscription.latitude,\n                        longitude: this.subscription.longitude,\n                        plan: this.subscription.plan,\n                        pon_no: this.subscription.pon_no,\n                        nap_no: this.subscription.nap_no,\n                        modem_serial: this.subscription.modem_serial,\n                        modem: this.subscription.modem,\n                        sub_status: this.subscription.sub_status,\n                        sub_type: this.subscription.sub_type,\n                        date_activated: this.subscription.date_activated,\n                        date_terminated: this.subscription.date_terminated,\n                        data_suspended: this.subscription.date_suspended,\n                        modem_username: this.subscription.modem_username,\n                        modem_password: this.subscription.modem_password,\n                        created_on: Date.now()\n                    }).then((response) => {\n                        console.log(response.data);\n                        this.modalShow = !this.modalShow;\n                        Swal.fire({\n                            position: \"top-end\",\n                            icon: \"success\",\n                            title: \"Your work has been saved\",\n                            showConfirmButton: false,\n                            timer: 1500,\n                        });\n                        this.getSubscribers();\n                    });\n                } else {\n                    await axios.patch(`/api/v1/subscriptions/${this.subscription.id}/`, { \n                        subscriber: this.subscriber.id,\n                        employee: this.authStore.user.id,\n                        alias: this.subscription.alias,\n                        note: this.subscription.note,\n                        referred_by: this.subscription.referred_by,\n                        region: this.subscription.region,\n                        province: this.subscription.province,\n                        municipality: this.subscription.municipality,\n                        barangay: this.subscription.barangay,\n                        latitude: this.subscription.latitude,\n                        longitude: this.subscription.longitude,\n                        plan: this.subscription.plan,\n                        pon_no: this.subscription.pon_no,\n                        nap_no: this.subscription.nap_no,\n                        modem_serial: this.subscription.modem_serial,\n                        modem: this.subscription.modem,\n                        sub_status: this.subscription.sub_status,\n                        sub_type: this.subscription.sub_type,\n                        date_activated: this.subscription.date_activated,\n                        date_terminated: this.subscription.date_terminated,\n                        data_suspended: this.subscription.date_suspended,\n                        modem_username: this.subscription.modem_username,\n                        modem_password: this.subscription.modem_password\n                    }).then((response) => {\n                        console.log(response.data);\n                        this.modalShow = !this.modalShow;\n                        Swal.fire({\n                            position: \"top-end\",\n                            icon: \"success\",\n                            title: \"Your work has been saved\",\n                            showConfirmButton: false,\n                            timer: 1500,\n                        });\n                        this.getSubscribers();\n                    });\n                }\n            } catch(error) {\n                console.error('Error fetching subscribers:', error);\n            }\n\n        },\n        async getSubscriptions() {\n            try {\n                await axios.get(\"/api/v1/subscriptions/\").then((response)=> {\n                    this.subscriptions = response.data;\n                });\n            } catch (error) {\n                console.error('Error fetching subscriptions:', error);\n            }\n        },\n        async getSubscription(subs_id) {\n            this.modalShow = !this.modalShow;\n            this.operation = true;\n            await axios.get(`/api/v1/subscriptions/${subs_id}/`).then((response) => {\n                    this.subscription = response.data;\n                    this.subs1 = response.data;\n                }).catch(error => {\n                    console.log(JSON.stringify(error));\n            });\n        },\n        async getSubscription1(subs_id) {\n            await axios.get(`/api/v1/subscriptions/${subs_id}/`).then((response) => {\n                    this.subs1 = response.data;\n                }).catch(error => {\n                    console.log(JSON.stringify(error));\n            });\n        },\n        async deleteSubscription(subs_id) {\n            await axios.delete(`/api/v1/subscriptions/${subs_id}/`).then(() => {\n                this.subscriptions = this.subscriptions.filter((subs) => subs.id !== subs_id);\n            });\n        },\n        showAddModalOpen() {\n            this.subscription = {};\n            this.modalShow1 = !this.modalShow1;\n            this.operation = true;\n        },\n        showAddModalClose() {\n            this.subscription = {};\n            this.modalShow1 = !this.modalShow1;\n            this.operation = false;\n        },\n        cancelDelete(subs_id) {\n            const swalWithBootstrapButtons = Swal.mixin({\n                customClass: {\n                    confirmButton: \"btn btn-success\",\n                    cancelButton: \"btn btn-danger ml-2\",\n                },\n                buttonsStyling: false,\n            });\n\n            swalWithBootstrapButtons\n                .fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    confirmButtonText: \"Yes, delete it!\",\n                    cancelButtonText: \"No, cancel!\",\n                    showCancelButton: true,\n                })\n                .then((result) => {\n                    if (result.value) {\n                        this.deleteSubscription(subs_id);\n                        swalWithBootstrapButtons.fire(\n                            \"Deleted!\",\n                            \"Your file has been deleted.\",\n                            \"success\"\n                        );\n                    } else if (\n                        /* Read more about handling dismissals below */\n                        result.dismiss === Swal.DismissReason.cancel\n                    ) {\n                        swalWithBootstrapButtons.fire(\n                            \"Cancelled\",\n                            \"Delete operation was cancelled.\",\n                            \"error\"\n                        );\n                    }\n                });\n        },\n  \n        formattedDateTime(date_time_field) {\n            if (!date_time_field) return '';\n\n            // Parse the date-time string\n            const date = new Date(Date.parse(date_time_field));\n\n            // Check if the parsed date is valid\n            if (isNaN(date.getTime())) {\n                console.error('Invalid date:', date_time_field);\n                return 'Invalid date';\n            }\n\n            // Extract parts of the date\n            const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n            const month = months[date.getMonth()];\n            const day = String(date.getDate()).padStart(2, '0');\n            const year = date.getFullYear();\n\n            // Extract and format time\n            const hours = date.getHours();\n            const minutes = String(date.getMinutes()).padStart(2, '0');\n            const period = hours >= 12 ? 'PM' : 'AM';\n            const formattedHours = hours % 12 || 12; // Convert 24-hour to 12-hour format\n\n            // Combine formatted parts\n            return `${month}-${day}-${year} @ ${formattedHours}:${minutes} ${period}`;\n        },\n        formattedDateTimeDate(date_time_field) {\n            if (!date_time_field) return '';\n\n            // Parse the date-time string\n            const date = new Date(Date.parse(date_time_field));\n\n            // Check if the parsed date is valid\n            if (isNaN(date.getTime())) {\n                console.error('Invalid date:', date_time_field);\n                return 'Invalid date';\n            }\n\n            // Extract parts of the date\n            const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n            const month = months[date.getMonth()];\n            const day = String(date.getDate()).padStart(2, '0');\n            const year = date.getFullYear();\n\n            // Combine formatted parts\n            return `${month}-${day}-${year}`;\n        },\n        formattedBirthDate(date_time_field) {\n            if (!date_time_field) return '';\n\n            // Parse the date-time string\n            const date = new Date(Date.parse(date_time_field));\n\n            // Check if the parsed date is valid\n            if (isNaN(date.getTime())) {\n                console.error('Invalid date:', date_time_field);\n                return 'Invalid date';\n            }\n\n            // Extract parts of the date\n            const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n            const month = months[date.getMonth()];\n            const day = String(date.getDate()).padStart(2, '0');\n            const year = date.getFullYear();\n\n            // Combine formatted parts\n            return `${month}-${day}-${year}`;\n        },\n        async getBills(id) {\n            try {\n                this.loading = true;\n                await axios.get(`/api/v1/billings/?id=${id}`).then((response) => {\n                    this.bills = response.data;\n                })\n            } catch (error) {\n                console.log(\"Error fetching bills\", error);\n            } finally {\n                this.loading = false;\n            }\n        },\n\n        /* search */\n        // Apply search\n        applySearch() {\n            this.getSubscribersSearch(); // Fetch data with current search query\n        },\n        async getSubscribersSearch() {\n            try {\n                const params = {};\n                this.loading = true;\n                if (this.searchQuery) {\n                    params.search = this.searchQuery; // Add search query to parameters\n                }\n                const response = await axios.get(\"/api/v1/subscriptions/\", { params });\n                this.subscriptions = response.data;\n            } catch (error) {\n                console.error(\"Error fetching subscribers:\", error);\n            } finally {\n                this.loading=false;\n            }\n        },\n    }\n}\n</script>\n\n<template>\n    <Layout>\n        <pageheader title=\"Billing list\" pageTitle=\"Billings\" />\n        <BRow>\n            <BCol class=\"col-sm-12\">\n                <BCard no-body class=\"table-card\">\n                    <BCardBody>\n                        <div class=\"d-flex justify-content-between align-items-center p-sm-4 pb-sm-2\">\n                            <!-- Search Input with Magnifying Glass -->\n                            <div class=\"\">\n                                <router-link to=\"/subscriptions\" class=\"pc-link\">\n                                    <span class=\"pc-micon\">\n                                        <i class=\"ti ti-arrow-left f-18\"> Back</i>\n                                    </span>\n                                </router-link>\n                            </div>\n\n                            <!-- Add Subscriber Button -->\n                                <!-- <router-link to=\"/add-product\" class=\"btn btn-primary\"> <i class=\"ti ti-plus f-18\"></i> Add Region </router-link>-->\n                            <BButton variant=\"primary\" class=\"btn btn-sm\" @click=\"showAddModalOpen\">Add Billing</BButton>\n                        </div>\n                        <div class=\"d-flex justify-content-between align-items-center p-sm-4 pb-sm-2 mb-3\">\n                            <div>\n                                <h5>{{subs1.first_name}} {{subs1.last_name}}</h5>\n                                <span>Account: <strong>{{ subs1.no }}</strong> - <span class=\"ms-1\"> {{ subs1.alias }}</span>\n                                    <span v-if=\"subs1.bill_schedule=='start'\" class=\"badge bg-success text-dark ms-1\">1</span>\n                                    <span v-else-if=\"subs1.bill_schedule=='end'\" class=\"badge bg-primary text-dark ms-1\">2</span>\n                                    <span v-else class=\"badge bg-warning text-dark ms-1\">0</span>\n                                </span><br />\n                                <span>Type: <strong>{{ subs1.sub_type }}</strong></span><br />\n                                <span>Plan: <strong>{{ subs1.plan_name }}</strong></span>\n                            </div>\n                        </div>\n                        <div class=\"table-responsive fixed-height\">\n                            <!-- Show Spinner While Loading -->\n                            <div v-if=\"loading\" class=\"text-center p-4\">\n                                <BSpinner label=\"Loading...\"></BSpinner>\n                            </div>\n                            <table v-else class=\"table table-hover table-sm tbl-product\" id=\"pc-dt-simple-1\">\n                                <thead>\n                                    <tr>\n                                        <th class=\"text-end\">#</th>\n                                        <th>Billing #</th>\n                                        <th>Date/Type</th>\n                                        <th class=\"text-end\">Amount</th>\n                                        <th>Remarks</th>\n                                        <th>Billed by</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr v-for=\"(bill, index) in bills\" :key=\"bill.id\"\n                                        :class=\"{ 'table-active': selectedRowBill === bill.id}\"\n                                        @click=\"selectRowBills(bill.id)\"\n                                        @dblclick=\"goToNextTabPay(bill.id)\">\n                                        <td class=\"text-end\">{{index + 1}}</td>\n                                        <td>\n                                            <BRow class=\"d-flex\">\n                                                <BCol>\n                                                    <h6 class=\"mb-1\">\n                                                        {{ bill.billing_no }}\n                                                        <span v-if=\"bill.is_paid\" class=\"badge bg-success text-dark\">Paid</span>\n                                                        <span v-else class=\"badge bg-danger text-dark\">Unpaid</span>\n                                                        <span v-if=\"bill.is_partial\" class=\"badge bg-warning ms-1\">Partial</span>\n                                                    </h6>\n                                                    <p class=\"text-muted f-12 mb-0\">{{ bill.collector_first_name }} {{ bill.collector_last_name }}</p>\n                                                </BCol>\n                                            </BRow>\n                                        </td>\n                                        <td>\n                                            <BRow class=\"d-flex\">\n                                                <BCol>\n                                                    <h6 class=\"mb-1\">{{ formattedDateTime(bill.billing_date) }}</h6>\n                                                    <p class=\"text-muted f-12 mb-0\">{{ bill.bill_type }} </p>\n                                                </BCol>\n                                            </BRow>\n                                        </td>\n                                        <td class=\"text-end\">\n                                            <BRow class=\"d-flex\">\n                                                <BCol>\n                                                    <h6 class=\"mb-1\">{{ bill.amount_due }}</h6>\n                                                    <p class=\"text-muted f-12 mb-0\">{{ bill.is_paid}}</p>\n                                                </BCol>\n                                            </BRow>\n                                        </td>\n                                        <td>\n                                            <BRow class=\"d-flex\">\n                                                <BCol>\n                                                    <h6 class=\"mb-1\">{{ bill.notice }}</h6>\n                                                    <p class=\"text-muted f-12 mb-0\">{{ bill.remarks}}</p>\n                                                </BCol>\n                                            </BRow>\n                                        </td>\n                                        <td class=\"text-center\">\n                                            <h6 class=\"mb-1\">{{bill.first_name}} {{ bill.last_name }}</h6>\n                                            <p class=\"text-muted f-12 mb-0\">\n                                                {{ formattedDateTime(bill.updated_on)}}\n                                            </p>\n                                            <div class=\"prod-action-links\">\n                                                <ul class=\"list-inline me-auto mb-0\">\n                                                    <!--\n                                                    <li class=\"list-inline-item align-bottom\" data-bs-toggle=\"tooltip\" title=\"Subscriptions\">\n                                                        <a href=\"#\" @click=\"showAddModal(bill.id)\" class=\"avtar avtar-xs btn-link-secondary btn-pc-default\">\n                                                            <i class=\"ti ti-eye f-18\"></i>\n                                                        </a>\n                                                    </li>\n                                                    -->\n                                                    <li class=\"list-inline-item align-bottom\" data-bs-toggle=\"tooltip\" title=\"Edit\">\n                                                        <!-- \n                                                        <router-link to=\"/add-product\" class=\" avtar avtar-xs btn-link-success btn-pc-default\">\n                                                            <i class=\"ti ti-edit-circle f-18\"></i>\n                                                        </router-link> \n                                                        -->\n                                                        <a href=\"#\" @click=\"getBill(bill.id)\" class=\" avtar avtar-xs btn-link-success btn-pc-default\">\n                                                            <i class=\"ti ti-edit-circle f-18\"></i>\n                                                        </a>\n                                                    </li>\n                                                    <li class=\"list-inline-item align-bottom\" data-bs-toggle=\"tooltip\" title=\"Delete\">\n                                                        <a href=\"#\" @click=\"cancelDeleteBill(bill.id)\" class=\"avtar avtar-xs btn-link-danger btn-pc-default\">\n                                                            <i class=\"ti ti-trash f-18\"></i>\n                                                        </a>\n                                                    </li>\n                                                </ul>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </BCardBody>\n                </BCard>\n            </BCol>\n        </BRow>\n\n        <!---Subscriber modal -->\n        <!--\n        <BRow>\n            <BCol sm=\"12\">\n                <BCardBody class=\"pc-component\">\n                    <div>\n                        \n                        <BModal v-model=\"modalShow\" title=\"Subscriber\" hide-footer class=\"v-modal-custom\" size=\"lg\">\n                            <div class=\"modal-body  p-0\">\n                                <BRow class=\" mb-3\">\n                                    <label for=\"first_name\" class=\"col-sm-2 col-form-label\">First name</label>\n                                    <BCol class=\"col-sm-10\">\n                                        <input v-model=\"subscriber.first_name\" type=\"text\" class=\"form-control\" id=\"first_name\">\n                                    </BCol>\n                                </BRow>\n                                <BRow class=\" mb-3\">\n                                    <label for=\"last_name\" class=\"col-sm-2 col-form-label\">Last name</label>\n                                    <BCol class=\"col-sm-10\">\n                                        <input v-model=\"subscriber.last_name\" type=\"text\" class=\"form-control\" id=\"last_name\">\n                                    </BCol>\n                                </BRow>\n                                <BRow class=\" mb-3\">\n                                    <label for=\"middle_name\" class=\"col-sm-2 col-form-label\">Middle name</label>\n                                    <BCol class=\"col-sm-10\">\n                                        <input v-model=\"subscriber.middle_name\" type=\"text\" class=\"form-control\" id=\"middle_name\">\n                                    </BCol>\n                                </BRow>\n                                <BRow class=\" mb-3\">\n                                    <label class=\"col-sm-2 col-form-label\" for=\"ext_name\">Name extention</label>\n                                    <BCol class=\"col-sm-2\">\n                                        <select v-model=\"subscriber.ext_name\" class=\"form-select\" id=\"ext_name\">\n                                            <option value=\"\">---</option>\n                                            <option value=\"jr\">JR</option>\n                                            <option value=\"sr\">SR</option>\n                                        </select>\n                                    </BCol>\n\n                                    <label for=\"down\" class=\"col-sm-2 col-form-label\">Birth date</label>\n                                    <BCol class=\"col-sm-6\">\n                                        <flat-pickr v-model=\"subscriber.birth_date\" :first-day-of-week=\"1\" lang=\"en\" confirm\n                                        class=\"form-control\"></flat-pickr>\n                                    </BCol>\n                                </BRow>\n                                <BRow class=\" md-3\">\n                                    <label class=\"col-sm-2 col-form-label\" for=\"marital_status\">Marital Status</label>\n                                    <BCol class=\"col-sm-10\">\n                                        <select v-model=\"subscriber.marital_status\" class=\"form-select\" id=\"marital_status\">\n                                            <option value=\"\">---</option>\n                                            <option value=\"single\" selected>Single</option>\n                                            <option value=\"married\">Married</option>\n                                            <option value=\"widow\">Widow</option>\n                                            <option value=\"annulled\">Annulled</option>\n                                            <option value=\"separated\">Separated</option>\n                                        </select>\n                                    </BCol>\n                                </BRow>\n                                <br />\n                                <BRow class=\" md-3\">\n                                    <label class=\"col-sm-2 col-form-label\" for=\"gender\">Gender</label>\n                                    <BCol class=\"col-sm-10\">\n                                        <select v-model=\"subscriber.gender\" class=\"form-select\" id=\"gender\">\n                                            <option value=\"\">---</option>\n                                            <option value=\"M\" selected >Male</option>\n                                            <option value=\"F\">Female</option>\n                                        </select>\n                                    </BCol>\n                                </BRow>\n                                <br />\n                                <BRow class=\" mb-3\">\n                                    <label for=\"contact_no\" class=\"col-sm-2 col-form-label\">Contact #</label>\n                                    <BCol class=\"col-sm-10\">\n                                        <input v-model=\"subscriber.contact_no\" type=\"text\" class=\"form-control\" id=\"contact_no\">\n                                    </BCol>\n                                </BRow>\n                                <BRow class=\" mb-3\">\n                                    <label for=\"address\" class=\"col-sm-2 col-form-label\">Address</label>\n                                    <BCol class=\"col-sm-10\">\n                                        <textarea v-model=\"subscriber.address\" class=\"form-control\" id=\"address\" rows=\"3\"></textarea>\n                                    </BCol>\n                                </BRow>\n                                <BRow class=\" mb-3\">\n                                    <label for=\"note\" class=\"col-sm-2 col-form-label\">Note</label>\n                                    <BCol class=\"col-sm-10\">\n                                        <textarea v-model=\"subscriber.note\" class=\"form-control\" id=\"note\" rows=\"3\"></textarea>\n                                    </BCol>\n                                </BRow>\n                                <BRow class=\"mb-3\">\n                                    <label for=\"good\" class=\"col-sm-2 col-form-label\">Good?</label>\n                                    <BCol class=\"col-sm-2\">\n                                        <div class=\"input-group mb-6\">\n                                            <div class=\"form-group form-check\">\n                                                <input v-model=\"subscriber.is_good\" type=\"checkbox\" class=\"form-check-input\" id=\"good\">\n                                            </div>\n                                        </div>\n                                    </BCol>\n                                </BRow>\n                            </div>\n                            <div class=\"modal-footer pb-0\">\n                                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" @click=\"modalShow = !modalShow\">Close</button>\n                                <button type=\"button\" class=\"btn btn-primary\" @click=\"updatePlan\">Save changes</button>\n                            </div>\n                        </BModal>\n                    </div>\n\n                </BCardBody>\n            </BCol>\n        </BRow>\n        -->\n    </Layout>\n</template>\n\n<style lang=\"css\">\n    .fixed-height {\n        max-height: 600px; /* Set the desired fixed height for the table container */\n        overflow-y: auto; /* Enable vertical scrolling */\n        border: 1px solid #ddd; /* Optional: Add a border for clarity */\n    }\n\n    .table-responsive {\n        overflow-x: auto; /* Ensure horizontal scrolling is enabled for wide tables */\n    }\n\n    .search-bar {\n        width: 400px;\n    }\n\n    .d-flex {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n\n    .input-group-text {\n        background-color: #f8f9fa;\n        border-right: none;\n    }\n\n    .form-control {\n        border-left: none;\n    }\n\n    .table-active {\n        background-color: #e9ecef !important; /* Bootstrap's active row color */\n    }\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}