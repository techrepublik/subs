{"ast":null,"code":"/**\r\n * Slider is a scrollbar with just one selection grip.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Scrollbar } from \"../../core/elements/Scrollbar\";\nimport { registry } from \"../Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a slider - a version of scrollbar with just one grip.\r\n *\r\n * @see {@link ISliderEvents} for a list of available events\r\n * @see {@link ISliderAdapters} for a list of available Adapters\r\n */\nvar Slider = /** @class */function (_super) {\n  __extends(Slider, _super);\n  /**\r\n   * Constructor\r\n   */\n  function Slider() {\n    var _this = _super.call(this) || this;\n    _this.className = \"Slider\";\n    _this.thumb.opacity = 0;\n    _this.thumb.interactionsEnabled = false;\n    _this.endGrip.opacity = 0;\n    _this.endGrip.interactionsEnabled = false;\n    _this.startGrip.events.on(\"drag\", function () {\n      _this.endGrip.x = _this.startGrip.x;\n      _this.endGrip.y = _this.startGrip.y;\n    });\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(Slider.prototype, \"__end\", {\n    /**\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this._start;\n    },\n    set: function (value) {},\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Slider.prototype, \"end\", {\n    /**\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this._start;\n    },\n    /**\r\n     * Relative position (0-1) of the end grip.\r\n     *\r\n     * @param position  Position (0-1)\r\n     */\n    set: function (position) {},\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Slider.prototype, \"start\", {\n    /**\r\n     * @return Position (0-1)\r\n     */\n    get: function () {\n      return this._start;\n    },\n    /**\r\n     * Relative position (0-1) of the start grip.\r\n     *\r\n     * @param position  Position (0-1)\r\n     */\n    set: function (position) {\n      if (!this._isBusy) {\n        this.__start = position;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Slider;\n}(Scrollbar);\nexport { Slider };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"Slider\"] = Slider;","map":{"version":3,"names":["Scrollbar","registry","Slider","_super","__extends","_this","call","className","thumb","opacity","interactionsEnabled","endGrip","startGrip","events","on","x","y","applyTheme","Object","defineProperty","prototype","get","_start","set","value","position","_isBusy","__start","registeredClasses"],"sources":["../../../../../src/.internal/core/elements/Slider.ts"],"sourcesContent":["/**\r\n * Slider is a scrollbar with just one selection grip.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Scrollbar, IScrollbarProperties, IScrollbarAdapters, IScrollbarEvents } from \"../../core/elements/Scrollbar\";\r\nimport { registry } from \"../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Slider]].\r\n */\r\nexport interface ISliderProperties extends IScrollbarProperties { }\r\n\r\n/**\r\n * Defines events for [[Slider]].\r\n */\r\nexport interface ISliderEvents extends IScrollbarEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Slider]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISliderAdapters extends IScrollbarAdapters, ISliderProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a slider - a version of scrollbar with just one grip.\r\n *\r\n * @see {@link ISliderEvents} for a list of available events\r\n * @see {@link ISliderAdapters} for a list of available Adapters\r\n */\r\nexport class Slider extends Scrollbar {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISliderProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISliderAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISliderEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Slider\";\r\n\r\n\t\tthis.thumb.opacity = 0;\r\n\t\tthis.thumb.interactionsEnabled = false;\r\n\t\tthis.endGrip.opacity = 0;\r\n\t\tthis.endGrip.interactionsEnabled = false;\r\n\r\n\t\tthis.startGrip.events.on(\"drag\", () => {\r\n\t\t\tthis.endGrip.x = this.startGrip.x;\r\n\t\t\tthis.endGrip.y = this.startGrip.y;\r\n\t\t})\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tprotected get __end(): number {\r\n\t\treturn this._start;\r\n\t}\r\n\r\n\tprotected set __end(value: number) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get end(): number {\r\n\t\treturn this._start;\r\n\t}\r\n\r\n\t/**\r\n\t * Relative position (0-1) of the end grip.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t */\r\n\tpublic set end(position: number) {\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Relative position (0-1) of the start grip.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t */\r\n\tpublic set start(position: number) {\r\n\t\tif (!this._isBusy) {\r\n\t\t\tthis.__start = position;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic get start(): number {\r\n\t\treturn this._start;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Slider\"] = Slider;\r\n"],"mappings":"AAAA;;;;AAIA;;;;;;AAMA,SAASA,SAAS,QAAoE,+BAA+B;AACrH,SAASC,QAAQ,QAAQ,aAAa;AA4BtC;;;;;;AAOA;;;;;;AAMA,IAAAC,MAAA,0BAAAC,MAAA;EAA4BC,SAAA,CAAAF,MAAA,EAAAC,MAAA;EAiB3B;;;EAGA,SAAAD,OAAA;IAAA,IAAAG,KAAA,GACCF,MAAA,CAAAG,IAAA,MAAO;IACPD,KAAI,CAACE,SAAS,GAAG,QAAQ;IAEzBF,KAAI,CAACG,KAAK,CAACC,OAAO,GAAG,CAAC;IACtBJ,KAAI,CAACG,KAAK,CAACE,mBAAmB,GAAG,KAAK;IACtCL,KAAI,CAACM,OAAO,CAACF,OAAO,GAAG,CAAC;IACxBJ,KAAI,CAACM,OAAO,CAACD,mBAAmB,GAAG,KAAK;IAExCL,KAAI,CAACO,SAAS,CAACC,MAAM,CAACC,EAAE,CAAC,MAAM,EAAE;MAChCT,KAAI,CAACM,OAAO,CAACI,CAAC,GAAGV,KAAI,CAACO,SAAS,CAACG,CAAC;MACjCV,KAAI,CAACM,OAAO,CAACK,CAAC,GAAGX,KAAI,CAACO,SAAS,CAACI,CAAC;IAClC,CAAC,CAAC;IAEFX,KAAI,CAACY,UAAU,EAAE;;EAClB;EAMAC,MAAA,CAAAC,cAAA,CAAcjB,MAAA,CAAAkB,SAAA,SAAK;IAHnB;;;SAGA,SAAAC,CAAA;MACC,OAAO,IAAI,CAACC,MAAM;IACnB,CAAC;SAED,SAAAC,CAAoBC,KAAa,GAEjC,CAAC;;;;EAKDN,MAAA,CAAAC,cAAA,CAAWjB,MAAA,CAAAkB,SAAA,OAAG;IAHd;;;SAGA,SAAAC,CAAA;MACC,OAAO,IAAI,CAACC,MAAM;IACnB,CAAC;IAED;;;;;SAKA,SAAAC,CAAeE,QAAgB,GAE/B,CAAC;;;;EAQDP,MAAA,CAAAC,cAAA,CAAWjB,MAAA,CAAAkB,SAAA,SAAK;IAMhB;;;SAGA,SAAAC,CAAA;MACC,OAAO,IAAI,CAACC,MAAM;IACnB,CAAC;IAhBD;;;;;SAKA,SAAAC,CAAiBE,QAAgB;MAChC,IAAI,CAAC,IAAI,CAACC,OAAO,EAAE;QAClB,IAAI,CAACC,OAAO,GAAGF,QAAQ;;IAEzB,CAAC;;;;EAQF,OAAAvB,MAAC;AAAD,CAAC,CAnF2BF,SAAS;;AAqFrC;;;;;;AAMAC,QAAQ,CAAC2B,iBAAiB,CAAC,QAAQ,CAAC,GAAG1B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}