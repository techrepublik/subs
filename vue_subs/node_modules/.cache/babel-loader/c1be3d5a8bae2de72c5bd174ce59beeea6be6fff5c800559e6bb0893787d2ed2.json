{"ast":null,"code":"import { __read, __spread } from \"tslib\";\nimport { options } from \"../Options\";\n/**\r\n * Outputs string to console if `verbose` is `true`.\r\n */\nexport function log() {\n  var messages = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    messages[_i] = arguments[_i];\n  }\n  if (options.verbose) {\n    if (console) {\n      console.log.apply(console, __spread(messages));\n    }\n  }\n}\n/**\r\n * Outputs a warning to the console.\r\n */\nexport function warn() {\n  var messages = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    messages[_i] = arguments[_i];\n  }\n  if (!options.suppressWarnings) {\n    if (console) {\n      console.warn.apply(console, __spread(messages));\n    }\n  }\n}","map":{"version":3,"names":["options","log","messages","_i","arguments","length","verbose","console","apply","__spread","warn","suppressWarnings"],"sources":["../../../../../src/.internal/core/utils/Log.ts"],"sourcesContent":["import { options } from \"../Options\";\n\n/**\n * Outputs string to console if `verbose` is `true`.\n */\nexport function log(...messages: Array<any>): void {\n\tif (options.verbose) {\n\t\tif (console) {\n\t\t\tconsole.log(...messages);\n\t\t}\n\t}\n}\n\n/**\n * Outputs a warning to the console.\n */\nexport function warn(...messages: Array<any>): void {\n\tif (!options.suppressWarnings) {\n\t\tif (console) {\n\t\t\tconsole.warn(...messages);\n\t\t}\n\t}\n}\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,YAAY;AAEpC;;;AAGA,OAAM,SAAUC,GAAGA,CAAA;EAAC,IAAAC,QAAA;OAAA,IAAAC,EAAA,IAAuB,EAAvBA,EAAA,GAAAC,SAAA,CAAAC,MAAuB,EAAvBF,EAAA,EAAuB;IAAvBD,QAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;EACnB,IAAIH,OAAO,CAACM,OAAO,EAAE;IACpB,IAAIC,OAAO,EAAE;MACZA,OAAO,CAACN,GAAG,CAAAO,KAAA,CAAXD,OAAO,EAAAE,QAAA,CAAQP,QAAQ;;;AAG1B;AAEA;;;AAGA,OAAM,SAAUQ,IAAIA,CAAA;EAAC,IAAAR,QAAA;OAAA,IAAAC,EAAA,IAAuB,EAAvBA,EAAA,GAAAC,SAAA,CAAAC,MAAuB,EAAvBF,EAAA,EAAuB;IAAvBD,QAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;EACpB,IAAI,CAACH,OAAO,CAACW,gBAAgB,EAAE;IAC9B,IAAIJ,OAAO,EAAE;MACZA,OAAO,CAACG,IAAI,CAAAF,KAAA,CAAZD,OAAO,EAAAE,QAAA,CAASP,QAAQ;;;AAG3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}