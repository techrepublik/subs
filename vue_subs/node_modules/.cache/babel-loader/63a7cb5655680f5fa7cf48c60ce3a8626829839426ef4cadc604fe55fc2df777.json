{"ast":null,"code":"import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { cos, halfPi, pi, sin, sqrt } from \"./math.js\";\nimport { solve } from \"./newton.js\";\nexport function foucautSinusoidalRaw(alpha) {\n  var beta = 1 - alpha,\n    equatorial = raw(pi, 0)[0] - raw(-pi, 0)[0],\n    polar = raw(0, halfPi)[1] - raw(0, -halfPi)[1],\n    ratio = sqrt(2 * polar / equatorial);\n  function raw(lambda, phi) {\n    var cosphi = cos(phi),\n      sinphi = sin(phi);\n    return [cosphi / (beta + alpha * cosphi) * lambda, beta * phi + alpha * sinphi];\n  }\n  function forward(lambda, phi) {\n    var p = raw(lambda, phi);\n    return [p[0] * ratio, p[1] / ratio];\n  }\n  function forwardMeridian(phi) {\n    return forward(0, phi)[1];\n  }\n  forward.invert = function (x, y) {\n    var phi = solve(forwardMeridian, y),\n      lambda = x / ratio * (alpha + beta / cos(phi));\n    return [lambda, phi];\n  };\n  return forward;\n}\nexport default function () {\n  var alpha = 0.5,\n    m = projectionMutator(foucautSinusoidalRaw),\n    p = m(alpha);\n  p.alpha = function (_) {\n    return arguments.length ? m(alpha = +_) : alpha;\n  };\n  return p.scale(168.725);\n}","map":{"version":3,"names":["geoProjectionMutator","projectionMutator","cos","halfPi","pi","sin","sqrt","solve","foucautSinusoidalRaw","alpha","beta","equatorial","raw","polar","ratio","lambda","phi","cosphi","sinphi","forward","p","forwardMeridian","invert","x","y","m","_","arguments","length","scale"],"sources":["/Users/admin/Desktop/techrepublik/pro/subs/vue_subs/node_modules/d3-geo-projection/src/foucautSinusoidal.js"],"sourcesContent":["import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {cos, halfPi, pi, sin, sqrt} from \"./math.js\";\nimport {solve} from \"./newton.js\";\n\nexport function foucautSinusoidalRaw(alpha) {\n  var beta = 1 - alpha,\n      equatorial = raw(pi, 0)[0] - raw(-pi, 0)[0],\n      polar = raw(0, halfPi)[1] - raw(0, -halfPi)[1],\n      ratio = sqrt(2 * polar / equatorial);\n\n  function raw(lambda, phi) {\n    var cosphi = cos(phi),\n        sinphi = sin(phi);\n    return [\n      cosphi / (beta + alpha * cosphi) * lambda,\n      beta * phi + alpha * sinphi\n    ];\n  }\n\n  function forward(lambda, phi) {\n    var p = raw(lambda, phi);\n    return [p[0] * ratio, p[1] / ratio];\n  }\n\n  function forwardMeridian(phi) {\n    return forward(0, phi)[1];\n  }\n\n  forward.invert = function(x, y) {\n    var phi = solve(forwardMeridian, y),\n        lambda = x / ratio * (alpha + beta / cos(phi));\n    return [lambda, phi];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var alpha = 0.5,\n      m = projectionMutator(foucautSinusoidalRaw),\n      p = m(alpha);\n\n  p.alpha = function(_) {\n    return arguments.length ? m(alpha = +_) : alpha;\n  };\n\n  return p\n      .scale(168.725);\n}\n"],"mappings":"AAAA,SAAQA,oBAAoB,IAAIC,iBAAiB,QAAO,QAAQ;AAChE,SAAQC,GAAG,EAAEC,MAAM,EAAEC,EAAE,EAAEC,GAAG,EAAEC,IAAI,QAAO,WAAW;AACpD,SAAQC,KAAK,QAAO,aAAa;AAEjC,OAAO,SAASC,oBAAoBA,CAACC,KAAK,EAAE;EAC1C,IAAIC,IAAI,GAAG,CAAC,GAAGD,KAAK;IAChBE,UAAU,GAAGC,GAAG,CAACR,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGQ,GAAG,CAAC,CAACR,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3CS,KAAK,GAAGD,GAAG,CAAC,CAAC,EAAET,MAAM,CAAC,CAAC,CAAC,CAAC,GAAGS,GAAG,CAAC,CAAC,EAAE,CAACT,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9CW,KAAK,GAAGR,IAAI,CAAC,CAAC,GAAGO,KAAK,GAAGF,UAAU,CAAC;EAExC,SAASC,GAAGA,CAACG,MAAM,EAAEC,GAAG,EAAE;IACxB,IAAIC,MAAM,GAAGf,GAAG,CAACc,GAAG,CAAC;MACjBE,MAAM,GAAGb,GAAG,CAACW,GAAG,CAAC;IACrB,OAAO,CACLC,MAAM,IAAIP,IAAI,GAAGD,KAAK,GAAGQ,MAAM,CAAC,GAAGF,MAAM,EACzCL,IAAI,GAAGM,GAAG,GAAGP,KAAK,GAAGS,MAAM,CAC5B;EACH;EAEA,SAASC,OAAOA,CAACJ,MAAM,EAAEC,GAAG,EAAE;IAC5B,IAAII,CAAC,GAAGR,GAAG,CAACG,MAAM,EAAEC,GAAG,CAAC;IACxB,OAAO,CAACI,CAAC,CAAC,CAAC,CAAC,GAAGN,KAAK,EAAEM,CAAC,CAAC,CAAC,CAAC,GAAGN,KAAK,CAAC;EACrC;EAEA,SAASO,eAAeA,CAACL,GAAG,EAAE;IAC5B,OAAOG,OAAO,CAAC,CAAC,EAAEH,GAAG,CAAC,CAAC,CAAC,CAAC;EAC3B;EAEAG,OAAO,CAACG,MAAM,GAAG,UAASC,CAAC,EAAEC,CAAC,EAAE;IAC9B,IAAIR,GAAG,GAAGT,KAAK,CAACc,eAAe,EAAEG,CAAC,CAAC;MAC/BT,MAAM,GAAGQ,CAAC,GAAGT,KAAK,IAAIL,KAAK,GAAGC,IAAI,GAAGR,GAAG,CAACc,GAAG,CAAC,CAAC;IAClD,OAAO,CAACD,MAAM,EAAEC,GAAG,CAAC;EACtB,CAAC;EAED,OAAOG,OAAO;AAChB;AAEA,eAAe,YAAW;EACxB,IAAIV,KAAK,GAAG,GAAG;IACXgB,CAAC,GAAGxB,iBAAiB,CAACO,oBAAoB,CAAC;IAC3CY,CAAC,GAAGK,CAAC,CAAChB,KAAK,CAAC;EAEhBW,CAAC,CAACX,KAAK,GAAG,UAASiB,CAAC,EAAE;IACpB,OAAOC,SAAS,CAACC,MAAM,GAAGH,CAAC,CAAChB,KAAK,GAAG,CAACiB,CAAC,CAAC,GAAGjB,KAAK;EACjD,CAAC;EAED,OAAOW,CAAC,CACHS,KAAK,CAAC,OAAO,CAAC;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}