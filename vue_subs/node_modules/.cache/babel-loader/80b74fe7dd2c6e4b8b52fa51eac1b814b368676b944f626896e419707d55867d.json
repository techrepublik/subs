{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\n/**\r\n * Export module.\r\n *\r\n * Parts of Export functionality rely on the following third party libraries:\r\n *\r\n * [canvg.js](https://github.com/canvg/canvg)\r\n * Copyright (c) Gabe Lerner\r\n * Licensed under [MIT](https://github.com/canvg/canvg/blob/master/LICENSE)\r\n *\r\n * [pdfmake](http://pdfmake.org/)\r\n * Copyright (c) 2014 bpampuch\r\n * Licensed under [MIT](https://github.com/bpampuch/pdfmake/blob/master/LICENSE)\r\n *\r\n * [SheetJS Community Edition](https://github.com/sheetjs/js-xlsx)\r\n * Licensed under [Apache License 2.0](https://github.com/SheetJS/js-xlsx/blob/master/LICENSE)\r\n *\r\n * [JSZip](http://stuartk.com/jszip)\r\n * Copyright (c) Stuart Knightley\r\n * Dual licenced under the [MIT license or GPLv3](https://raw.githubusercontent.com/Stuk/jszip/master/LICENSE.markdown).\r\n */\nimport { __awaiter, __extends, __generator } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { ExportMenu } from \"./ExportMenu\";\nimport { Adapter } from \"../utils/Adapter\";\nimport { Sprite } from \"../Sprite\";\nimport { Modal } from \"../elements/Modal\";\nimport { List } from \"../utils/List\";\nimport { Dictionary } from \"../utils/Dictionary\";\nimport { DateFormatter } from \"../formatters/DateFormatter\";\nimport { DurationFormatter } from \"../formatters/DurationFormatter\";\nimport { NumberFormatter } from \"../formatters/NumberFormatter\";\nimport { Language } from \"../utils/Language\";\nimport { Validatable } from \"../utils/Validatable\";\nimport { color } from \"../utils/Color\";\nimport { registry } from \"../Registry\";\nimport { options } from \"../Options\";\nimport { StyleRule, getComputedStyle } from \"../utils/DOM\";\nimport * as $browser from \"../utils/Browser\";\nimport * as $object from \"../utils/Object\";\nimport * as $net from \"../utils/Net\";\nimport * as $dom from \"../utils/DOM\";\nimport * as $type from \"../utils/Type\";\nimport * as $log from \"../utils/Log\";\nimport * as $utils from \"../utils/Utils\";\nimport * as $array from \"../utils/Array\";\nimport * as $math from \"../utils/Math\";\nimport * as $strings from \"../utils/Strings\";\n// This is used to cache the pdfmake loading\nvar pdfmakePromise;\n/**\r\n * Loads pdfmake dynamic module\r\n *\r\n * This is an asynchronous function. Check the description of `getImage()`\r\n * for description and example usage.\r\n *\r\n * @ignore Exclude from docs\r\n * @return Instance of pdfmake\r\n * @async\r\n */\nfunction _pdfmake() {\n  return __awaiter(this, void 0, void 0, function () {\n    var a, pdfmake, vfs_fonts, global;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, Promise.all([import(/* webpackChunkName: \"pdfmake\" */\"pdfmake/build/pdfmake.js\"), import(/* webpackChunkName: \"pdfmake\" */\"../../pdfmake/vfs_fonts\")])];\n        case 1:\n          a = _a.sent();\n          pdfmake = a[0].default || a[0];\n          vfs_fonts = a[1].default || a[1];\n          global = window;\n          global.pdfMake = global.pdfMake || {};\n          global.pdfMake.vfs = vfs_fonts;\n          pdfmake.vfs = vfs_fonts;\n          return [2 /*return*/, pdfmake];\n      }\n    });\n  });\n}\n// TODO better parsing\nvar fontFamilySrcRegexp = /src: ([^;]+);/;\n// TODO better checks\nfunction supportsBlobUri() {\n  return window.navigator.msSaveOrOpenBlob != null;\n}\n// TODO move into utils or something ?\nfunction blobToDataUri(blob) {\n  return new Promise(function (resolve, reject) {\n    // TODO handle abort ?\n    var f = new FileReader();\n    f.onload = function (e) {\n      resolve(f.result);\n    };\n    f.onerror = function (e) {\n      reject(e);\n    };\n    f.readAsDataURL(blob);\n  });\n}\nfunction getCssRules(s) {\n  return __awaiter(this, void 0, void 0, function () {\n    var sheet, e_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          sheet = s.sheet;\n          _a.label = 1;\n        case 1:\n          _a.trys.push([1, 2,, 4]);\n          return [2 /*return*/, sheet.cssRules];\n        case 2:\n          e_1 = _a.sent();\n          return [4 /*yield*/, new Promise(function (success, error) {\n            s.addEventListener(\"load\", function () {\n              success(sheet.cssRules);\n            }, true);\n            s.addEventListener(\"error\", function (e) {\n              error(e);\n            }, true);\n            setTimeout(function () {\n              error(new Error(\"Timeout while waiting for <style> to load\"));\n            }, 10000);\n          })];\n        case 3:\n          // Needed because of https://bugzilla.mozilla.org/show_bug.cgi?id=625013\n          return [2 /*return*/, _a.sent()];\n        case 4:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n// This loads a stylesheet by URL and then calls the function with it\n// TODO this should be moved into utils or something\nfunction loadStylesheet(doc, url, f) {\n  return __awaiter(this, void 0, void 0, function () {\n    var response, e_2, s, rules;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4 /*yield*/, $net.load(url)];\n        case 1:\n          response = _a.sent();\n          return [3 /*break*/, 3];\n        case 2:\n          e_2 = _a.sent();\n          console.error(\"Failed to load stylesheet\", url, e_2);\n          return [2 /*return*/];\n        case 3:\n          s = doc.createElement(\"style\");\n          s.textContent = response.response;\n          if (options.nonce != \"\") {\n            s.setAttribute(\"nonce\", options.nonce);\n          }\n          doc.head.appendChild(s);\n          _a.label = 4;\n        case 4:\n          _a.trys.push([4,, 7, 8]);\n          return [4 /*yield*/, getCssRules(s)];\n        case 5:\n          rules = _a.sent();\n          return [4 /*yield*/, eachStylesheet(doc, url, rules, f)];\n        case 6:\n          _a.sent();\n          return [3 /*break*/, 8];\n        case 7:\n          doc.head.removeChild(s);\n          return [7 /*endfinally*/];\n        case 8:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n// This calls a function for each CSSRule inside of a CSSStyleSheet.\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\n// TODO this should be moved into utils or something\nfunction eachStylesheet(doc, topUrl, rules, f) {\n  return __awaiter(this, void 0, void 0, function () {\n    var promises, length, i, rule, url;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          promises = [];\n          length = rules.length;\n          for (i = 0; i < length; i++) {\n            rule = rules[i];\n            if (rule.type === CSSRule.IMPORT_RULE) {\n              url = rule.href;\n              if (url) {\n                url = $utils.joinUrl(topUrl, url);\n                promises.push(loadStylesheet(doc, url, f));\n              }\n            } else {\n              f(topUrl, rule);\n            }\n          }\n          if (!promises.length) return [3 /*break*/, 2];\n          return [4 /*yield*/, Promise.all(promises)];\n        case 1:\n          _a.sent();\n          _a.label = 2;\n        case 2:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n// This calls a function for each CSSRule for all of the stylesheets in the page.\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\n// TODO this should be moved into utils or something\nfunction eachStylesheets(f) {\n  return __awaiter(this, void 0, void 0, function () {\n    var iframe, doc_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          iframe = document.createElement(\"iframe\");\n          // This causes it to use the same origin policy as the parent page\n          iframe.src = \"about:blank\";\n          // This tries to make it more accessible for screen readers\n          iframe.setAttribute(\"title\", \"\");\n          document.head.appendChild(iframe);\n          _a.label = 1;\n        case 1:\n          _a.trys.push([1,, 3, 4]);\n          doc_1 = iframe.contentDocument;\n          // TODO use $dom.getRoot instead of document ?\n          return [4 /*yield*/, Promise.all($array.map(document.styleSheets, function (sheet) {\n            var url = sheet.href;\n            if (url == null) {\n              return eachStylesheet(doc_1, location.href, sheet.cssRules, f);\n            } else {\n              url = $utils.joinUrl(location.href, url);\n              return loadStylesheet(doc_1, url, f);\n            }\n          }))];\n        case 2:\n          // TODO use $dom.getRoot instead of document ?\n          _a.sent();\n          return [3 /*break*/, 4];\n        case 3:\n          document.head.removeChild(iframe);\n          return [7 /*endfinally*/];\n        case 4:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * [[Export]] allows downloading of current snapshot of the chart as an\r\n * image, PDF, or its data in various formats.\r\n *\r\n * The export functionality is enabled by default in charts and is accessible\r\n * via API or optional export menu.\r\n *\r\n * To enable menu, simply access export's `menu` property. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * To export via API, use `export()` method:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n *\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n *\r\n * @todo Better loading indicator?\r\n * @todo Implement multiplier option\r\n * @todo Handling of hanged exports\r\n * @important\r\n */\nvar Export = /** @class */function (_super) {\n  __extends(Export, _super);\n  /**\r\n   * Constructor\r\n   */\n  function Export(container) {\n    var _this = _super.call(this) || this;\n    /**\r\n     * Adapter.\r\n     */\n    _this.adapter = new Adapter(_this);\n    /**\r\n     * Holds options for each format.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n    _this._formatOptions = new Dictionary();\n    /**\r\n     * Extra [[Sprite]] elements to include in exports.\r\n     */\n    _this._extraSprites = [];\n    /**\r\n     * A list of [[Sprite]] elements that need to be valid before export\r\n     * commences.\r\n     */\n    _this._validateSprites = [];\n    /**\r\n     * Holds an array of data field names. If set, exported data fields will try\r\n     * to maintain this order.\r\n     *\r\n     * If not set (default), the export will try to maintain the same order as\r\n     * in source data, or as in `dataFields` (if set).\r\n     *\r\n     * @since 4.9.7\r\n     */\n    _this.dataFieldsOrder = [];\n    /**\r\n     * Indicates whether data fields were generated dynamically (`true`) or\r\n     * if they were pre-set by the user (`false`).\r\n     */\n    _this._dynamicDataFields = true;\n    /**\r\n     * Holds a list of objects that were temporarily removed from the DOM while\r\n     * exporting. Those most probably are tainted images, or foreign objects that\r\n     * would otherwise prevent SVG to be converted to canvas.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n    _this._removedObjects = new List();\n    /**\r\n     * Holds references to the objects that were temporarily hidden when export\r\n     * started, so that we can reveal them back when export ends.\r\n     */\n    _this._hiddenObjects = [];\n    /**\r\n     * Indicates if non-exportable objects are now hidden;\r\n     */\n    _this._objectsAlreadyHidden = false;\n    /**\r\n     * Exported files will be prefixed with whatever it is set here.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n    _this._filePrefix = \"amCharts\";\n    /**\r\n     * If you are using web fonts (such as Google Fonts), your chart might be\r\n     * using them as well.\r\n     *\r\n     * Normally, exporting to image will require to download these fonts so the\r\n     * are carried over to exported image.\r\n     *\r\n     * This setting can be used to disable or enable this functionality.\r\n     *\r\n     * @default true\r\n     */\n    _this.useWebFonts = true;\n    /**\r\n     * Many modern displays have use more actual pixels per displayed pixel. This\r\n     * results in sharper images on screen. Unfortunately, when exported to a\r\n     * bitmap image of the sam width/height size it will lose those extra pixels,\r\n     * resulting in somewhat blurry image.\r\n     *\r\n     * This is why we are going to export images larger than they are, so that we\r\n     * don't lose any details.\r\n     *\r\n     * If you'd rather export images without change in size, set this to `false`.\r\n     *\r\n     * @default true\r\n     */\n    _this.useRetina = true;\n    /**\r\n     * By default Export will try to use built-in method for transforming chart\r\n     * into an image for download, then fallback to external library (canvg) for\r\n     * conversion if failed.\r\n     *\r\n     * Setting this to `false` will force use of external library for all export\r\n     * operations.\r\n     *\r\n     * It might be useful to turn off simplified export if you are using strict\r\n     * content security policies, that disallow images with blobs as their\r\n     * source.\r\n     *\r\n     * @default true\r\n     * @since 4.2.5\r\n     */\n    _this.useSimplifiedExport = true;\n    /**\r\n     * If export operation takes longer than milliseconds in this second, we will\r\n     * show a modal saying export operation took longer than expected.\r\n     */\n    _this.timeoutDelay = 2000;\n    _this._exportRunning = false;\n    /**\r\n     * Indicator used by [[Component]].\r\n     *\r\n     * @ignore\r\n     */\n    _this._prevHasData = false;\n    _this._container = container;\n    _this.className = \"Export\";\n    // Set default options\n    _this._formatOptions.setKey(\"png\", {});\n    _this._formatOptions.setKey(\"jpg\", {\n      quality: 0.8\n    });\n    _this._formatOptions.setKey(\"gif\", {});\n    _this._formatOptions.setKey(\"svg\", {});\n    _this._formatOptions.setKey(\"pdf\", {\n      fontSize: 14,\n      imageFormat: \"png\",\n      align: \"left\",\n      addURL: true,\n      addColumnNames: true\n    });\n    _this._formatOptions.setKey(\"json\", {\n      indent: 2,\n      useLocale: true\n    });\n    _this._formatOptions.setKey(\"csv\", {\n      addColumnNames: true,\n      emptyAs: \"\",\n      addBOM: true\n    });\n    _this._formatOptions.setKey(\"xlsx\", {\n      addColumnNames: true,\n      useLocale: true,\n      emptyAs: \"\"\n    });\n    _this._formatOptions.setKey(\"html\", {\n      addColumnNames: true,\n      emptyAs: \"\"\n    });\n    _this._formatOptions.setKey(\"pdfdata\", {\n      fontSize: 14,\n      imageFormat: \"png\",\n      addURL: true,\n      addColumnNames: true,\n      emptyAs: \"\"\n    });\n    _this._formatOptions.setKey(\"print\", {\n      delay: 500,\n      printMethod: \"iframe\"\n    });\n    // Add options adapter\n    _this.adapter.add(\"options\", function (arg) {\n      var formatOptions = _this._formatOptions.getKey(arg.type);\n      if (arg.options) {\n        arg.options = $object.merge(formatOptions, arg.options);\n      } else {\n        arg.options = formatOptions;\n      }\n      return arg;\n    });\n    _this.applyTheme();\n    _this.dispatchImmediately(\"inited\");\n    return _this;\n  }\n  Object.defineProperty(Export.prototype, \"menu\", {\n    /**\r\n     * @return ExportMenu instance\r\n     */\n    get: function () {\n      return this._menu;\n    },\n    /**\r\n     * An instance of [[ExportMenu]].\r\n     *\r\n     * To add an export menu to a chart, set this to a new instance of\r\n     * [[ExportMenu]].\r\n     *\r\n     * ```TypeScript\r\n     * chart.exporting.menu = new am4core.ExportMenu();\r\n     * ```\r\n     * ```JavaScript\r\n     * chart.exporting.menu = new am4core.ExportMenu();\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"exporting\": {\r\n     *     \"menu\": {}\r\n     *   }\r\n     * }\r\n     * ```\r\n     *\r\n     * @param menu  ExportMenu instance\r\n     */\n    set: function (menu) {\n      var _this = this;\n      if (this._menu) {\n        this.removeDispose(this._menu);\n      }\n      this._menu = menu;\n      // Set container and language\n      this._menu.container = this.container;\n      this._menu.language = this._language;\n      // Add adapter to check for browser support\n      this._menu.adapter.add(\"branch\", function (arg) {\n        arg.branch.unsupported = !_this.typeSupported(arg.branch.type);\n        return arg;\n      });\n      // Add click events\n      this._menu.events.on(\"hit\", function (ev) {\n        _this.export(ev.branch.type, ev.branch.options);\n        _this.menu.close();\n      });\n      this._menu.events.on(\"enter\", function (ev) {\n        _this.export(ev.branch.type, ev.branch.options);\n        _this.menu.close();\n      });\n      this._menu.events.on(\"over\", function (ev) {\n        _this._disablePointers();\n      });\n      this._menu.events.on(\"out\", function (ev) {\n        setTimeout(function () {\n          _this._releasePointers();\n        }, 10);\n      });\n      // Dispatch event\n      this.dispatchImmediately(\"menucreated\");\n      // Prefix with Sprite's class name\n      this._menu.adapter.add(\"classPrefix\", function (obj) {\n        obj.classPrefix = options.classNamePrefix + obj.classPrefix;\n        return obj;\n      });\n      // Add menu to disposers so that it's destroyed when Export is disposed\n      this._disposers.push(this._menu);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Checks if this specific menu item type is supported by current system.\r\n   *\r\n   * @param type  Menu item type\r\n   * @return `false` if not supported\r\n   */\n  Export.prototype.typeSupported = function (type) {\n    var supported = true;\n    var options = this.getFormatOptions(type);\n    if ($type.hasValue(options) && options.disabled) {\n      supported = false;\n    } else if (type === \"pdf\") {\n      //supported = this.downloadSupport();\n    } else if (type === \"xlsx\") {\n      //supported = (this.downloadSupport() && this._hasData()) ? true : false;\n      supported = this._hasData() ? true : false;\n    } else if (type == \"print\" && !window.print) {\n      supported = false;\n    } else if ([\"json\", \"csv\", \"html\", \"pdfdata\"].indexOf(type) !== -1 && !this._hasData()) {\n      supported = false;\n    }\n    return this.adapter.apply(\"supported\", {\n      supported: supported,\n      type: type\n    }).supported;\n  };\n  /**\r\n   * Checks if data is available.\r\n   *\r\n   * @return Has data?\r\n   */\n  Export.prototype._hasData = function () {\n    return this.data && this.data.length;\n  };\n  /**\r\n   * Get function to handle export for particular format.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Export.prototype._getFunction = function (type) {\n    switch (type) {\n      case \"png\":\n      case \"gif\":\n      case \"jpg\":\n        return this.getImage;\n      case \"svg\":\n        return this.getSVG;\n      case \"pdf\":\n      case \"pdfdata\":\n        return this.getPDF;\n      case \"xlsx\":\n        return this.getExcel;\n      case \"csv\":\n        return this.getCSV;\n      case \"json\":\n        return this.getJSON;\n      case \"html\":\n        return this.getHTML;\n      case \"print\":\n        return this.getPrint;\n      default:\n        return this.unsupported;\n    }\n  };\n  /**\r\n   * Initiates export procedure.\r\n   *\r\n   * @param type     Export type\r\n   * @param options  Options\r\n   * @return `true` if export was successful\r\n   * @async\r\n   */\n  Export.prototype.export = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var event_1, func, data, event_2, event_3;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Check if it's a custom item, and do nothing or execute custom callback\n            if (type == \"custom\") {\n              this.handleCustom(options);\n              return [2 /*return*/, true];\n            }\n            // Set export running flag\n            this._exportRunning = true;\n            // Dispatch event\n            if (this.events.isEnabled(\"exportstarted\")) {\n              event_1 = {\n                \"type\": \"exportstarted\",\n                \"target\": this,\n                \"format\": type,\n                \"options\": options\n              };\n              this.events.dispatchImmediately(\"exportstarted\", event_1);\n            }\n            // Schedule a preloader\n            this.showPreloader();\n            // Schedule a timeout\n            if (this.timeoutDelay) {\n              this.hideTimeout();\n              this._timeoutTimeout = this.setTimeout(function () {\n                // Dispatch event\n                if (_this.events.isEnabled(\"exporttimedout\")) {\n                  var event_4 = {\n                    \"type\": \"exporttimedout\",\n                    \"target\": _this,\n                    \"format\": type,\n                    \"options\": options\n                  };\n                  _this.events.dispatchImmediately(\"exporttimedout\", event_4);\n                }\n                // Show modal\n                _this.showTimeout();\n              }, this.timeoutDelay);\n            }\n            // Hide items that should not be exported\n            this.hideNonExportableSprites();\n            func = this._getFunction(type);\n            // Give chance for plugins to override both function and options\n            options = this.adapter.apply(\"options\", {\n              options: options,\n              type: type\n            }).options;\n            func = this.adapter.apply(\"exportFunction\", {\n              func: func,\n              type: type,\n              options: options\n            }).func;\n            return [4 /*yield*/, func.call(this, type, options)];\n          case 1:\n            data = _a.sent();\n            // Release pointers\n            this._exportRunning = false;\n            this._releasePointers();\n            // Restore temporarily hidden elements\n            this.restoreNonExportableSprites();\n            if (data) {\n              // Dispatch event\n              if (this.events.isEnabled(\"exportfinished\")) {\n                event_2 = {\n                  \"type\": \"exportfinished\",\n                  \"target\": this,\n                  \"format\": type,\n                  \"options\": options\n                };\n                this.events.dispatchImmediately(\"exportfinished\", event_2);\n              }\n              // Hide preloader and timeout modals\n              this.hidePreloader();\n              this.hideTimeout();\n              if (this.menu) {\n                this.menu.close();\n              }\n              // Download or print\n              if (type === \"print\") {\n                return [2 /*return*/, this.print(data, options, this.adapter.apply(\"title\", {\n                  title: this.title,\n                  options: options\n                }).title)];\n              } else {\n                if (type == \"pdfdata\") {\n                  return [2 /*return*/, this.download(data, this.filePrefix + \".pdf\")];\n                }\n                return [2 /*return*/, this.download(data, this.filePrefix + \".\" + type, options && options.addBOM)];\n              }\n            } else {\n              // Throw exception?\n              // @todo\n              // Dispatch event\n              if (this.events.isEnabled(\"error\")) {\n                event_3 = {\n                  \"type\": \"error\",\n                  \"target\": this,\n                  \"format\": type,\n                  \"options\": options\n                };\n                this.events.dispatchImmediately(\"error\", event_3);\n              }\n              return [2 /*return*/, false];\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * A function that should handle unsupported export types.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param type     Export type\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   */\n  Export.prototype.unsupported = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        // TODO should this return `undefined`?\n        return [2 /*return*/, \"\"];\n      });\n    });\n  };\n  /**\r\n   * Handles click on a \"custom\" menu item.\r\n   *\r\n   * Basically, if it has \"callback\" enabled, it will be called. Nothing else.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param options  Options\r\n   */\n  Export.prototype.handleCustom = function (options) {\n    if ($type.hasValue(options) && $type.hasValue(options.callback)) {\n      options.callback.call(options.callbackTarget || this, options);\n    }\n  };\n  /**\r\n   * Requests a Print of the chart.\r\n   *\r\n   * @param type     Export type\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   */\n  Export.prototype.getPrint = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.getImage(\"png\", options)];\n      });\n    });\n  };\n  /**\r\n   * A function that returns data: URI encoded @font-family, so that way it can be embedded into SVG.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return String which can be embedded directly into a <style> element.\r\n   * @async\r\n   */\n  Export.prototype.getFontFamilies = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var DOMURL, blobs, promises, a;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            DOMURL = this.getDOMURL();\n            blobs = [];\n            promises = [];\n            return [4 /*yield*/, eachStylesheets(function (topUrl, rule) {\n              if (rule.type === CSSRule.FONT_FACE_RULE) {\n                var cssText_1 = rule.cssText;\n                // TODO this is necessary because Edge doesn't let you access the src using getPropertyValue\n                var src = fontFamilySrcRegexp.exec(cssText_1);\n                if (src !== null) {\n                  // TODO make this faster (don't create Promises for non-url stuff)\n                  var urls = src[1].split(/ *, */).map(function (url) {\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var a, after, fullUrl, response, url_1, e_3;\n                      return __generator(this, function (_a) {\n                        switch (_a.label) {\n                          case 0:\n                            a = /^url\\([\"']?([^\"'\\)]+)[\"']?\\)([^,]*)$/.exec(url);\n                            if (!(a === null)) return [3 /*break*/, 1];\n                            return [2 /*return*/, url];\n                          case 1:\n                            after = a[2];\n                            fullUrl = $utils.joinUrl(topUrl, a[1]);\n                            if (this.webFontFilter && !fullUrl.match(this.webFontFilter)) {\n                              return [2 /*return*/, null];\n                            }\n                            _a.label = 2;\n                          case 2:\n                            _a.trys.push([2, 7,, 8]);\n                            return [4 /*yield*/, $net.load(fullUrl, undefined, {\n                              responseType: \"blob\"\n                            })];\n                          case 3:\n                            response = _a.sent();\n                            if (!supportsBlobUri()) return [3 /*break*/, 4];\n                            url_1 = DOMURL.createObjectURL(response.blob);\n                            blobs.push(url_1);\n                            return [3 /*break*/, 6];\n                          case 4:\n                            return [4 /*yield*/, blobToDataUri(response.blob)];\n                          case 5:\n                            url_1 = _a.sent();\n                            _a.label = 6;\n                          case 6:\n                            // TODO should it should escape the URI ?\n                            return [2 /*return*/, \"url(\\\"\" + url_1 + \"\\\")\" + after];\n                          case 7:\n                            e_3 = _a.sent();\n                            console.error(\"Failed to load font\", fullUrl, e_3);\n                            return [2 /*return*/, null];\n                          case 8:\n                            return [2 /*return*/];\n                        }\n                      });\n                    });\n                  });\n                  promises.push(Promise.all(urls).then(function (a) {\n                    a = a.filter(function (x) {\n                      return x != null;\n                    });\n                    if (a.length === 0) {\n                      return \"\";\n                    } else {\n                      return cssText_1.replace(fontFamilySrcRegexp, \"src: \" + a.join(\", \") + \";\");\n                    }\n                  }));\n                }\n              }\n            })];\n          case 1:\n            _a.sent();\n            return [4 /*yield*/, Promise.all(promises)];\n          case 2:\n            a = _a.sent();\n            return [2 /*return*/, {\n              blobs: blobs,\n              cssText: a.filter(function (x) {\n                return !!x;\n              }).join(\"\\n\")\n            }];\n        }\n      });\n    });\n  };\n  /**\r\n   * Produces image output from the element.\r\n   *\r\n   * Converts to a `Canvas` first, then produces an image to download.\r\n   *\r\n   * This is an asynchronous function. Rather than returning a result, it\r\n   * returns a Promise.\r\n   *\r\n   * You can use `await` notion from other async functions, or `then()`\r\n   * anywhere else.\r\n   *\r\n   * ```TypeScript\r\n   * let img;\r\n   *\r\n   * // Async\r\n   * img = await chart.exporting.getImage( \"png\" );\r\n   *\r\n   * // Sync\r\n   * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n   *   img = data;\r\n   * } );\r\n   * ```\r\n   * ```JavaScript\r\n   * var img;\r\n   * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n   *   img = data;\r\n   * } );\r\n   * ```\r\n   *\r\n   * @param  type           Image format\r\n   * @param  options        Options\r\n   * @param  includeExtras  Should extra sprites be included if set?\r\n   * @return Promise\r\n   */\n  Export.prototype.getImage = function (type, options, includeExtras) {\n    return __awaiter(this, void 0, void 0, function () {\n      var prehidden, canvas, newCanvas, uri, e_4, data, data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            prehidden = this._objectsAlreadyHidden;\n            if (!prehidden) {\n              this.hideNonExportableSprites();\n            }\n            if (!$type.hasValue(options)) {\n              options = this.getFormatOptions(type);\n            }\n            // Wait for required elements to be ready before proceeding\n            return [4 /*yield*/, this.awaitValidSprites()];\n          case 1:\n            // Wait for required elements to be ready before proceeding\n            _a.sent();\n            return [4 /*yield*/, this.simplifiedImageExport()];\n          case 2:\n            if (!_a.sent()) return [3 /*break*/, 10];\n            canvas = void 0;\n            _a.label = 3;\n          case 3:\n            _a.trys.push([3, 7,, 9]);\n            return [4 /*yield*/, this.getCanvas(options)];\n          case 4:\n            canvas = _a.sent();\n            if (!(includeExtras !== false)) return [3 /*break*/, 6];\n            return [4 /*yield*/, this.addExtras(canvas, options)];\n          case 5:\n            newCanvas = _a.sent();\n            this.disposeCanvas(canvas);\n            canvas = newCanvas;\n            _a.label = 6;\n          case 6:\n            uri = canvas.toDataURL(this.getContentType(type), options.quality);\n            // Get rid of the canvas\n            this.disposeCanvas(canvas);\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n            return [2 /*return*/, uri];\n          case 7:\n            e_4 = _a.sent();\n            console.error(e_4.message + \"\\n\" + e_4.stack);\n            $log.warn(\"Simple export failed, falling back to advanced export\");\n            if (canvas) {\n              this.disposeCanvas(canvas);\n            }\n            return [4 /*yield*/, this.getImageAdvanced(type, options, includeExtras)];\n          case 8:\n            data = _a.sent();\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n            return [2 /*return*/, data];\n          case 9:\n            return [3 /*break*/, 12];\n          case 10:\n            return [4 /*yield*/, this.getImageAdvanced(type, options, includeExtras)];\n          case 11:\n            data = _a.sent();\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n            return [2 /*return*/, data];\n          case 12:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Adds extra elements to the canvas.\r\n   *\r\n   * @param  canvas   Original canvas\r\n   * @param  options  Options\r\n   */\n  Export.prototype.addExtras = function (canvas, options, advanced) {\n    return __awaiter(this, void 0, void 0, function () {\n      var middleLeft_1, middleTop_1, middleWidth_1, middleHeight_1, extraRight_1, extraBottom_1, extras, newCanvas, ctx_1, background, left_1, top_1, right_1, bottom_1;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.extraSprites.length) return [3 /*break*/, 2];\n            middleLeft_1 = 0;\n            middleTop_1 = 0;\n            middleWidth_1 = canvas.width;\n            middleHeight_1 = canvas.height;\n            extraRight_1 = 0;\n            extraBottom_1 = 0;\n            return [4 /*yield*/, Promise.all($array.map(this.extraSprites, function (extraSprite) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var extra, extraCanvas, extraWidth, extraHeight;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      if (extraSprite instanceof Sprite) {\n                        extra = {\n                          sprite: extraSprite,\n                          position: \"bottom\"\n                        };\n                      } else {\n                        extra = extraSprite;\n                      }\n                      // Set defaults\n                      extra.position = extra.position || \"bottom\";\n                      extra.marginTop = extra.marginTop || 0;\n                      extra.marginRight = extra.marginRight || 0;\n                      extra.marginBottom = extra.marginBottom || 0;\n                      extra.marginLeft = extra.marginLeft || 0;\n                      if (!advanced) return [3 /*break*/, 2];\n                      return [4 /*yield*/, extra.sprite.exporting.getCanvasAdvanced(options)];\n                    case 1:\n                      extraCanvas = _a.sent();\n                      return [3 /*break*/, 4];\n                    case 2:\n                      return [4 /*yield*/, extra.sprite.exporting.getCanvas(options)];\n                    case 3:\n                      extraCanvas = _a.sent();\n                      _a.label = 4;\n                    case 4:\n                      extraWidth = extraCanvas.width + extra.marginLeft + extra.marginRight;\n                      extraHeight = extraCanvas.height + extra.marginTop + extra.marginBottom;\n                      if (extra.position == \"top\") {\n                        middleWidth_1 = extra.crop ? middleHeight_1 : $math.max(middleWidth_1, extraWidth);\n                        middleTop_1 += extraHeight;\n                      } else if (extra.position == \"right\") {\n                        middleHeight_1 = extra.crop ? middleHeight_1 : $math.max(middleHeight_1, extraHeight);\n                        extraRight_1 += extraWidth;\n                      } else if (extra.position == \"left\") {\n                        middleHeight_1 = extra.crop ? middleHeight_1 : $math.max(middleHeight_1, extraHeight);\n                        middleLeft_1 += extraWidth;\n                      } else if (extra.position === \"bottom\") {\n                        middleWidth_1 = extra.crop ? middleHeight_1 : $math.max(middleWidth_1, extraWidth);\n                        extraBottom_1 += extraHeight;\n                      }\n                      return [2 /*return*/, {\n                        canvas: extraCanvas,\n                        position: extra.position,\n                        left: extra.marginLeft,\n                        top: extra.marginTop,\n                        width: extraWidth,\n                        height: extraHeight\n                      }];\n                  }\n                });\n              });\n            }))];\n          case 1:\n            extras = _a.sent();\n            newCanvas = this.getDisposableCanvas();\n            newCanvas.width = middleLeft_1 + middleWidth_1 + extraRight_1;\n            newCanvas.height = middleTop_1 + middleHeight_1 + extraBottom_1;\n            ctx_1 = newCanvas.getContext(\"2d\");\n            background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\n            if (background) {\n              ctx_1.fillStyle = background.toString();\n              ctx_1.fillRect(0, 0, newCanvas.width, newCanvas.height);\n            }\n            left_1 = middleLeft_1;\n            top_1 = middleTop_1;\n            right_1 = left_1 + middleWidth_1;\n            bottom_1 = top_1 + middleHeight_1;\n            // Radiates outwards from center\n            $array.each(extras, function (extra) {\n              if (extra.position == \"top\") {\n                top_1 -= extra.height;\n                ctx_1.drawImage(extra.canvas, middleLeft_1 + extra.left, top_1 + extra.top);\n              } else if (extra.position == \"right\") {\n                ctx_1.drawImage(extra.canvas, right_1 + extra.left, middleTop_1 + extra.top);\n                right_1 += extra.width;\n              } else if (extra.position == \"left\") {\n                left_1 -= extra.width;\n                ctx_1.drawImage(extra.canvas, left_1 + extra.left, middleTop_1 + extra.top);\n              } else if (extra.position === \"bottom\") {\n                ctx_1.drawImage(extra.canvas, middleLeft_1 + extra.left, bottom_1 + extra.top);\n                bottom_1 += extra.height;\n              }\n              _this.disposeCanvas(extra.canvas);\n            });\n            ctx_1.drawImage(canvas, middleLeft_1, middleTop_1);\n            return [2 /*return*/, newCanvas];\n          case 2:\n            return [2 /*return*/, canvas];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns canvas representation of the [[Sprite]].\r\n   *\r\n   * @param   options  Options\r\n   * @return           Canvas\r\n   */\n  Export.prototype.getCanvas = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var background, DOMURL, url, blobs, canvas, width, height, font, fontSize, scale, pixelRatio, ctx, promises, a, data, svg, img;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Options are set?\n            if (!$type.hasValue(options)) {\n              options = {};\n            }\n            background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\n            DOMURL = this.getDOMURL();\n            url = null;\n            blobs = null;\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1,, 4, 5]);\n            width = this.sprite.pixelWidth;\n            height = this.sprite.pixelHeight;\n            font = $dom.findFont(this.sprite.dom);\n            fontSize = $dom.findFontSize(this.sprite.dom);\n            scale = options.scale || 1;\n            pixelRatio = this.getPixelRatio(options);\n            // Check if scale needs to be updated as per min/max dimensions\n            scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\n            // Create canvas and its 2D context\n            canvas = this.getDisposableCanvas();\n            // Set canvas width/height\n            canvas.style.width = width * scale + 'px';\n            canvas.style.height = height * scale + 'px';\n            canvas.width = width * scale;\n            canvas.height = height * scale;\n            ctx = canvas.getContext(\"2d\");\n            // if (pixelRatio != 1) {\n            // \tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            // }\n            // Add background if necessary\n            if (background) {\n              ctx.fillStyle = background.toString();\n              ctx.fillRect(0, 0, width * scale, height * scale);\n            }\n            promises = [];\n            if (this.useWebFonts) {\n              // TODO what if one of the other things errors before it's been able to set `blobs` ?\n              promises.push(this.getFontFamilies().then(function (fonts) {\n                blobs = fonts.blobs;\n                return fonts.cssText;\n              }));\n            }\n            promises.push(this.imagesToDataURI(this.sprite.dom, options));\n            promises.push(this.prepForeignObjects(this.sprite.dom, options));\n            return [4 /*yield*/, Promise.all(promises)];\n          case 2:\n            a = _a.sent();\n            data = this.normalizeSVG(\"<style>\" + a[0] + \"</style>\" + this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize);\n            svg = new Blob([data], {\n              type: \"image/svg+xml\"\n            });\n            url = DOMURL.createObjectURL(svg);\n            return [4 /*yield*/, this.loadNewImage(url, width * scale * pixelRatio, height * scale * pixelRatio, \"anonymous\")];\n          case 3:\n            img = _a.sent();\n            // Draw image on canvas\n            ctx.drawImage(img, 0, 0);\n            return [3 /*break*/, 5];\n          case 4:\n            if (url !== null) {\n              DOMURL.revokeObjectURL(url);\n            }\n            if (blobs !== null) {\n              $array.each(blobs, function (url) {\n                DOMURL.revokeObjectURL(url);\n              });\n            }\n            // Restore replaced tainted images in DOM\n            this.restoreRemovedObjects();\n            return [7 /*endfinally*/];\n          case 5:\n            return [2 /*return*/, canvas];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns canvas representation of the [[Sprite]] using canvg.\r\n   *\r\n   * @param   options  Options\r\n   * @return           Canvas\r\n   */\n  Export.prototype.getCanvasAdvanced = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var background, canvg, width, height, font, fontSize, scale, pixelRatio, data, canvas, config;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Options are set?\n            if (!$type.hasValue(options)) {\n              options = {};\n            }\n            // Convert external images to data uris\n            return [4 /*yield*/, this.imagesToDataURI(this.sprite.dom, options)];\n          case 1:\n            // Convert external images to data uris\n            _a.sent();\n            background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\n            return [4 /*yield*/, this.canvg];\n          case 2:\n            canvg = _a.sent();\n            width = this.sprite.pixelWidth;\n            height = this.sprite.pixelHeight;\n            font = $dom.findFont(this.sprite.dom);\n            fontSize = $dom.findFontSize(this.sprite.dom);\n            scale = options.scale || 1;\n            pixelRatio = this.getPixelRatio(options);\n            // Check if scale needs to be updated as per min/max dimensions\n            scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\n            data = this.normalizeSVG(this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize, background);\n            canvas = this.getDisposableCanvas();\n            // Set canvas width/height\n            canvas.style.width = width * pixelRatio * scale + 'px';\n            canvas.style.height = height * pixelRatio * scale + 'px';\n            canvas.width = width * pixelRatio * scale;\n            canvas.height = height * pixelRatio * scale;\n            config = {\n              //ignoreDimensions: true,\n              useCORS: true\n            };\n            if (pixelRatio != 1) {\n              config.ignoreDimensions = true;\n              config.scaleWidth = width * pixelRatio * scale;\n              config.scaleHeight = height * pixelRatio * scale;\n            }\n            return [4 /*yield*/, canvg.fromString(canvas.getContext(\"2d\"), data, config).render()];\n          case 3:\n            _a.sent();\n            return [2 /*return*/, canvas];\n        }\n      });\n    });\n  };\n  /**\r\n   * Tries to dynamically load [canvg.js](https://github.com/canvg/canvg) and\r\n   * export an image using its functions.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type     Image format\r\n   * @param options  Options\r\n   * @return Data uri\r\n   */\n  Export.prototype.getImageAdvanced = function (type, options, includeExtras) {\n    return __awaiter(this, void 0, void 0, function () {\n      var prehidden, canvas, uri;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            prehidden = this._objectsAlreadyHidden;\n            if (!prehidden) {\n              this.hideNonExportableSprites();\n            }\n            if (!$type.hasValue(options)) {\n              options = this.getFormatOptions(type);\n            }\n            return [4 /*yield*/, this.getCanvasAdvanced(options)];\n          case 1:\n            canvas = _a.sent();\n            if (!(includeExtras !== false)) return [3 /*break*/, 3];\n            return [4 /*yield*/, this.addExtras(canvas, options, true)];\n          case 2:\n            canvas = _a.sent();\n            _a.label = 3;\n          case 3:\n            uri = canvas.toDataURL(this.getContentType(type), options.quality);\n            // Get rid of the canvas\n            this.disposeCanvas(canvas);\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n            return [2 /*return*/, uri];\n        }\n      });\n    });\n  };\n  /**\r\n   * Creates a `<canvas>` element and returns it.\r\n   *\r\n   * @return Canvas element\r\n   */\n  Export.prototype.getDisposableCanvas = function () {\n    var canvas = document.createElement(\"canvas\");\n    canvas.style.position = \"fixed\";\n    canvas.style.top = \"-10000px\";\n    document.body.appendChild(canvas);\n    return canvas;\n  };\n  /**\r\n   * Removes canvas.\r\n   *\r\n   * @param canvas  Canvas element\r\n   */\n  Export.prototype.disposeCanvas = function (canvas) {\n    if (document.body.contains(canvas)) {\n      document.body.removeChild(canvas);\n    }\n  };\n  /**\r\n   * Returns pixel ratio for retina displays.\r\n   *\r\n   * @return Pixel ratio\r\n   */\n  Export.prototype.getPixelRatio = function (options) {\n    // const scale = options && options.scale ? options.scale : 1;\n    // return (this.useRetina ? $utils.getPixelRatio() : 1) * scale;\n    return this.useRetina ? $utils.getPixelRatio() : 1;\n  };\n  /**\r\n   * Calculates adjusted scale if image does not fit or is larger than min/max\r\n   * settings.\r\n   *\r\n   * @param   width    Width of the source image\r\n   * @param   height   Height of the source image\r\n   * @param   scale    Current scale\r\n   * @param   options  Options\r\n   * @return           Adjusted scale\r\n   */\n  Export.prototype.getAdjustedScale = function (width, height, scale, options) {\n    if (!options) {\n      return scale;\n    }\n    var adjWidth = width * scale;\n    var adjHeight = width * scale;\n    // Check max restrictions\n    var widthScale;\n    var heightScale;\n    if (options.maxWidth && adjWidth > options.maxWidth) {\n      widthScale = options.maxWidth / width;\n    }\n    if (options.maxHeight && adjHeight > options.maxHeight) {\n      heightScale = options.maxHeight / height;\n    }\n    if (widthScale || heightScale) {\n      return $math.min(widthScale, heightScale);\n    }\n    // Check min restrictions\n    if (options.minWidth && adjWidth < options.minWidth) {\n      widthScale = options.minWidth / width;\n    }\n    if (options.minHeight && adjHeight < options.minHeight) {\n      heightScale = options.minHeight / height;\n    }\n    if (widthScale || heightScale) {\n      return $math.max(widthScale, heightScale);\n    }\n    return scale;\n  };\n  /**\r\n   * Converts all `<image>` tags in SVG to use data uris instead of external\r\n   * URLs\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el       SVG node\r\n   * @param options  Options\r\n   * @return Promise\r\n   */\n  Export.prototype.imagesToDataURI = function (el, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var images, promises, count, i, image, href;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            images = el.querySelectorAll(\"image\");\n            if (!images.length) return [3 /*break*/, 2];\n            promises = [];\n            // There are images, process each of them\n            for (count = images.length, i = 0; i < count; i++) {\n              image = images[i];\n              href = image.getAttributeNS(Export.XLINK, \"href\");\n              // no href?\n              if (!href) {\n                continue;\n              }\n              if (href.indexOf(\"data:image\") !== -1) {\n                // Ignore image if it's already in Data URI format\n              } else {\n                // SVG or bitmap image?\n                if (href.indexOf(\".svg\") !== -1) {\n                  promises.push(this.svgToDataURI(image, options));\n                } else {\n                  promises.push(this.imageToDataURI(image, options));\n                }\n              }\n            }\n            return [4 /*yield*/, Promise.all(promises)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n          case 2:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * `foreignObject` elements cannot be exported. This function hides them\r\n   * temprarily. In the future it might try to convert them to SVG to make them\r\n   * exportable.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el       SVG node\r\n   * @param options  Options\r\n   * @return Promise\r\n   */\n  Export.prototype.prepForeignObjects = function (el, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var objects, count, i;\n      return __generator(this, function (_a) {\n        objects = el.querySelectorAll(\"foreignObject\");\n        if (objects.length) {\n          // There are foreign objects, process each of them\n          for (count = objects.length, i = 0; i < count; i++) {\n            this.temporarilyRemoveObject(objects[i]);\n          }\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n  /**\r\n   * Converts an SVG `<image>` to use its data uri for `href` instead of\r\n   * external file.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el       SVG element\r\n   * @param options  Options\r\n   */\n  Export.prototype.imageToDataURI = function (el, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var img, canvas, uri, e_5;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n            return [4 /*yield*/, this.loadNewImage(el.getAttributeNS(Export.XLINK, \"href\"), null, null, \"anonymous\")];\n          case 1:\n            // Create image\n            img = _a.sent();\n            canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            // Draw new image on it via `toDataURL`\n            canvas.getContext(\"2d\").drawImage(img, 0, 0);\n            // Replace image `href` with data uri\n            // If we got to this point it means image has loaded, however we might\n            // still get an error with `toDataURL()`\n            try {\n              uri = canvas.toDataURL();\n              el.setAttribute(\"href\", uri);\n              return [2 /*return*/, uri];\n            } catch (e) {\n              // Give up and temporarily remove the element href temporarily\n              if (options.keepTainted !== false) {\n                /*this._removedObjects.push({\r\n                    \"element\": el,\r\n                    \"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n                });\r\n                el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\n                this.temporarilyRemoveObject(el);\n              }\n              return [2 /*return*/, undefined];\n            }\n            return [3 /*break*/, 3];\n          case 2:\n            e_5 = _a.sent();\n            // Give up and temporarily remove the element's href\n            if (!options || options.keepTainted !== false) {\n              /*this._removedObjects.push({\r\n                  \"element\": el,\r\n                  \"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n              });\r\n              el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\n              this.temporarilyRemoveObject(el);\n            }\n            return [2 /*return*/, undefined];\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Converts `<image>` with external SVG source to data uri. Loads external SVG\r\n   * file, then converts it to data uri and replaces the `xlink:href` parameter.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el        An SVG element\r\n   * @param options   Options\r\n   */\n  Export.prototype.svgToDataURI = function (el, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var href, data, charset, uri, e_6;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            href = el.getAttributeNS(Export.XLINK, \"href\");\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, $net.load(href)];\n          case 2:\n            data = _a.sent();\n            charset = this.adapter.apply(\"charset\", {\n              charset: \"base64\",\n              type: \"svg\",\n              options: options\n            }).charset;\n            uri = this.adapter.apply(\"svgToDataURI\", {\n              data: \"data:\" + this.getContentType(\"svg\") + \";\" + charset + \",\" + btoa(data.response),\n              options: options\n            }).data;\n            el.setAttributeNS(Export.XLINK, \"href\", uri);\n            return [2 /*return*/, uri];\n          case 3:\n            e_6 = _a.sent();\n            // Disable temporarily\n            if (!options || options.keepTainted !== false) {\n              /*this._removedObjects.push({\r\n                  \"element\": el,\r\n                  \"originalHref\": href\r\n              });\r\n              el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\n              this.temporarilyRemoveObject(el);\n            }\n            return [2 /*return*/, undefined];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Temporarily removes element from DOM, and replaces it with a dummy\r\n   * placeholder, as well as stores it for later restoration.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el Node\r\n   */\n  Export.prototype.temporarilyRemoveObject = function (el, placeholder) {\n    // Get parent\n    var parent = el.parentElement || el.parentNode;\n    // Create a placeholder group element if it has not been passed in\n    if (!placeholder) {\n      placeholder = this.sprite.paper.add(\"g\").node;\n    }\n    parent.insertBefore(placeholder, el);\n    // Check if we have a textContents we can replace with\n    // @todo Perhaps we should explore alternatives to creating text nodes\n    // i.e. creating a text version of the HTML-based Text, just for export\n    // purposes. Converting HTML into SVG is very complicated\n    if (el.textContent) {\n      /*let text = this.sprite.paper.add(\"text\").node;\r\n      text.textContent = el.textContent;\r\n      placeholder.appendChild(text);\r\n        // Copy properties from the removing element to the placeholder\r\n      $dom.copyAttributes(el, placeholder);*/\n    }\n    // Remove the old element\n    parent.removeChild(el);\n    // Log removed item\n    this._removedObjects.push({\n      \"element\": el,\n      \"placeholder\": placeholder\n    });\n  };\n  /**\r\n   * Restores all (possibly tainted or unsupported) objects that were\r\n   * temporarily removed when exporting.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Export.prototype.restoreRemovedObjects = function () {\n    var obj;\n    while (true) {\n      obj = this._removedObjects.pop();\n      if (!obj) {\n        break;\n      }\n      //obj.element.setAttribute(\"href\", obj.originalHref);\n      var parent_1 = obj.placeholder.parentElement || obj.placeholder.parentNode;\n      parent_1.insertBefore(obj.element, obj.placeholder);\n      //parent.removeChild(obj.placeholder);\n    }\n  };\n  /**\r\n   * Checkes if simplified export can be used using `createObjectURL` and SVG\r\n   * document does not contain any external images.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return `true` if simplified export can be used\r\n   */\n  Export.prototype.simplifiedImageExport = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var cache, canvas, ctx, DOMURL, svg, url, img, e_7, e_8;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this.useSimplifiedExport === false) {\n              return [2 /*return*/, false];\n            }\n            cache = registry.getCache(\"simplifiedImageExport\");\n            if (cache === false || cache === true) {\n              return [2 /*return*/, cache];\n            }\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 6,, 7]);\n            canvas = document.createElement(\"canvas\");\n            canvas.width = 1;\n            canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            DOMURL = this.getDOMURL();\n            svg = new Blob([this.normalizeSVG(\"<g></g>\", {}, 1, 1)], {\n              type: \"image/svg+xml\"\n            });\n            url = DOMURL.createObjectURL(svg);\n            img = void 0;\n            _a.label = 2;\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n            return [4 /*yield*/, this.loadNewImage(url, 1, 1)];\n          case 3:\n            img = _a.sent();\n            return [3 /*break*/, 5];\n          case 4:\n            e_7 = _a.sent();\n            return [2 /*return*/, false];\n          case 5:\n            ctx.drawImage(img, 0, 0);\n            DOMURL.revokeObjectURL(url);\n            try {\n              //let uri = canvas.toDataURL(\"image/png\");\n              registry.setCache(\"simplifiedImageExport\", true);\n              return [2 /*return*/, true];\n            } catch (e) {\n              registry.setCache(\"simplifiedImageExport\", false);\n              return [2 /*return*/, false];\n            }\n            return [3 /*break*/, 7];\n          case 6:\n            e_8 = _a.sent();\n            registry.setCache(\"simplifiedImageExport\", false);\n            return [2 /*return*/, false];\n          case 7:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns a new `<image>` element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param url          URL of the image\r\n   * @param width        Width (px)\r\n   * @param height       Height (px)\r\n   * @param crossOrigin  Cross-Origin setting\r\n   * @return Promise\r\n   */\n  Export.prototype.loadNewImage = function (url, width, height, crossOrigin) {\n    return new Promise(function (success, error) {\n      // New image\n      var image;\n      if (width && height) {\n        image = new Image(width, height);\n      } else {\n        image = new Image();\n      }\n      // Set crossorigin\n      if (crossOrigin) {\n        image.setAttribute(\"crossOrigin\", crossOrigin);\n      }\n      // Report success on load\n      image.onload = function () {\n        success(image);\n      };\n      function onerror() {\n        // Error occurred. Just in case it's the crossOrigin issue, let's try\n        // stripping off this attribute and trying again\n        if (crossOrigin) {\n          // Retain old uri\n          var currentHref = image.src;\n          // Set up another `onerror` to handle situations where image is not\n          // loadable at all (i.e. protected by CORS)\n          image.onerror = function () {\n            // Nope, no luck\n            error(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\n          };\n          // remove the `crossOrigin` attribute\n          image.removeAttribute(\"crossorigin\");\n          // retry\n          image.src = \"\";\n          image.src = currentHref;\n        } else {\n          error(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\n        }\n      }\n      // Set image error handlers\n      image.onabort = onerror;\n      image.onerror = onerror;\n      // Trigger load\n      image.src = url;\n    });\n  };\n  /**\r\n   * Returns current DOM URL.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return URL\r\n   */\n  Export.prototype.getDOMURL = function () {\n    return self.URL || self.webkitURL || self;\n  };\n  /**\r\n   * Returns an SVG representation of the chart.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type       Type of the export\r\n   * @param options    Options\r\n   * @param encodeURI  If true, will return result will be data URI\r\n   * @return Promise\r\n   */\n  Export.prototype.getSVG = function (type, options, encodeURI) {\n    if (encodeURI === void 0) {\n      encodeURI = true;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var prehidden, width, height, font, fontSize, scale, pixelRatio, svg, charset, uri;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            prehidden = this._objectsAlreadyHidden;\n            if (!prehidden) {\n              this.hideNonExportableSprites();\n            }\n            if (!$type.hasValue(options)) {\n              options = this.getFormatOptions(\"svg\");\n            }\n            // Wait for required elements to be ready before proceeding\n            return [4 /*yield*/, this.awaitValidSprites()];\n          case 1:\n            // Wait for required elements to be ready before proceeding\n            _a.sent();\n            width = this.sprite.pixelWidth;\n            height = this.sprite.pixelHeight;\n            font = $dom.findFont(this.sprite.dom);\n            fontSize = $dom.findFontSize(this.sprite.dom);\n            scale = options.scale || 1;\n            pixelRatio = this.getPixelRatio(options);\n            // Check if scale needs to be updated as per min/max dimensions\n            scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\n            svg = this.normalizeSVG(this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize);\n            charset = this.adapter.apply(\"charset\", {\n              charset: \"charset=utf-8\",\n              type: \"svg\",\n              options: options\n            }).charset;\n            uri = this.adapter.apply(\"getSVG\", {\n              data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(svg) : svg,\n              options: options\n            }).data;\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n            return [2 /*return*/, uri];\n        }\n      });\n    });\n  };\n  /**\r\n   * Checks if SVG is fully formatted. Encloses in `<svg>...</svg>` if\r\n   * necessary.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param svg       Input SVG\r\n   * @param options   Options\r\n   * @param width     Width of the SVG viewport\r\n   * @param height    Height of the SVG viewport\r\n   * @param font      Font family to use as a base\r\n   * @param fontSize  Font size to use as a base\r\n   * @return Output SVG\r\n   * @todo Add style params to existing <svg>\r\n   */\n  Export.prototype.normalizeSVG = function (svg, options, width, height, scale, font, fontSize, background) {\n    // Construct width/height params\n    var dimParams = \"\";\n    if (width) {\n      dimParams += \"width=\\\"\" + Math.round(width * (scale || 1)) + \"px\\\" \";\n    }\n    if (height) {\n      dimParams += \"height=\\\"\" + Math.round(height * (scale || 1)) + \"px\\\" \";\n    }\n    // Apply font settings\n    var styleParams = \"\";\n    if (font) {\n      styleParams += \"font-family: \" + font.replace(/\"/g, \"\") + \";\";\n    }\n    if (fontSize) {\n      styleParams += \"font-size: \" + fontSize + \";\";\n    }\n    // Scale\n    if (scale) {\n      dimParams += \"viewBox=\\\"0 0 \" + width + \" \" + height + \"\\\" \";\n    }\n    // Remove foreign objects temporarily\n    var fos = [];\n    var ms = svg.match(/<foreignObject[\\s\\S]*<\\/foreignObject>/gi);\n    if (ms) {\n      for (var i = 0; i < ms.length; i++) {\n        svg = svg.replace(ms[i], $strings.PLACEHOLDER);\n        fos.push(ms[i]);\n      }\n    }\n    // Add missing <svg> enclosure\n    if (!svg.match(/<svg/)) {\n      svg = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><svg \" + dimParams + \" style=\\\"\" + styleParams + \"\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\" + svg + \"</svg>\";\n    } else {\n      if (dimParams !== \"\") {\n        // Clear current params\n        svg = svg.replace(/(<svg[^>]*)width=\"[^\"]*\"/, \"$1\");\n        svg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\n        // Add new params\n        svg = svg.replace(/(<svg)/, \"$1\" + dimParams);\n      }\n      /*if (styleParams !== \"\") {\r\n          // Clear current params\r\n          svg = svg.replace(/(<svg[^>]*)stylewidth=\"[^\"]*\"/, \"$1\");\r\n          svg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n            // Add new params\r\n          svg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n      }*/\n    }\n    if (background) {\n      svg = svg.replace(/(<svg[^>]*>)/, \"$1<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/>\");\n      //svg = svg.replace(/<\\/svg>/, \"<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/></svg>\");\n    }\n    if ($browser.isInternetExplorer()) {\n      // IE can't handle exporting <feColorMatrix> for some reason\n      svg = svg.replace(/<feColorMatrix [^\\/>]*\\/>/gi, \"\");\n    }\n    // Remove base uri-related stuff\n    var reg = new RegExp(\"url\\\\(\" + $utils.escapeForRgex($utils.getBaseURI()), \"g\");\n    svg = svg.replace(reg, \"url(#\");\n    // Remove escaped quotes in url() parameters\n    svg = svg.replace(/url\\(&quot;([^)]*)&quot;\\)/gm, \"url($1)\");\n    // Put foreignObjects back in\n    if (fos.length) {\n      for (var i = 0; i < fos.length; i++) {\n        svg = svg.replace($strings.PLACEHOLDER, fos[i]);\n      }\n    }\n    svg = this.adapter.apply(\"normalizeSVG\", {\n      data: svg,\n      options: options\n    }).data;\n    return svg;\n  };\n  /**\r\n   * Serializes an element and returns its contents.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param element  An element to serialize\r\n   * @return A serialized XML\r\n   */\n  Export.prototype.serializeElement = function (element) {\n    return new XMLSerializer().serializeToString(element);\n  };\n  /**\r\n   * Returns a PDF containing chart image.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type     Type of the export\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   * @todo Account for header when calculating vertical fit\r\n   */\n  Export.prototype.getPDF = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      function addFont(font) {\n        var paths = {};\n        paths.normal = font.normal.path;\n        vfs[font.normal.path] = font.normal.bytes;\n        if (font.bold) {\n          paths.bold = font.bold.path;\n          vfs[font.bold.path] = font.bold.bytes;\n        } else {\n          paths.bold = font.normal.path;\n        }\n        if (font.italics) {\n          paths.italics = font.italics.path;\n          vfs[font.italics.path] = font.italics.bytes;\n        } else {\n          paths.italics = font.normal.path;\n        }\n        if (font.bolditalics) {\n          paths.bolditalics = font.bolditalics.path;\n          vfs[font.bolditalics.path] = font.bolditalics.bytes;\n        } else {\n          paths.bolditalics = font.normal.path;\n        }\n        fonts[font.name] = paths;\n      }\n      var image, pdfmake, defaultMargins, doc, title, extraMargin, _a, _b, _c, fonts, vfs;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            return [4 /*yield*/, this.getImage(options.imageFormat || \"png\", options)];\n          case 1:\n            image = _d.sent();\n            return [4 /*yield*/, this.pdfmake];\n          case 2:\n            pdfmake = _d.sent();\n            defaultMargins = [30, 30, 30, 30];\n            doc = {\n              pageSize: options.pageSize || \"A4\",\n              pageOrientation: options.pageOrientation || \"portrait\",\n              pageMargins: options.pageMargins || defaultMargins,\n              defaultStyle: {\n                font: options.font ? options.font.name : undefined\n              },\n              //header: <any>[],\n              content: []\n            };\n            title = this.adapter.apply(\"title\", {\n              title: this.title,\n              options: options\n            }).title;\n            extraMargin = 0;\n            if (title) {\n              doc.content.push({\n                text: title,\n                fontSize: options.fontSize || 14,\n                bold: true,\n                margin: [0, 0, 0, 15]\n              });\n              // Add some leftover margin for title\n              extraMargin += 50;\n            }\n            // Add page URL?\n            if (options.addURL) {\n              doc.content.push({\n                text: this.language.translate(\"Saved from\") + \": \" + document.location.href,\n                fontSize: options.fontSize,\n                margin: [0, 0, 0, 15]\n              });\n              // Add some leftover margin for URL\n              extraMargin += 50;\n            }\n            // Add image\n            if (type != \"pdfdata\") {\n              doc.content.push({\n                image: image,\n                alignment: options.align || \"left\",\n                fit: this.getPageSizeFit(doc.pageSize, doc.pageMargins, extraMargin)\n              });\n            }\n            if (!(type == \"pdfdata\" || options.addData)) return [3 /*break*/, 4];\n            _b = (_a = doc.content).push;\n            _c = {};\n            return [4 /*yield*/, this.getPDFData(\"pdf\", options)];\n          case 3:\n            _b.apply(_a, [(_c.table = _d.sent(), _c.fontSize = options.fontSize || 14, _c)]);\n            _d.label = 4;\n          case 4:\n            // Apply adapters\n            doc = this.adapter.apply(\"pdfmakeDocument\", {\n              doc: doc,\n              options: options\n            }).doc;\n            fonts = null;\n            vfs = null;\n            if (options.font) {\n              fonts = {};\n              vfs = {};\n              addFont(options.font);\n              if (options.extraFonts) {\n                $array.each(options.extraFonts, addFont);\n              }\n            }\n            return [4 /*yield*/, new Promise(function (success, error) {\n              pdfmake.createPdf(doc, null, fonts, vfs).getDataUrl(function (uri) {\n                success(uri);\n              });\n            })];\n          case 5:\n            // Create PDF\n            return [2 /*return*/, _d.sent()];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns chart's data formatted suitable for PDF export (pdfmake).\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @since 4.7.0\r\n   * @param type     Type of the export\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   */\n  Export.prototype.getPDFData = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var content, dataFields, data, dataFieldsOrder_1, len, i;\n      var _this = this;\n      return __generator(this, function (_a) {\n        content = {\n          \"body\": []\n        };\n        dataFields = this.adapter.apply(\"formatDataFields\", {\n          dataFields: this.dataFields,\n          format: \"pdf\"\n        }).dataFields;\n        data = this.data;\n        // Vertical or horizontal (default) layout\n        if (options.pivot) {\n          dataFieldsOrder_1 = this.adapter.apply(\"dataFieldsOrder\", {\n            dataFieldsOrder: this.dataFieldsOrder,\n            format: \"pdfdata\"\n          }).dataFieldsOrder;\n          $object.eachOrdered(dataFields, function (key, val) {\n            var dataRow = [];\n            if (options.addColumnNames) {\n              dataRow.push(val);\n            }\n            for (var len = data.length, i = 0; i < len; i++) {\n              var dataValue = data[i][key];\n              dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\n            }\n            content.body.push(_this.getPDFDataRow(dataRow, options, undefined, true));\n          }, function (a, b) {\n            //console.log(a, b)\n            var ai = dataFieldsOrder_1.indexOf(a);\n            var bi = dataFieldsOrder_1.indexOf(b);\n            if (ai > bi) {\n              return 1;\n            } else if (ai < bi) {\n              return -1;\n            }\n            return 0;\n          });\n        } else {\n          // Add column names?\n          if (options.addColumnNames) {\n            content.body.push(this.getPDFDataRow(dataFields, options, undefined, true));\n            content.headerRows = 1;\n          }\n          for (len = data.length, i = 0; i < len; i++) {\n            content.body.push(this.getPDFDataRow(data[i], options, dataFields));\n          }\n        }\n        return [2 /*return*/, this.adapter.apply(\"pdfmakeTable\", {\n          table: content,\n          options: options\n        }).table];\n      });\n    });\n  };\n  /**\r\n   * Formats a row of data for use in PDF data table (pdfmake).\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @since 4.7.0\r\n   * @param  row         An object holding data for the row\r\n   * @param  options     Options\r\n   * @param  dataFields  Data fields\r\n   * @param  asIs        Do not try to convert to dates\r\n   * @return Formated Data line\r\n   */\n  Export.prototype.getPDFDataRow = function (row, options, dataFields, asIs) {\n    var _this = this;\n    if (asIs === void 0) {\n      asIs = false;\n    }\n    // Init\n    var items = [];\n    // Data fields\n    if (!dataFields) {\n      dataFields = row;\n    }\n    // Data fields order\n    var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\n      dataFieldsOrder: this.dataFieldsOrder,\n      format: \"pdfdata\"\n    }).dataFieldsOrder;\n    // Process each row item\n    $object.eachOrdered(dataFields, function (key, name) {\n      // Get value\n      var value = _this.convertEmptyValue(key, row[key], options);\n      // Convert dates\n      var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\n      item = \"\" + item;\n      // Add to item\n      items.push(item);\n    }, function (a, b) {\n      //console.log(a, b)\n      var ai = dataFieldsOrder.indexOf(a);\n      var bi = dataFieldsOrder.indexOf(b);\n      if (ai > bi) {\n        return 1;\n      } else if (ai < bi) {\n        return -1;\n      }\n      return 0;\n    });\n    return items;\n  };\n  /**\r\n   * Returns fit dimensions for available page sizes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param pageSize Page size\r\n   * @return `[width, height]` in pixels\r\n   */\n  Export.prototype.getPageSizeFit = function (pageSize, margins, extraMargin) {\n    if (extraMargin === void 0) {\n      extraMargin = 0;\n    }\n    // Check margins\n    var newMargins = [0, 0, 0, 0];\n    if (typeof margins == \"number\") {\n      newMargins = [margins, margins, margins, margins];\n    } else if (margins.length == 2) {\n      newMargins = [margins[0], margins[1], margins[0], margins[1]];\n    } else if (margins.length == 4) {\n      newMargins = margins;\n    }\n    // Define available page sizes\n    var sizes = {\n      \"4A0\": [4767.87, 6740.79],\n      \"2A0\": [3370.39, 4767.87],\n      A0: [2383.94, 3370.39],\n      A1: [1683.78, 2383.94],\n      A2: [1190.55, 1683.78],\n      A3: [841.89, 1190.55],\n      A4: [595.28, 841.89],\n      A5: [419.53, 595.28],\n      A6: [297.64, 419.53],\n      A7: [209.76, 297.64],\n      A8: [147.40, 209.76],\n      A9: [104.88, 147.40],\n      A10: [73.70, 104.88],\n      B0: [2834.65, 4008.19],\n      B1: [2004.09, 2834.65],\n      B2: [1417.32, 2004.09],\n      B3: [1000.63, 1417.32],\n      B4: [708.66, 1000.63],\n      B5: [498.90, 708.66],\n      B6: [354.33, 498.90],\n      B7: [249.45, 354.33],\n      B8: [175.75, 249.45],\n      B9: [124.72, 175.75],\n      B10: [87.87, 124.72],\n      C0: [2599.37, 3676.54],\n      C1: [1836.85, 2599.37],\n      C2: [1298.27, 1836.85],\n      C3: [918.43, 1298.27],\n      C4: [649.13, 918.43],\n      C5: [459.21, 649.13],\n      C6: [323.15, 459.21],\n      C7: [229.61, 323.15],\n      C8: [161.57, 229.61],\n      C9: [113.39, 161.57],\n      C10: [79.37, 113.39],\n      RA0: [2437.80, 3458.27],\n      RA1: [1729.13, 2437.80],\n      RA2: [1218.90, 1729.13],\n      RA3: [864.57, 1218.90],\n      RA4: [609.45, 864.57],\n      SRA0: [2551.18, 3628.35],\n      SRA1: [1814.17, 2551.18],\n      SRA2: [1275.59, 1814.17],\n      SRA3: [907.09, 1275.59],\n      SRA4: [637.80, 907.09],\n      EXECUTIVE: [521.86, 756.00],\n      FOLIO: [612.00, 936.00],\n      LEGAL: [612.00, 1008.00],\n      LETTER: [612.00, 792.00],\n      TABLOID: [792.00, 1224.00]\n    };\n    // Calculate size\n    var fitSize = sizes[pageSize];\n    fitSize[0] -= newMargins[0] + newMargins[2];\n    fitSize[1] -= newMargins[1] + newMargins[3] + extraMargin;\n    return fitSize;\n  };\n  /**\r\n   * Returns an Excel file of chart's data.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type     Type of the export\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   * @todo Handle dates\r\n   * @todo Support for multi-sheet\r\n   */\n  Export.prototype.getExcel = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var XLSX, wbOptions, sheetName, wb, data, dataFields, dataFieldsOrder_2, len, i, uri;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!$type.hasValue(options)) {\n              options = this.getFormatOptions(\"xlsx\");\n            }\n            return [4 /*yield*/, this.xlsx];\n          case 1:\n            XLSX = _a.sent();\n            wbOptions = this.adapter.apply(\"xlsxWorkbookOptions\", {\n              xlsx: XLSX,\n              options: {\n                bookType: \"xlsx\",\n                bookSST: false,\n                type: \"base64\"\n              }\n            }).options;\n            sheetName = this.normalizeExcelSheetName(this.adapter.apply(\"xlsxSheetName\", {\n              xlsx: XLSX,\n              name: this.title || this.language.translate(\"Data\")\n            }).name);\n            wb = {\n              SheetNames: [sheetName],\n              Sheets: {}\n            };\n            data = [];\n            dataFields = this.adapter.apply(\"formatDataFields\", {\n              dataFields: this.dataFields,\n              format: \"xslx\"\n            }).dataFields;\n            // Vertical or horizontal (default) layout\n            if (options.pivot) {\n              dataFieldsOrder_2 = this.adapter.apply(\"dataFieldsOrder\", {\n                dataFieldsOrder: this.dataFieldsOrder,\n                format: \"xlsx\"\n              }).dataFieldsOrder;\n              $object.eachOrdered(dataFields, function (key, val) {\n                var dataRow = [];\n                if (options.addColumnNames) {\n                  dataRow.push(val);\n                }\n                for (var len = _this.data.length, i = 0; i < len; i++) {\n                  var dataValue = _this.data[i][key];\n                  dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\n                }\n                data.push(_this.getExcelRow(dataRow, options, undefined, true));\n              }, function (a, b) {\n                //console.log(a, b)\n                var ai = dataFieldsOrder_2.indexOf(a);\n                var bi = dataFieldsOrder_2.indexOf(b);\n                if (ai > bi) {\n                  return 1;\n                } else if (ai < bi) {\n                  return -1;\n                }\n                return 0;\n              });\n            } else {\n              // Add column names?\n              if (options.addColumnNames) {\n                data.push(this.getExcelRow(dataFields, options, undefined, true));\n              }\n              // Add lines\n              for (len = this.data.length, i = 0; i < len; i++) {\n                data.push(this.getExcelRow(this.data[i], options, dataFields));\n              }\n            }\n            // Create sheet and add data\n            wb.Sheets[sheetName] = XLSX.utils.aoa_to_sheet(data);\n            // Apply adapters\n            wb = this.adapter.apply(\"xlsxWorkbook\", {\n              xlsx: XLSX,\n              workbook: wb,\n              options: options\n            }).workbook;\n            uri = this.adapter.apply(\"getExcel\", {\n              data: \"data:\" + this.getContentType(type) + \";base64,\" + XLSX.write(wb, wbOptions),\n              options: options\n            }).data;\n            return [2 /*return*/, uri];\n        }\n      });\n    });\n  };\n  /**\r\n   * This is needed to work around Excel limitations.\r\n   *\r\n   * @param name  Source name\r\n   * @return Normalized name\r\n   */\n  Export.prototype.normalizeExcelSheetName = function (name) {\n    name = name.replace(/([:\\\\\\/?*\\[\\]]+)/g, \" \");\n    return $utils.truncateWithEllipsis(name, 31, \"...\", true);\n  };\n  /**\r\n   * Rertuns an array of values to be used as Excel row.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param  row         Row data\r\n   * @param  options     Options\r\n   * @param  dataFields  Data fields\r\n   * @param  asIs        Do not try to convert to dates\r\n   * @return Array of values\r\n   */\n  Export.prototype.getExcelRow = function (row, options, dataFields, asIs) {\n    var _this = this;\n    if (asIs === void 0) {\n      asIs = false;\n    }\n    // Init\n    var items = [];\n    // Data fields\n    if (!dataFields) {\n      dataFields = row;\n    }\n    // Data fields order\n    var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\n      dataFieldsOrder: this.dataFieldsOrder,\n      format: \"xlsx\"\n    }).dataFieldsOrder;\n    // Process each row item\n    $object.eachOrdered(dataFields, function (key, name) {\n      // Get value\n      var value = _this.convertEmptyValue(key, row[key], options);\n      // Convert dates\n      var item = asIs ? value : _this.convertToSpecialFormat(key, value, options, true);\n      items.push(item);\n    }, function (a, b) {\n      //console.log(a, b)\n      var ai = dataFieldsOrder.indexOf(a);\n      var bi = dataFieldsOrder.indexOf(b);\n      if (ai > bi) {\n        return 1;\n      } else if (ai < bi) {\n        return -1;\n      }\n      return 0;\n    });\n    return items;\n  };\n  /**\r\n   * Returns chart's data formatted as CSV.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type       Type of the export\r\n   * @param options    Options\r\n   * @param encodeURI  If true, will return result will be data URI\r\n   * @return Promise\r\n   * @async\r\n   */\n  Export.prototype.getCSV = function (type, options, encodeURI) {\n    if (encodeURI === void 0) {\n      encodeURI = true;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var csv, dataFields, br, data, dataFieldsOrder_3, len, i, row, charset, uri;\n      var _this = this;\n      return __generator(this, function (_a) {\n        if (!$type.hasValue(options)) {\n          options = this.getFormatOptions(\"csv\");\n        }\n        csv = \"\";\n        dataFields = this.adapter.apply(\"formatDataFields\", {\n          dataFields: this.dataFields,\n          format: \"csv\"\n        }).dataFields;\n        br = \"\";\n        data = this.data;\n        // Vertical or horizontal (default) layout\n        if (options.pivot) {\n          dataFieldsOrder_3 = this.adapter.apply(\"dataFieldsOrder\", {\n            dataFieldsOrder: this.dataFieldsOrder,\n            format: \"csv\"\n          }).dataFieldsOrder;\n          $object.eachOrdered(dataFields, function (key, val) {\n            var dataRow = [];\n            if (options.addColumnNames) {\n              dataRow.push(val);\n            }\n            for (var len = data.length, i = 0; i < len; i++) {\n              var dataValue = data[i][key];\n              dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\n            }\n            csv += br + _this.getCSVRow(dataRow, options, undefined, true);\n            br = \"\\n\";\n          }, function (a, b) {\n            var ai = dataFieldsOrder_3.indexOf(a);\n            var bi = dataFieldsOrder_3.indexOf(b);\n            if (ai > bi) {\n              return -1;\n            } else if (ai < bi) {\n              return 1;\n            }\n            return 0;\n          });\n        } else {\n          for (len = data.length, i = 0; i < len; i++) {\n            row = this.getCSVRow(data[i], options, dataFields);\n            if (options.reverse) {\n              csv = row + br + csv;\n            } else {\n              csv += br + row;\n            }\n            br = \"\\n\";\n          }\n          // Add column names?\n          if (options.addColumnNames) {\n            csv = this.getCSVRow(dataFields, options, undefined, true) + br + csv;\n          }\n        }\n        charset = this.adapter.apply(\"charset\", {\n          charset: \"charset=utf-8\",\n          type: type,\n          options: options\n        }).charset;\n        uri = this.adapter.apply(\"getCSV\", {\n          data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(csv) : csv,\n          options: options\n        }).data;\n        return [2 /*return*/, uri];\n      });\n    });\n  };\n  /**\r\n   * Formats a row of CSV data.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param  row         An object holding data for the row\r\n   * @param  options     Options\r\n   * @param  dataFields  Data fields\r\n   * @param  asIs        Do not try to convert to dates\r\n   * @return Formated CSV line\r\n   */\n  Export.prototype.getCSVRow = function (row, options, dataFields, asIs) {\n    var _this = this;\n    if (asIs === void 0) {\n      asIs = false;\n    }\n    // Init\n    var separator = options.separator || \",\";\n    var items = [];\n    // Data fields\n    if (!dataFields) {\n      dataFields = row;\n    }\n    // Data fields order\n    var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\n      dataFieldsOrder: this.dataFieldsOrder,\n      format: \"csv\"\n    }).dataFieldsOrder;\n    // Process each row item\n    $object.eachOrdered(dataFields, function (key, name) {\n      // Get value\n      var value = _this.convertEmptyValue(key, row[key], options);\n      // Check if we need to skip\n      // This is no longer required because we are iterating via dataFields anyway\n      /*if ($type.hasValue(this.dataFields) && !$type.hasValue(this.dataFields[key])) {\r\n          return;\r\n      }*/\n      // Convert dates\n      var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\n      // Cast and escape doublequotes\n      item = \"\" + item;\n      item = item.replace(/\"/g, '\"\"');\n      // Enclose into double quotes\n      if (options.forceQuotes || item.search(new RegExp(\"\\\"|\\n|\" + separator, \"g\")) >= 0) {\n        item = \"\\\"\" + item + \"\\\"\";\n      }\n      // Add to item\n      items.push(item);\n    }, function (a, b) {\n      //console.log(a, b)\n      var ai = dataFieldsOrder.indexOf(a);\n      var bi = dataFieldsOrder.indexOf(b);\n      if (ai > bi) {\n        return 1;\n      } else if (ai < bi) {\n        return -1;\n      }\n      return 0;\n    });\n    return items.join(separator);\n  };\n  /**\r\n   * Returns chart's data formatted as HTML table.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @since 4.7.0\r\n   * @param type       Type of the export\r\n   * @param options    Options\r\n   * @param encodeURI  If true, will return result will be data URI\r\n   * @return Promise\r\n   * @async\r\n   */\n  Export.prototype.getHTML = function (type, options, encodeURI) {\n    if (encodeURI === void 0) {\n      encodeURI = true;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var html, dataFields, data, dataFieldsOrder_4, len, i, charset, uri;\n      var _this = this;\n      return __generator(this, function (_a) {\n        if (!$type.hasValue(options)) {\n          options = this.getFormatOptions(\"html\");\n        }\n        html = \"<table>\";\n        if (options.tableClass) {\n          html = \"<table class=\\\"\" + options.tableClass + \"\\\">\";\n        }\n        dataFields = this.adapter.apply(\"formatDataFields\", {\n          dataFields: this.dataFields,\n          format: \"html\"\n        }).dataFields;\n        data = this.data;\n        // Vertical or horizontal (default) layout\n        if (options.pivot) {\n          dataFieldsOrder_4 = this.adapter.apply(\"dataFieldsOrder\", {\n            dataFieldsOrder: this.dataFieldsOrder,\n            format: \"html\"\n          }).dataFieldsOrder;\n          html += \"\\n<tbody>\";\n          $object.eachOrdered(dataFields, function (key, val) {\n            var dataRow = [];\n            if (options.addColumnNames) {\n              dataRow.push(val);\n            }\n            for (var len = data.length, i = 0; i < len; i++) {\n              var dataValue = data[i][key];\n              dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\n            }\n            html += \"\\n\" + _this.getHTMLRow(dataRow, options, undefined, true);\n          }, function (a, b) {\n            var ai = dataFieldsOrder_4.indexOf(a);\n            var bi = dataFieldsOrder_4.indexOf(b);\n            if (ai > bi) {\n              return -1;\n            } else if (ai < bi) {\n              return 1;\n            }\n            return 0;\n          });\n          html += \"\\n</tbody>\";\n        } else {\n          // Add column names?\n          if (options.addColumnNames) {\n            html += \"\\n<thead>\\n\" + this.getHTMLRow(dataFields, options, undefined, true, true) + \"\\n</thead>\";\n          }\n          html += \"\\n<tbody>\";\n          for (len = data.length, i = 0; i < len; i++) {\n            html += \"\\n\" + this.getHTMLRow(data[i], options, dataFields);\n          }\n          html += \"\\n</tbody>\";\n        }\n        html += \"\\n</table>\";\n        charset = this.adapter.apply(\"charset\", {\n          charset: \"charset=utf-8\",\n          type: type,\n          options: options\n        }).charset;\n        uri = this.adapter.apply(\"getHTML\", {\n          data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(html) : html,\n          options: options\n        }).data;\n        return [2 /*return*/, uri];\n      });\n    });\n  };\n  /**\r\n   * Formats a row of HTML data.\r\n   *\r\n   * @since 4.7.0\r\n   * @ignore Exclude from docs\r\n   * @param  row         An object holding data for the row\r\n   * @param  options     Options\r\n   * @param  dataFields  Data fields\r\n   * @param  asIs        Do not try to convert to dates\r\n   * @return Formated HTML row\r\n   */\n  Export.prototype.getHTMLRow = function (row, options, dataFields, asIs, headerRow) {\n    var _this = this;\n    if (asIs === void 0) {\n      asIs = false;\n    }\n    if (headerRow === void 0) {\n      headerRow = false;\n    }\n    // Init output\n    var html = \"\\t<tr>\";\n    if (options.rowClass) {\n      html = \"\\t<tr class=\\\"\" + options.rowClass + \"\\\">\";\n    }\n    // Data fields\n    if (!dataFields) {\n      dataFields = row;\n    }\n    // Data fields order\n    var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\n      dataFieldsOrder: this.dataFieldsOrder,\n      format: \"html\"\n    }).dataFieldsOrder;\n    // th or dh?\n    var tag = headerRow ? \"th\" : \"td\";\n    // Process each row item\n    var first = true;\n    $object.eachOrdered(dataFields, function (key, name) {\n      // Get value\n      var value = _this.convertEmptyValue(key, row[key], options);\n      // Convert dates\n      var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\n      // Escape HTML entities\n      item = \"\" + item;\n      item = item.replace(/[\\u00A0-\\u9999<>\\&]/gim, function (i) {\n        return \"&#\" + i.charCodeAt(0) + \";\";\n      });\n      // Which tag to use\n      var useTag = tag;\n      if (options.pivot && first) {\n        useTag = \"th\";\n      }\n      // Add cell\n      if (options.cellClass) {\n        html += \"\\n\\t\\t<\" + useTag + \" class=\\\"\" + options.cellClass + \"\\\">\" + item + \"</\" + useTag + \">\";\n      } else {\n        html += \"\\n\\t\\t<\" + useTag + \">\" + item + \"</\" + useTag + \">\";\n      }\n      first = false;\n    }, function (a, b) {\n      var ai = dataFieldsOrder.indexOf(a);\n      var bi = dataFieldsOrder.indexOf(b);\n      if (ai > bi) {\n        return 1;\n      } else if (ai < bi) {\n        return -1;\n      }\n      return 0;\n    });\n    html += \"\\n\\t</tr>\";\n    return html;\n  };\n  /**\r\n   * Returns chart's data in JSON format.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type       Type of the export\r\n   * @param options    Options\r\n   * @param encodeURI  If true, will return result will be data URI\r\n   * @return Promise\r\n   * @async\r\n   */\n  Export.prototype.getJSON = function (type, options, encodeURI) {\n    if (encodeURI === void 0) {\n      encodeURI = true;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var data, dataFields, sourceData, _loop_1, len, i, json, charset, uri;\n      var _this = this;\n      return __generator(this, function (_a) {\n        if (!$type.hasValue(options)) {\n          options = this.getFormatOptions(\"json\");\n        }\n        dataFields = this.adapter.apply(\"formatDataFields\", {\n          dataFields: this.dataFields,\n          format: \"json\"\n        }).dataFields;\n        if (!this._dynamicDataFields) {\n          data = [];\n          sourceData = this.data;\n          _loop_1 = function (len, i) {\n            var value = sourceData[i];\n            if (typeof value == \"object\") {\n              var newValue_1 = {};\n              $object.each(value, function (field, item) {\n                if ($type.hasValue(dataFields[field])) {\n                  newValue_1[dataFields[field]] = _this.convertToSpecialFormat(field, item, options);\n                }\n              });\n              data.push(newValue_1);\n            }\n          };\n          for (len = sourceData.length, i = 0; i < len; i++) {\n            _loop_1(len, i);\n          }\n        } else {\n          data = this.data;\n        }\n        json = JSON.stringify(data, function (key, value) {\n          if (typeof value == \"object\") {\n            $object.each(value, function (field, item) {\n              value[field] = _this.convertToSpecialFormat(field, item, options);\n            });\n          }\n          return value;\n        }, options.indent);\n        charset = this.adapter.apply(\"charset\", {\n          charset: \"charset=utf-8\",\n          type: type,\n          options: options\n        }).charset;\n        uri = this.adapter.apply(\"getJSON\", {\n          data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(json) : json,\n          options: options\n        }).data;\n        return [2 /*return*/, uri];\n      });\n    });\n  };\n  /**\r\n   * Converts the value to proper date format.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param  field         Field name\r\n   * @param  value         Value\r\n   * @param  options       Options\r\n   * @param  keepOriginal  Will ignore formatting and will keep value as it is in data\r\n   * @return Formatted date value or unmodified value\r\n   */\n  Export.prototype.convertToSpecialFormat = function (field, value, options, keepOriginal) {\n    // Is this a timestamp or duration?\n    if (typeof value == \"number\") {\n      if (this.isDateField(field)) {\n        value = new Date(value);\n      } else if (this.isDurationField(field)) {\n        return this.durationFormatter.format(value, this.durationFormat);\n      } else if (this.isNumberField(field) && this.numberFormat) {\n        return this.numberFormatter.format(value, this.numberFormat);\n      }\n    }\n    if (value instanceof Date) {\n      if (options.useTimestamps) {\n        value = value.getTime();\n      } else if (options.useLocale) {\n        if (!keepOriginal) {\n          value = value.toLocaleString();\n        }\n      } else {\n        value = this.dateFormatter.format(value, this.dateFormat);\n      }\n    } else if ($type.isString(value) && this.isDateField(field) && this.dateFormat) {\n      value = this.dateFormatter.format(this.dateFormatter.parse(value), this.dateFormat);\n    }\n    return value;\n  };\n  /**\r\n   * Converts empty value based on `emptyAs` option.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Export.prototype.convertEmptyValue = function (field, value, options) {\n    return $type.hasValue(value) ? value : options.emptyAs;\n  };\n  /**\r\n   * Triggers download of the file.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param uri       Data URI with file content\r\n   * @param fileName  File name\r\n   * @return Promise\r\n   * @async\r\n   */\n  Export.prototype.download = function (uri, fileName, addBOM) {\n    if (addBOM === void 0) {\n      addBOM = false;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var parts, contentType, decoded, blob_1, chars, i, charCode, blob, link_1, parts, contentType, decoded, blob_2, url_2, chars, i, charCode, blob, url_3, link, parts, contentType, iframe, idoc;\n      return __generator(this, function (_a) {\n        if (this.msBlobDownloadSupport()) {\n          parts = uri.split(\";\");\n          contentType = parts.shift().replace(/data:/, \"\");\n          uri = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\n          // Check if we need to Base64-decode\n          if ([\"image/svg+xml\", \"application/json\", \"text/csv\"].indexOf(contentType) == -1) {\n            try {\n              decoded = atob(uri);\n              uri = decoded;\n            } catch (e) {\n              // Error occurred, meaning string was not Base64-encoded. Do nothing.\n              return [2 /*return*/, false];\n            }\n          } else {\n            blob_1 = new Blob([uri], {\n              type: contentType\n            });\n            window.navigator.msSaveBlob(blob_1, fileName);\n            return [2 /*return*/, true];\n          }\n          chars = new Array(uri.length);\n          for (i = 0; i < uri.length; ++i) {\n            charCode = uri.charCodeAt(i);\n            chars[i] = charCode;\n          }\n          blob = new Blob([new Uint8Array(chars)], {\n            type: contentType\n          });\n          window.navigator.msSaveBlob(blob, fileName);\n        } else if (this.blobDownloadSupport()) {\n          link_1 = document.createElement(\"a\");\n          link_1.download = fileName;\n          document.body.appendChild(link_1);\n          parts = uri.split(\";\");\n          contentType = parts.shift().replace(/data:/, \"\");\n          uri = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\n          if ([\"image/svg+xml\", \"application/json\", \"text/csv\", \"text/html\"].indexOf(contentType) == -1) {\n            try {\n              decoded = atob(uri);\n              uri = decoded;\n            } catch (e) {\n              // Error occurred, meaning string was not Base64-encoded. Do nothing.\n              return [2 /*return*/, false];\n            }\n          } else {\n            if (addBOM) {\n              uri = \"\\ufeff\" + uri;\n            }\n            blob_2 = new Blob([uri], {\n              type: contentType\n            });\n            url_2 = window.URL.createObjectURL(blob_2);\n            link_1.href = url_2;\n            link_1.download = fileName;\n            link_1.click();\n            setTimeout(function () {\n              document.body.removeChild(link_1);\n              window.URL.revokeObjectURL(url_2);\n            }, 100);\n            return [2 /*return*/, true];\n          }\n          chars = new Array(uri.length);\n          for (i = 0; i < uri.length; ++i) {\n            charCode = uri.charCodeAt(i);\n            chars[i] = charCode;\n          }\n          if (addBOM) {\n            chars = [0xEF, 0xBB, 0xBF].concat(chars);\n          }\n          blob = new Blob([new Uint8Array(chars)], {\n            type: contentType\n          });\n          url_3 = window.URL.createObjectURL(blob);\n          link_1.href = url_3;\n          link_1.download = fileName;\n          document.body.appendChild(link_1);\n          link_1.click();\n          document.body.removeChild(link_1);\n          setTimeout(function () {\n            window.URL.revokeObjectURL(url_3);\n          }, 100);\n        } else if (this.linkDownloadSupport()) {\n          link = document.createElement(\"a\");\n          link.download = fileName;\n          link.href = uri;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        } else if (this.legacyIE()) {\n          parts = uri.match(/^data:(.*);[ ]*([^,]*),(.*)$/);\n          if (parts.length === 4) {\n            // Base64-encoded or text-based stuff?\n            if (parts[2] == \"base64\") {\n              // Base64-encoded - probably an image\n              if (parts[1].match(/^image\\//)) {\n                // Yep, an image. Let's create a temporary image placeholder,\n                // so that user can use do Save As.\n                this.showModal(\"<img src=\\\"\" + uri + \"\\\" style=\\\"float: left; max-width: 50%; max-height: 80%; margin: 0 1em 0.5em 0; border: 1px solid #eee;\\\" />\" + \"<p>\" + this.language.translate(\"To save the image, right-click thumbnail on the left and choose \\\"Save picture as...\\\"\") + \"</p>\" + \"<p style=\\\"text-align: center;\\\"><small>\" + this.language.translate(\"(Press ESC to close this message)\") + \"</small></p>\", this.language.translate(\"Image Export Complete\"));\n              }\n            } else {\n              contentType = void 0;\n              if (fileName.match(/\\.svg$/)) {\n                contentType = \"image/svg+xml\";\n              } else {\n                contentType = \"text/plain\";\n                fileName += \".txt\";\n              }\n              iframe = document.createElement(\"iframe\");\n              iframe.width = \"1px\";\n              iframe.height = \"1px\";\n              iframe.style.display = \"none\";\n              document.body.appendChild(iframe);\n              idoc = iframe.contentDocument;\n              idoc.open(contentType, \"replace\");\n              // TODO test this with various encodings (e.g. UTF)\n              //idoc.charset = parts[2].replace(/charset=/, \"\");\n              idoc.write(decodeURIComponent(parts[3]));\n              idoc.close();\n              idoc.execCommand(\"SaveAs\", true, fileName);\n              // Destroy the iframe\n              document.body.removeChild(iframe);\n            }\n          }\n        } else {\n          /**\r\n           * Something else - perhaps a mobile.\r\n           * Let's just display it in the same page.\r\n           * (hey we don't like it either)\r\n           */\n          window.location.href = uri;\n        }\n        return [2 /*return*/, true];\n      });\n    });\n  };\n  /**\r\n   * Returns `true` if browser has any supported methods to trigger download\r\n   * of a binary file.\r\n   *\r\n   * @return Supports downloads?\r\n   */\n  Export.prototype.downloadSupport = function () {\n    //return !this.legacyIE();\n    return this.linkDownloadSupport() || this.msBlobDownloadSupport();\n  };\n  /**\r\n   * Checks if the browser supports \"download\" attribute on links.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Browser supports triggering downloads?\r\n   */\n  Export.prototype.linkDownloadSupport = function () {\n    // Do we have this cached?\n    var cache = registry.getCache(\"linkDownloadSupport\");\n    if (cache === false || cache === true) {\n      return cache;\n    }\n    var a = document.createElement(\"a\");\n    var res = typeof a.download !== \"undefined\";\n    registry.setCache(\"linkDownloadSupport\", res);\n    return res;\n  };\n  /**\r\n   * Checks if the browser supports download via `msBlob`.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Browser supports triggering downloads?\r\n   */\n  Export.prototype.blobDownloadSupport = function () {\n    return $type.hasValue(window.Blob);\n  };\n  /**\r\n   * Checks if the browser supports download via `msBlob`.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Browser supports triggering downloads?\r\n   */\n  Export.prototype.msBlobDownloadSupport = function () {\n    return $type.hasValue(window.navigator.msSaveOrOpenBlob);\n  };\n  /**\r\n   * Checks if this is a legacy version of IE.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return IE9 or less?\r\n   */\n  Export.prototype.legacyIE = function () {\n    // Create a temporary <div> with conditional tags in it an an <i> tag.\n    // Count <i>s. If there are some, we have IE9 or late on our hands.\n    var div = document.createElement(\"div\");\n    div.innerHTML = \"<!--[if lt IE 10]><i></i><![endif]-->\";\n    return div.getElementsByTagName(\"i\").length == 1;\n  };\n  /**\r\n   * Initiates print of the chart.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param data     Data URI for the image\r\n   * @param options  Options\r\n   * @param title    Optional title to use (uses window's title by default)\r\n   * @return Promise\r\n   * @async\r\n   */\n  Export.prototype.print = function (data, options, title) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (options.printMethod == \"css\") {\n          return [2 /*return*/, this.printViaCSS(data, options, title)];\n        } else {\n          return [2 /*return*/, this.printViaIframe(data, options, title)];\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n  Export.prototype.printViaCSS = function (data, options, title) {\n    return __awaiter(this, void 0, void 0, function () {\n      var scroll, rule, originalTitle, img, isIOS;\n      return __generator(this, function (_a) {\n        scroll = document.documentElement.scrollTop || document.body.scrollTop;\n        rule = new StyleRule($dom.getShadowRoot(this.container), \"body > *\", {\n          \"display\": \"none\",\n          \"position\": \"fixed\",\n          \"visibility\": \"hidden\",\n          \"opacity\": \"0\",\n          \"clipPath\": \"polygon(0px 0px,0px 0px,0px 0px,0px 0px);\"\n        });\n        if (title && document && document.title) {\n          originalTitle = document.title;\n          document.title = title;\n        }\n        img = new Image();\n        img.src = data;\n        img.style.maxWidth = \"100%\";\n        img.style.display = \"block\";\n        img.style.position = \"relative\";\n        img.style.visibility = \"visible\";\n        img.style.opacity = \"1\";\n        img.style.clipPath = \"none\";\n        document.body.appendChild(img);\n        // Print\n        this.setTimeout(function () {\n          window.print();\n        }, 50);\n        isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n        if (isIOS && options.delay < 1000) {\n          options.delay = 1000;\n        } else if (options.delay < 100) {\n          options.delay = 100;\n        }\n        // Delay function that resets back the document the way ot was before\n        this.setTimeout(function () {\n          // Remove image\n          document.body.removeChild(img);\n          // Reset back all elements\n          /*for (let len = items.length, i = 0; i < len; i++) {\r\n              let item = <HTMLElement>items[i];\r\n              if ($dom.isElement(item)) {\r\n                  item.style.display = states[i];\r\n              }\r\n          }*/\n          rule.dispose();\n          // Restore title\n          if (originalTitle) {\n            document.title = document.title;\n          }\n          // Scroll back the document the way it was before\n          document.documentElement.scrollTop = document.body.scrollTop = scroll;\n        }, options.delay || 500);\n        return [2 /*return*/, true];\n      });\n    });\n  };\n  Export.prototype.printViaIframe = function (data, options, title) {\n    return __awaiter(this, void 0, void 0, function () {\n      var iframe, img, isIOS;\n      return __generator(this, function (_a) {\n        iframe = document.createElement(\"iframe\");\n        iframe.style.visibility = \"hidden\";\n        document.body.appendChild(iframe);\n        // This is needed for FireFox\n        iframe.contentWindow.document.open();\n        iframe.contentWindow.document.close();\n        img = new Image();\n        img.src = data;\n        img.style.maxWidth = \"100%\";\n        img.style.height = \"auto\";\n        if (title) {\n          iframe.contentWindow.document.title = title;\n        }\n        iframe.contentWindow.document.body.appendChild(img);\n        iframe.load = function () {\n          iframe.contentWindow.document.body.appendChild(img);\n        };\n        // Print\n        this.setTimeout(function () {\n          try {\n            if (!iframe.contentWindow.document.execCommand(\"print\", false, null)) {\n              iframe.contentWindow.print();\n            }\n          } catch (e) {\n            iframe.contentWindow.print();\n          }\n        }, options.delay || 50);\n        isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n        if (isIOS && options.delay < 1000) {\n          options.delay = 1000;\n        } else if (options.delay < 100) {\n          options.delay = 100;\n        }\n        // Delay function that resets back the document the way ot was before\n        this.setTimeout(function () {\n          // Remove image\n          document.body.removeChild(iframe);\n        }, options.delay + 50 || 100);\n        return [2 /*return*/, true];\n      });\n    });\n  };\n  /**\r\n   * Finds a background color for the element. If element is transparent it goes\r\n   * up the DOM hierarchy to find a parent element that does.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param element Element\r\n   * @return Color code\r\n   */\n  Export.prototype.findBackgroundColor = function (element) {\n    // Check if element has styles set\n    var opacity = 1,\n      currentColor = getComputedStyle(element, \"background-color\");\n    // Check opacity\n    if (currentColor.match(/[^,]*,[^,]*,[^,]*,[ ]?0/) || currentColor == \"transparent\") {\n      opacity = 0;\n    }\n    if (opacity == 0) {\n      var parent_2 = element.parentElement; // || <Element>element.parentNode;\n      // Completely transparent. Look for a parent\n      if (parent_2) {\n        return this.findBackgroundColor(parent_2);\n      } else {\n        return color(\"#fff\");\n      }\n    } else {\n      return color(currentColor, opacity);\n    }\n  };\n  Object.defineProperty(Export.prototype, \"container\", {\n    /**\r\n     * @return Reference\r\n     */\n    get: function () {\n      return this.adapter.apply(\"container\", {\n        container: this._container\n      }).container;\n    },\n    /**\r\n     * A reference to a container to be used to place [[ExportMenu]] in.\r\n     *\r\n     * @param value Reference\r\n     */\n    set: function (value) {\n      this._container = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"sprite\", {\n    /**\r\n     * @return Sprite\r\n     */\n    get: function () {\n      return this.adapter.apply(\"sprite\", {\n        sprite: this._sprite\n      }).sprite;\n    },\n    /**\r\n     * A reference to [[Sprite]] to export. Can be any Sprite, including some\r\n     * internal elements.\r\n     *\r\n     * @param value Sprite\r\n     */\n    set: function (value) {\n      this._sprite = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"extraSprites\", {\n    /**\r\n     * @return Sprite\r\n     */\n    get: function () {\n      return this.adapter.apply(\"extraSprites\", {\n        extraSprites: this._extraSprites\n      }).extraSprites;\n    },\n    /**\r\n     * An array of extra [[Sprite]] elements to include in export.\r\n     *\r\n     * It can be used to export any external elements, or even other charts.\r\n     *\r\n     * E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * chart.exporting.extraSprites.push(chart2);\r\n     * ```\r\n     * ```JavaScript\r\n     * chart.exporting.extraSprites.push(chart2);\r\n     * ```\r\n     *\r\n     * IMPORTANT: This setting is ignored when exporting to SVG format.\r\n     *\r\n     * @since 4.2.0\r\n     * @param value Sprite\r\n     */\n    set: function (value) {\n      this._extraSprites = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"validateSprites\", {\n    /**\r\n     * @return Sprite\r\n     */\n    get: function () {\n      return this.adapter.apply(\"validateSprites\", {\n        validateSprites: this._validateSprites\n      }).validateSprites;\n    },\n    /**\r\n     * An array of [[Sprite]] elements that need to be valid before export\r\n     * commences.\r\n     *\r\n     * If any of those elements is not completely ready when export is triggered,\r\n     * the export will wait until they are (their `validated` event triggers)\r\n     * before going through with the export opertaion.\r\n     *\r\n     * This is useful if you need to modify chart appearance for the export.\r\n     *\r\n     * E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * // Add watermark\r\n     * let watermark = chart.createChild(am4core.Label);\r\n     * watermark.text = \"Copyright (C) 2019\";\r\n     * watermark.disabled = true;\r\n     *\r\n     * // Add watermark to validated sprites\r\n     * chart.exporting.validateSprites.push(watermark);\r\n     *\r\n     * // Enable watermark on export\r\n     * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n     *   watermark.disabled = false;\r\n     * });\r\n     *\r\n     * // Disable watermark when export finishes\r\n     * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n     *   watermark.disabled = true;\r\n     * });\r\n     * ```\r\n     * ```JavaScript\r\n     * // Add watermark\r\n     * var watermark = chart.createChild(am4core.Label);\r\n     * watermark.text = \"Copyright (C) 2019\";\r\n     * watermark.disabled = true;\r\n     *\r\n     * // Add watermark to validated sprites\r\n     * chart.exporting.validateSprites.push(watermark);\r\n     *\r\n     * // Enable watermark on export\r\n     * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n     *   watermark.disabled = false;\r\n     * });\r\n     *\r\n     * // Disable watermark when export finishes\r\n     * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n     *   watermark.disabled = true;\r\n     * });\r\n     * ```\r\n     *\r\n     * @since 4.6.8\r\n     * @param value Sprite\r\n     */\n    set: function (value) {\n      this._validateSprites = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"data\", {\n    /**\r\n     * @return Data\r\n     */\n    get: function () {\n      return this.adapter.apply(\"data\", {\n        data: this._data\n      }).data;\n    },\n    /**\r\n     * Data to export.\r\n     *\r\n     * @param value Data\r\n     */\n    set: function (value) {\n      this._data = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"dataFields\", {\n    /**\r\n     * @return Field names `{ field: fieldName }`\r\n     */\n    get: function () {\n      if (!this._dataFields) {\n        this.generateDataFields();\n      }\n      return this.adapter.apply(\"dataFields\", {\n        dataFields: this._dataFields\n      }).dataFields;\n    },\n    /**\r\n     * Data fields in `{ field: fieldName }` format. Those are used for\r\n     * exporting in data formats to name the columns.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/exporting/#Changing_order_and_names_of_columns} for examples and details\r\n     * @param value Field names\r\n     */\n    set: function (value) {\n      this._dataFields = value;\n      this._dynamicDataFields = false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Called after target chart's data updates.\r\n   *\r\n   * @ignore\r\n   */\n  Export.prototype.handleDataUpdated = function () {\n    if (this._dynamicDataFields) {\n      this._dataFields = undefined;\n    }\n    var hasData = this.data.length > 0;\n    if (this._prevHasData != hasData) {\n      this._prevHasData = hasData;\n      if (this.menu) {\n        this.menu.invalidate();\n      }\n    }\n  };\n  Object.defineProperty(Export.prototype, \"dateFormatter\", {\n    /**\r\n     * @return A DateFormatter instance\r\n     */\n    get: function () {\n      if (!this._dateFormatter) {\n        this._dateFormatter = new DateFormatter();\n        this._dateFormatter.language = this.language;\n      }\n      return this.adapter.apply(\"dateFormatter\", {\n        dateFormatter: this._dateFormatter\n      }).dateFormatter;\n    },\n    /**\r\n     * A [[DateFormatter]] to use when formatting dates when exporting data.\r\n     *\r\n     * @param value DateFormatter instance\r\n     */\n    set: function (value) {\n      this._dateFormatter = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"dateFormat\", {\n    /**\r\n     * @return Date format\r\n     */\n    get: function () {\n      return this.adapter.apply(\"dateFormat\", {\n        dateFormat: this._dateFormat\n      }).dateFormat;\n    },\n    /**\r\n     * A date format to use for exporting dates. Will use [[DateFormatter]]\r\n     * format if not set.\r\n     *\r\n     * @param value Date format\r\n     */\n    set: function (value) {\n      this._dateFormat = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"dateFields\", {\n    /**\r\n     * @return Date field list\r\n     */\n    get: function () {\n      if (!this._dateFields) {\n        this._dateFields = new List();\n      }\n      return this.adapter.apply(\"dateFields\", {\n        dateFields: this._dateFields\n      }).dateFields;\n    },\n    /**\r\n     * A list of fields that hold date values.\r\n     *\r\n     * @param value Date field list\r\n     */\n    set: function (value) {\n      this._dateFields = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"numberFormatter\", {\n    /**\r\n     * @return A NumberFormatter instance\r\n     */\n    get: function () {\n      if (!this._numberFormatter) {\n        this._numberFormatter = new NumberFormatter();\n        this._numberFormatter.language = this.language;\n      }\n      return this.adapter.apply(\"numberFormatter\", {\n        numberFormatter: this._numberFormatter\n      }).numberFormatter;\n    },\n    /**\r\n     * A [[NumberFormatter]] to use when formatting dates when exporting data.\r\n     *\r\n     * @since 4.5.15\r\n     * @param value NumberFormatter instance\r\n     */\n    set: function (value) {\n      this._numberFormatter = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"numberFormat\", {\n    /**\r\n     * @return Number format\r\n     */\n    get: function () {\n      return this.adapter.apply(\"numberFormat\", {\n        numberFormat: this._numberFormat\n      }).numberFormat;\n    },\n    /**\r\n     * A number format to use for exporting dates. Will use [[NumberFormatter]]\r\n     * format if not set.\r\n     *\r\n     * @since 4.5.15\r\n     * @param value Number format\r\n     */\n    set: function (value) {\n      this._numberFormat = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"numberFields\", {\n    /**\r\n     * @return Number field list\r\n     */\n    get: function () {\n      if (!this._numberFields) {\n        this._numberFields = new List();\n      }\n      return this.adapter.apply(\"numberFields\", {\n        numberFields: this._numberFields\n      }).numberFields;\n    },\n    /**\r\n     * A list of fields that hold number values.\r\n     *\r\n     * @since 4.5.15\r\n     * @param value Number field list\r\n     */\n    set: function (value) {\n      this._numberFields = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"durationFormatter\", {\n    /**\r\n     * @return A DurationFormatter instance\r\n     */\n    get: function () {\n      if (!this._durationFormatter) {\n        this._durationFormatter = new DurationFormatter();\n        this._durationFormatter.language = this.language;\n      }\n      return this.adapter.apply(\"durationFormatter\", {\n        durationFormatter: this._durationFormatter\n      }).durationFormatter;\n    },\n    /**\r\n     * A [[DurationFormatter]] to use when formatting duration values when\r\n     * exporting data.\r\n     *\r\n     * @param value  DurationFormatter instance\r\n     */\n    set: function (value) {\n      this._durationFormatter = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"durationFormat\", {\n    /**\r\n     * @return Duration format\r\n     */\n    get: function () {\n      return this.adapter.apply(\"durationFormat\", {\n        durationFormat: this._durationFormat\n      }).durationFormat;\n    },\n    /**\r\n     * A format to use when formatting values from `durationFields`.\r\n     * Will use [[DurationFormatter]] format if not set.\r\n     *\r\n     * @param value Duration format\r\n     */\n    set: function (value) {\n      this._durationFormat = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"durationFields\", {\n    /**\r\n     * @return Duration field list\r\n     */\n    get: function () {\n      if (!this._durationFields) {\n        this._durationFields = new List();\n      }\n      return this.adapter.apply(\"durationFields\", {\n        durationFields: this._durationFields\n      }).durationFields;\n    },\n    /**\r\n     * A list of fields that hold duration values.\r\n     *\r\n     * @param value Duration field list\r\n     */\n    set: function (value) {\n      this._durationFields = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Generates data fields out of the first row of data.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Export.prototype.generateDataFields = function () {\n    var _this = this;\n    this._dataFields = {};\n    if (this.data.length) {\n      $array.each(this.data, function (row) {\n        $object.each(row, function (key, value) {\n          if (!$type.hasValue(_this._dataFields[key])) {\n            _this._dataFields[key] = _this.adapter.apply(\"dataFieldName\", {\n              name: key,\n              field: key\n            }).name;\n          }\n        });\n      });\n    }\n  };\n  /**\r\n   * Cheks against `dateFields` property to determine if this field holds\r\n   * dates.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param field   Field name\r\n   * @param options Options\r\n   * @return `true` if it's a date field\r\n   */\n  Export.prototype.isDateField = function (field) {\n    return this.adapter.apply(\"isDateField\", {\n      isDateField: this.dateFields.contains(field),\n      field: field\n    }).isDateField;\n  };\n  /**\r\n   * Cheks against `numberFields` property to determine if this field holds\r\n   * numbers.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param field   Field name\r\n   * @param options Options\r\n   * @return `true` if it's a number field\r\n   */\n  Export.prototype.isNumberField = function (field) {\n    return this.adapter.apply(\"isNumberField\", {\n      isNumberField: this.numberFields.contains(field),\n      field: field\n    }).isNumberField;\n  };\n  /**\r\n   * Cheks against `durationFields` property to determine if this field holds\r\n   * durations.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param field   Field name\r\n   * @param options Options\r\n   * @return `true` if it's a date field\r\n   */\n  Export.prototype.isDurationField = function (field) {\n    return this.adapter.apply(\"isDurationField\", {\n      isDurationField: this.durationFields.contains(field),\n      field: field\n    }).isDurationField;\n  };\n  /**\r\n   * Returns proper content type for the export type.\r\n   *\r\n   * @param type  Export format/type\r\n   * @return Proper content type, i.e. \"image/jpeg\"\r\n   */\n  Export.prototype.getContentType = function (type) {\n    var contentType = \"\";\n    switch (type) {\n      case \"png\":\n      case \"gif\":\n        contentType = \"image/\" + type;\n        break;\n      case \"jpg\":\n        contentType = \"image/jpeg\";\n        break;\n      case \"svg\":\n        contentType = \"image/svg+xml\";\n        break;\n      case \"csv\":\n        contentType = \"text/csv\";\n        break;\n      case \"json\":\n        contentType = \"application/json\";\n        break;\n      case \"html\":\n        contentType = \"text/html\";\n        break;\n      case \"pdf\":\n      case \"pdfdata\":\n        contentType = \"application/pdf\";\n        break;\n      case \"xlsx\":\n        contentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n        break;\n    }\n    return this.adapter.apply(\"contentType\", {\n      contentType: contentType,\n      type: type\n    }).contentType;\n  };\n  Object.defineProperty(Export.prototype, \"filePrefix\", {\n    /**\r\n     * @return File prefix\r\n     */\n    get: function () {\n      return this.adapter.apply(\"filePrefix\", {\n        filePrefix: this._filePrefix\n      }).filePrefix;\n    },\n    /**\r\n     * A file prefix to be used for all exported formats.\r\n     *\r\n     * Export will apply format-related extension to it. E.g. if this is set to\r\n     * \"myExport\", the file name of the PNG exported image will be \"myExport.png\".\r\n     *\r\n     * @param value File prefix\r\n     */\n    set: function (value) {\n      this._filePrefix = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"backgroundColor\", {\n    /**\r\n     * @return Background color\r\n     */\n    get: function () {\n      return this.adapter.apply(\"backgroundColor\", {\n        backgroundColor: this._backgroundColor\n      }).backgroundColor;\n    },\n    /**\r\n     * A background color to be used for exported images. If set, this will\r\n     * override the automatically acquired background color.\r\n     *\r\n     * @param value Color\r\n     */\n    set: function (value) {\n      this._backgroundColor = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"title\", {\n    /**\r\n     * @return Title\r\n     */\n    get: function () {\n      return this.adapter.apply(\"title\", {\n        title: this._title\n      }).title;\n    },\n    /**\r\n     * A title to be used when printing.\r\n     *\r\n     * @param value Title\r\n     */\n    set: function (value) {\n      this._title = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Displays a preloader/exporting indicator.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Add ability to change text\r\n   */\n  Export.prototype.showPreloader = function () {\n    var preloader = this.preloader;\n    if (preloader) {\n      preloader.progress = 0.5;\n      preloader.label.text = \"...\";\n    }\n  };\n  /**\r\n   * Hides preloader/exporting indicator\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Export.prototype.hidePreloader = function () {\n    var preloader = this.preloader;\n    if (preloader) {\n      preloader.progress = 1;\n    }\n  };\n  Object.defineProperty(Export.prototype, \"preloader\", {\n    /**\r\n     * Returns a an instance of [[Preloader]] associated with the Sprite being\r\n     * exported.\r\n     *\r\n     * @return Preloader\r\n     */\n    get: function () {\n      return this._sprite && this._sprite.parent && this._sprite.parent.preloader ? this._sprite.parent.preloader : undefined;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Displays a modal saying export is taking longer than expected.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Export.prototype.showTimeout = function () {\n    this.showModal(this.adapter.apply(\"timeoutMessage\", {\n      message: this.language.translate(\"Export operation took longer than expected. Something might have gone wrong.\")\n    }).message);\n  };\n  /**\r\n   * Hides preloader/exporting indicator.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Export.prototype.hideTimeout = function () {\n    if (this._timeoutTimeout) {\n      this.removeDispose(this._timeoutTimeout);\n      this._timeoutTimeout = null;\n    }\n    this.hideModal();\n  };\n  Object.defineProperty(Export.prototype, \"language\", {\n    /**\r\n     * @return A [[Language]] instance to be used\r\n     */\n    get: function () {\n      if (!this._language) {\n        this._language = new Language();\n      }\n      return this._language;\n    },\n    /**\r\n     * A [[Language]] instance to be used for translations.\r\n     *\r\n     * @param value An instance of [[Language]]\r\n     */\n    set: function (value) {\n      this._language = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"modal\", {\n    /**\r\n     * Returns (and creates) [[Modal]].\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Modal instance\r\n     */\n    get: function () {\n      if (!this._modal) {\n        this._modal = new Modal();\n        // Prefix with Sprite's class name\n        this._modal.adapter.add(\"classPrefix\", function (value) {\n          value = options.classNamePrefix + value;\n          return value;\n        });\n      }\n      return this._modal;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Shows [[Modal]] with specific text.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param text Modal contents\r\n   */\n  Export.prototype.showModal = function (text, title) {\n    // Hide previous modal and preloader\n    this.hideModal();\n    this.hidePreloader();\n    // Create modal\n    var modal = this.modal;\n    modal.container = this.sprite.svgContainer.SVGContainer;\n    modal.content = text;\n    modal.readerTitle = title;\n    modal.open();\n  };\n  /**\r\n   * Hides modal window if one's currently open.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Export.prototype.hideModal = function () {\n    if (this._modal) {\n      this.modal.close();\n    }\n  };\n  /**\r\n   * Loads canvg dynamic module.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Instance of canvg\r\n   * @async\r\n   */\n  Export.prototype._canvg = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var canvg;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, import(/* webpackChunkName: \"canvg\" */\"../../canvg/index.js\")];\n          case 1:\n            canvg = _a.sent();\n            if (canvg.default != null) {\n              return [2 /*return*/, canvg.default];\n            } else {\n              return [2 /*return*/, canvg];\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  Object.defineProperty(Export.prototype, \"canvg\", {\n    /**\r\n     * Returns canvg instance.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of canvg\r\n     */\n    get: function () {\n      return this._canvg();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"pdfmake\", {\n    /**\r\n     * Returns pdfmake instance.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of pdfmake\r\n     */\n    get: function () {\n      if (pdfmakePromise == null) {\n        pdfmakePromise = _pdfmake();\n      }\n      return pdfmakePromise;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Loads xlsx dynamic module.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Instance of pdfmake\r\n   * @async\r\n   */\n  Export.prototype._xlsx = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, import(/* webpackChunkName: \"xlsx\" */\"../../bundled/xlsx\")];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  Object.defineProperty(Export.prototype, \"xlsx\", {\n    /**\r\n     * Returns xlsx instance.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of pdfmake\r\n     */\n    get: function () {\n      return this._xlsx();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Sets options for a format.\r\n   */\n  Export.prototype.setFormatOptions = function (type, options) {\n    this._formatOptions.setKey(type, options);\n  };\n  /**\r\n   * Returns current options for a format.\r\n   */\n  Export.prototype.getFormatOptions = function (type) {\n    return this._formatOptions.getKey(type);\n  };\n  Object.defineProperty(Export.prototype, \"formatOptions\", {\n    /**\r\n     * A [[Dictionary]] object containing format-specific options.\r\n     *\r\n     * May be used to change specific option for the format:\r\n     *\r\n     * ```TypeScript\r\n     * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n     * ```\r\n     * ```JavaScript\r\n     * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"exporting\": {\r\n     *     // ...\r\n     *     \"formatOptions\": {\r\n     *       \"csv\": {\r\n     *         \"disabled\": true\r\n     *       }\r\n     *     }\r\n     *   }\r\n     * }\r\n     * ```\r\n     *\r\n     * @since 4.9.12\r\n     * @return  Options\r\n     */\n    get: function () {\n      return this._formatOptions;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Disables interactivity on parent chart.\r\n   */\n  Export.prototype._disablePointers = function () {\n    if (!$type.hasValue(this._spriteInteractionsEnabled)) {\n      this._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\n    }\n    this.sprite.interactionsEnabled = false;\n  };\n  /**\r\n   * Releases temporarily disabled pointers on parent chart.\r\n   */\n  Export.prototype._releasePointers = function () {\n    if ($type.hasValue(this._spriteInteractionsEnabled) && !this._exportRunning) {\n      this.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\n    }\n  };\n  /**\r\n   * Hides all elements that should not be included in the exported image.\r\n   */\n  Export.prototype.hideNonExportableSprites = function () {\n    var _this = this;\n    if (this._objectsAlreadyHidden) {\n      return;\n    }\n    var svgContainer = this.sprite.svgContainer;\n    if (svgContainer) {\n      $array.each(svgContainer.nonExportableSprites, function (item) {\n        if (!item.isHidden && !item.isHiding && item.visible) {\n          _this._hiddenObjects.push(item);\n        }\n        item.hide(0);\n      });\n    }\n    this._objectsAlreadyHidden = true;\n  };\n  /**\r\n   * Respores elements that were hidden before export.\r\n   */\n  Export.prototype.restoreNonExportableSprites = function () {\n    if (!this._objectsAlreadyHidden) {\n      return;\n    }\n    $array.each(this._hiddenObjects, function (item) {\n      item.show(0);\n    });\n    this._hiddenObjects = [];\n    this._objectsAlreadyHidden = false;\n  };\n  /**\r\n   * Checks if there are elements that absolutely need to be validated before\r\n   * export.\r\n   *\r\n   * If there are invalid elements, it will await for them to be validated.\r\n   *\r\n   * @return Promise\r\n   */\n  Export.prototype.awaitValidSprites = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var promises;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            promises = [];\n            if (this.validateSprites.length) {\n              $array.each(this.validateSprites, function (sprite, index) {\n                if (sprite.invalid) {\n                  promises.push(new Promise(function (resolve, reject) {\n                    sprite.events.once(\"validated\", function (ev) {\n                      resolve();\n                    });\n                  }));\n                }\n              });\n            }\n            if (!promises.length) return [3 /*break*/, 2];\n            return [4 /*yield*/, Promise.all(promises)];\n          case 1:\n            _a.sent();\n            _a.label = 2;\n          case 2:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Processes JSON-based config before it is applied to the object.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param config  Config\r\n   */\n  Export.prototype.processConfig = function (config) {\n    registry.registeredClasses[\"ExportMenu\"] = ExportMenu;\n    if (config) {\n      // Set up menu\n      if ($type.hasValue(config.menu) && !$type.hasValue(config.menu.type)) {\n        config.menu.type = \"ExportMenu\";\n      }\n      if ($type.hasValue(config.dataFields) && $type.isObject(config.dataFields)) {\n        this.dataFields = config.dataFields;\n        delete config.dataFields;\n      }\n    }\n    _super.prototype.processConfig.call(this, config);\n  };\n  /**\r\n   * XLINK namespace definition.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Export.XLINK = \"http://www.w3.org/1999/xlink\";\n  return Export;\n}(Validatable);\nexport { Export };","map":{"version":3,"names":["ExportMenu","Adapter","Sprite","Modal","List","Dictionary","DateFormatter","DurationFormatter","NumberFormatter","Language","Validatable","color","registry","options","StyleRule","getComputedStyle","$browser","$object","$net","$dom","$type","$log","$utils","$array","$math","$strings","pdfmakePromise","_pdfmake","Promise","all","a","_a","sent","pdfmake","default","vfs_fonts","global","window","pdfMake","vfs","fontFamilySrcRegexp","supportsBlobUri","navigator","msSaveOrOpenBlob","blobToDataUri","blob","resolve","reject","f","FileReader","onload","e","result","onerror","readAsDataURL","getCssRules","s","sheet","cssRules","success","error","addEventListener","setTimeout","Error","loadStylesheet","doc","url","load","response","console","e_2","createElement","textContent","nonce","setAttribute","head","appendChild","rules","eachStylesheet","removeChild","topUrl","promises","length","i","rule","type","CSSRule","IMPORT_RULE","href","joinUrl","push","eachStylesheets","iframe","document","src","doc_1","contentDocument","map","styleSheets","location","Export","_super","__extends","container","_this","call","adapter","_formatOptions","_extraSprites","_validateSprites","dataFieldsOrder","_dynamicDataFields","_removedObjects","_hiddenObjects","_objectsAlreadyHidden","_filePrefix","useWebFonts","useRetina","useSimplifiedExport","timeoutDelay","_exportRunning","_prevHasData","_container","className","setKey","quality","fontSize","imageFormat","align","addURL","addColumnNames","indent","useLocale","emptyAs","addBOM","delay","printMethod","add","arg","formatOptions","getKey","merge","applyTheme","dispatchImmediately","Object","defineProperty","prototype","get","_menu","set","menu","removeDispose","language","_language","branch","unsupported","typeSupported","events","on","ev","export","close","_disablePointers","_releasePointers","obj","classPrefix","classNamePrefix","_disposers","supported","getFormatOptions","hasValue","disabled","_hasData","print","indexOf","apply","data","_getFunction","getImage","getSVG","getPDF","getExcel","getCSV","getJSON","getHTML","getPrint","handleCustom","isEnabled","event_1","showPreloader","hideTimeout","_timeoutTimeout","event_4","showTimeout","hideNonExportableSprites","func","restoreNonExportableSprites","event_2","hidePreloader","title","download","filePrefix","event_3","callback","callbackTarget","getFontFamilies","DOMURL","getDOMURL","blobs","FONT_FACE_RULE","cssText_1","cssText","exec","urls","split","__awaiter","after","fullUrl","webFontFilter","match","undefined","responseType","url_1","createObjectURL","e_3","then","filter","x","replace","join","includeExtras","prehidden","awaitValidSprites","simplifiedImageExport","canvas","getCanvas","addExtras","newCanvas","disposeCanvas","uri","toDataURL","getContentType","e_4","message","stack","warn","getImageAdvanced","advanced","extraSprites","middleLeft_1","middleTop_1","middleWidth_1","width","middleHeight_1","height","extraRight_1","extraBottom_1","extraSprite","extra","sprite","position","marginTop","marginRight","marginBottom","marginLeft","exporting","getCanvasAdvanced","extraCanvas","extraWidth","extraHeight","crop","max","left","top","extras","getDisposableCanvas","ctx_1","getContext","background","backgroundColor","findBackgroundColor","dom","fillStyle","toString","fillRect","left_1","top_1","right_1","bottom_1","each","drawImage","pixelWidth","pixelHeight","font","findFont","findFontSize","scale","pixelRatio","getPixelRatio","getAdjustedScale","style","ctx","fonts","imagesToDataURI","prepForeignObjects","normalizeSVG","serializeElement","paper","defs","svg","Blob","loadNewImage","img","revokeObjectURL","restoreRemovedObjects","canvg","config","useCORS","ignoreDimensions","scaleWidth","scaleHeight","fromString","render","body","contains","adjWidth","adjHeight","widthScale","heightScale","maxWidth","maxHeight","min","minWidth","minHeight","el","images","querySelectorAll","count","image","getAttributeNS","XLINK","svgToDataURI","imageToDataURI","objects","temporarilyRemoveObject","keepTainted","charset","btoa","setAttributeNS","placeholder","parent","parentElement","parentNode","node","insertBefore","pop","parent_1","element","cache","getCache","setCache","crossOrigin","Image","currentHref","removeAttribute","onabort","self","URL","webkitURL","encodeURI","encodeURIComponent","dimParams","Math","round","styleParams","fos","ms","PLACEHOLDER","rgba","isInternetExplorer","reg","RegExp","escapeForRgex","getBaseURI","XMLSerializer","serializeToString","addFont","paths","normal","path","bytes","bold","italics","bolditalics","name","_d","defaultMargins","pageSize","pageOrientation","pageMargins","defaultStyle","content","extraMargin","text","margin","translate","alignment","fit","getPageSizeFit","addData","_b","getPDFData","_c","table","extraFonts","createPdf","getDataUrl","dataFields","format","pivot","dataFieldsOrder_1","eachOrdered","key","val","dataRow","len","dataValue","convertToSpecialFormat","getPDFDataRow","b","ai","bi","headerRows","row","asIs","items","value","convertEmptyValue","item","margins","newMargins","sizes","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","fitSize","xlsx","XLSX","wbOptions","bookType","bookSST","sheetName","normalizeExcelSheetName","wb","SheetNames","Sheets","dataFieldsOrder_2","getExcelRow","utils","aoa_to_sheet","workbook","write","truncateWithEllipsis","csv","br","dataFieldsOrder_3","getCSVRow","reverse","separator","forceQuotes","search","html","tableClass","dataFieldsOrder_4","getHTMLRow","headerRow","rowClass","tag","first","charCodeAt","useTag","cellClass","sourceData","newValue_1","field","json","JSON","stringify","keepOriginal","isDateField","Date","isDurationField","durationFormatter","durationFormat","isNumberField","numberFormat","numberFormatter","useTimestamps","getTime","toLocaleString","dateFormatter","dateFormat","isString","parse","fileName","msBlobDownloadSupport","parts","contentType","shift","decodeURIComponent","decoded","atob","blob_1","msSaveBlob","chars","Array","charCode","Uint8Array","blobDownloadSupport","link_1","blob_2","url_2","click","concat","url_3","linkDownloadSupport","link","legacyIE","showModal","display","idoc","open","execCommand","downloadSupport","res","div","innerHTML","getElementsByTagName","printViaCSS","printViaIframe","scroll","documentElement","scrollTop","getShadowRoot","originalTitle","visibility","opacity","clipPath","isIOS","test","userAgent","MSStream","dispose","contentWindow","currentColor","parent_2","_sprite","validateSprites","_data","_dataFields","generateDataFields","handleDataUpdated","hasData","invalidate","_dateFormatter","_dateFormat","_dateFields","dateFields","_numberFormatter","_numberFormat","_numberFields","numberFields","_durationFormatter","_durationFormat","_durationFields","durationFields","_backgroundColor","_title","preloader","progress","label","hideModal","_modal","modal","svgContainer","SVGContainer","readerTitle","_canvg","_xlsx","setFormatOptions","_spriteInteractionsEnabled","interactionsEnabled","nonExportableSprites","isHidden","isHiding","visible","hide","show","index","invalid","once","processConfig","registeredClasses","isObject"],"sources":["../../../../../src/.internal/core/export/Export.ts"],"sourcesContent":["/**\r\n * Export module.\r\n *\r\n * Parts of Export functionality rely on the following third party libraries:\r\n *\r\n * [canvg.js](https://github.com/canvg/canvg)\r\n * Copyright (c) Gabe Lerner\r\n * Licensed under [MIT](https://github.com/canvg/canvg/blob/master/LICENSE)\r\n *\r\n * [pdfmake](http://pdfmake.org/)\r\n * Copyright (c) 2014 bpampuch\r\n * Licensed under [MIT](https://github.com/bpampuch/pdfmake/blob/master/LICENSE)\r\n *\r\n * [SheetJS Community Edition](https://github.com/sheetjs/js-xlsx)\r\n * Licensed under [Apache License 2.0](https://github.com/SheetJS/js-xlsx/blob/master/LICENSE)\r\n *\r\n * [JSZip](http://stuartk.com/jszip)\r\n * Copyright (c) Stuart Knightley\r\n * Dual licenced under the [MIT license or GPLv3](https://raw.githubusercontent.com/Stuk/jszip/master/LICENSE.markdown).\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ExportMenu } from \"./ExportMenu\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { AMEvent } from \"../utils/EventDispatcher\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Preloader } from \"../elements/Preloader\";\r\nimport { Modal } from \"../elements/Modal\";\r\nimport { List } from \"../utils/List\";\r\nimport { Dictionary } from \"../utils/Dictionary\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { DateFormatter } from \"../formatters/DateFormatter\";\r\nimport { DurationFormatter } from \"../formatters/DurationFormatter\";\r\nimport { NumberFormatter } from \"../formatters/NumberFormatter\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { Validatable } from \"../utils/Validatable\";\r\nimport { Color, color } from \"../utils/Color\";\r\nimport { registry } from \"../Registry\";\r\nimport { options } from \"../Options\";\r\nimport { StyleRule, getComputedStyle } from \"../utils/DOM\";\r\nimport { Align } from \"../defs/Align\";\r\nimport * as $browser from \"../utils/Browser\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $net from \"../utils/Net\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $log from \"../utils/Log\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $strings from \"../utils/Strings\";\r\n\r\n\r\nexport interface IFile {\r\n\tpath: string;\r\n\tbytes: string;\r\n}\r\n\r\nexport interface IFont {\r\n\tname: string;\r\n\tnormal: IFile;\r\n\tbold?: IFile;\r\n\titalics?: IFile;\r\n\tbolditalics?: IFile;\r\n}\r\n\r\n\r\n// This is used to cache the pdfmake loading\r\nlet pdfmakePromise: Promise<any>;\r\n\r\n/**\r\n * Loads pdfmake dynamic module\r\n *\r\n * This is an asynchronous function. Check the description of `getImage()`\r\n * for description and example usage.\r\n *\r\n * @ignore Exclude from docs\r\n * @return Instance of pdfmake\r\n * @async\r\n */\r\nasync function _pdfmake(): Promise<any> {\r\n\tlet a = await Promise.all([\r\n\t\timport(/* webpackChunkName: \"pdfmake\" */ \"pdfmake/build/pdfmake.js\"),\r\n\t\timport(/* webpackChunkName: \"pdfmake\" */ \"../../pdfmake/vfs_fonts\")\r\n\t]);\r\n\r\n\tlet pdfmake = a[0].default || a[0];\r\n\tlet vfs_fonts = a[1].default || a[1];\r\n\tconst global = <any>window;\r\n\tglobal.pdfMake = global.pdfMake || {};\r\n\tglobal.pdfMake.vfs = vfs_fonts;\r\n\tpdfmake.vfs = vfs_fonts;\r\n\treturn pdfmake;\r\n}\r\n\r\n\r\n// TODO better parsing\r\nconst fontFamilySrcRegexp = /src: ([^;]+);/;\r\n\r\n// TODO better checks\r\nfunction supportsBlobUri(): boolean {\r\n\treturn window.navigator.msSaveOrOpenBlob != null;\r\n}\r\n\r\n// TODO move into utils or something ?\r\nfunction blobToDataUri(blob: Blob): Promise<string> {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// TODO handle abort ?\r\n\t\tconst f = new FileReader();\r\n\t\tf.onload = (e) => { resolve(<string>f.result); };\r\n\t\tf.onerror = (e) => { reject(e); };\r\n\t\tf.readAsDataURL(blob);\r\n\t});\r\n}\r\n\r\nasync function getCssRules(s: HTMLStyleElement): Promise<CSSRuleList> {\r\n\tconst sheet = <CSSStyleSheet>s.sheet;\r\n\r\n\ttry {\r\n\t\treturn sheet.cssRules;\r\n\r\n\t} catch (e) {\r\n\t\t// Needed because of https://bugzilla.mozilla.org/show_bug.cgi?id=625013\r\n\t\treturn await new Promise<CSSRuleList>((success, error) => {\r\n\t\t\ts.addEventListener(\"load\", () => {\r\n\t\t\t\tsuccess(sheet.cssRules);\r\n\t\t\t}, true);\r\n\r\n\t\t\ts.addEventListener(\"error\", (e) => {\r\n\t\t\t\terror(e);\r\n\t\t\t}, true);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\terror(new Error(\"Timeout while waiting for <style> to load\"));\r\n\t\t\t}, 10000);\r\n\t\t});\r\n\t}\r\n}\r\n\r\n// This loads a stylesheet by URL and then calls the function with it\r\n// TODO this should be moved into utils or something\r\nasync function loadStylesheet(doc: Document, url: string, f: (topUrl: string, rule: CSSRule) => void): Promise<void> {\r\n\tlet response;\r\n\r\n\ttry {\r\n\t\tresponse = await $net.load(url);\r\n\r\n\t} catch (e) {\r\n\t\tconsole.error(\"Failed to load stylesheet\", url, e);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst s = doc.createElement(\"style\");\r\n\ts.textContent = response.response;\r\n\tif (options.nonce != \"\") {\r\n\t\ts.setAttribute(\"nonce\", options.nonce)\r\n\t}\r\n\tdoc.head.appendChild(s);\r\n\r\n\ttry {\r\n\t\tconst rules = await getCssRules(s);\r\n\t\tawait eachStylesheet(doc, url, rules, f);\r\n\r\n\t} finally {\r\n\t\tdoc.head.removeChild(s);\r\n\t}\r\n}\r\n\r\n// This calls a function for each CSSRule inside of a CSSStyleSheet.\r\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\r\n// TODO this should be moved into utils or something\r\nasync function eachStylesheet(doc: Document, topUrl: string, rules: CSSRuleList, f: (topUrl: string, rule: CSSRule) => void): Promise<void> {\r\n\tconst promises: Array<Promise<void>> = [];\r\n\r\n\tconst length = rules.length;\r\n\r\n\tfor (let i = 0; i < length; i++) {\r\n\t\tconst rule = rules[i];\r\n\r\n\t\tif (rule.type === CSSRule.IMPORT_RULE) {\r\n\t\t\tlet url = (<CSSImportRule>rule).href;\r\n\r\n\t\t\tif (url) {\r\n\t\t\t\turl = $utils.joinUrl(topUrl, url);\r\n\t\t\t\tpromises.push(loadStylesheet(doc, url, f));\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tf(topUrl, rule);\r\n\t\t}\r\n\t}\r\n\r\n\tif (promises.length) {\r\n\t\tawait Promise.all(promises);\r\n\t}\r\n}\r\n\r\n// This calls a function for each CSSRule for all of the stylesheets in the page.\r\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\r\n// TODO this should be moved into utils or something\r\nasync function eachStylesheets(f: (topUrl: string, rule: CSSRule) => void): Promise<void> {\r\n\t// This uses an <iframe> so it doesn't screw up the site's styles\r\n\tconst iframe = document.createElement(\"iframe\");\r\n\r\n\t// This causes it to use the same origin policy as the parent page\r\n\tiframe.src = \"about:blank\";\r\n\t// This tries to make it more accessible for screen readers\r\n\tiframe.setAttribute(\"title\", \"\");\r\n\r\n\tdocument.head.appendChild(iframe);\r\n\r\n\ttry {\r\n\t\tconst doc = iframe.contentDocument;\r\n\r\n\t\t// TODO use $dom.getRoot instead of document ?\r\n\t\tawait Promise.all($array.map(document.styleSheets, (sheet) => {\r\n\t\t\tlet url = sheet.href;\r\n\r\n\t\t\tif (url == null) {\r\n\t\t\t\treturn eachStylesheet(doc, location.href, (<CSSStyleSheet>sheet).cssRules, f);\r\n\r\n\t\t\t} else {\r\n\t\t\t\turl = $utils.joinUrl(location.href, url);\r\n\t\t\t\treturn loadStylesheet(doc, url, f);\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t} finally {\r\n\t\tdocument.head.removeChild(iframe);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents an Event object that comes from [[Export]].\r\n */\r\nexport type ExportOperation = {\r\n\tformat?: string;\r\n\toptions?: any;\r\n}\r\n\r\n/**\r\n * Defines image formats available for export.\r\n */\r\nexport type imageFormats = \"png\" | \"gif\" | \"jpg\";\r\n\r\n/**\r\n * An interface describing extra elements to include in export.\r\n *\r\n * @since 4.2.0\r\n */\r\nexport interface IExportCanvas {\r\n\r\n\t/**\r\n\t * Top margin in pixels.\r\n\t */\r\n\tmarginTop?: number;\r\n\r\n\t/**\r\n\t * Right margin in pixels.\r\n\t */\r\n\tmarginRight?: number;\r\n\r\n\t/**\r\n\t * Bottom margin in pixels.\r\n\t */\r\n\tmarginBottom?: number;\r\n\r\n\t/**\r\n\t * Left margin in pixels.\r\n\t */\r\n\tmarginLeft?: number;\r\n\r\n\t/**\r\n\t * Position to put extra element in relation to main chart.\r\n\t */\r\n\tposition?: \"left\" | \"right\" | \"top\" | \"bottom\";\r\n\r\n\t/**\r\n\t * Reference to element.\r\n\t */\r\n\tsprite?: Sprite;\r\n\r\n\t/**\r\n\t * If this is set to `true` and extra element is higher/wider than main\r\n\t * chart element, the extra element will be cropped.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.6.1\r\n\t */\r\n\tcrop?: boolean;\r\n}\r\n\r\n/**\r\n * Represents options for image export.\r\n */\r\nexport interface IExportImageOptions {\r\n\r\n\t/**\r\n\t * Quality of the exported image. (0-1)\r\n\t */\r\n\tquality?: number;\r\n\r\n\t/**\r\n\t * Rescale image.\r\n\t *\r\n\t * Number less than 1 will shrink the image.\r\n\t *\r\n\t * Number bigger than 1 will scale up the image.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\tscale?: number;\r\n\r\n\t/**\r\n\t * Minimum width in pixels of the exported image. If source chart is smaller\r\n\t * thank this, it will be scaled up.\r\n\t *\r\n\t * @since 4.9.24\r\n\t */\r\n\tminWidth?: number;\r\n\r\n\t/**\r\n\t * Minimum height in pixels of the exported image. If source chart is smaller\r\n\t * thank this, it will be scaled up.\r\n\t *\r\n\t * @since 4.9.24\r\n\t */\r\n\tminHeight?: number;\r\n\r\n\t/**\r\n\t * Maximum width in pixels of the exported image. If source chart is bigger\r\n\t * thank this, it will be scaled down.\r\n\t *\r\n\t * NOTE: this setting might be overidden by `minWidth`.\r\n\t *\r\n\t * @since 4.9.24\r\n\t */\r\n\tmaxWidth?: number;\r\n\r\n\t/**\r\n\t * Maximum height in pixels of the exported image. If source chart is bigger\r\n\t * thank this, it will be scaled down.\r\n\t *\r\n\t * NOTE: this setting might be overidden by `minHeight`.\r\n\t *\r\n\t * @since 4.9.24\r\n\t */\r\n\tmaxHeight?: number;\r\n\r\n\t/**\r\n\t * Normally, Export removes \"tainted\" images (images that are loaded from\r\n\t * other host than the chart itself) before export.\r\n\t *\r\n\t * Set this to `true` to disable it.\r\n\t *\r\n\t * Please note that removal of tainted images might trigger cross-origin\r\n\t * security restrictions in browser and prevent the whole export operation,\r\n\t * so use with caution.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tkeepTainted?: boolean;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for SVG export.\r\n */\r\nexport interface IExportSVGOptions {\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n\t/**\r\n\t * Rescale image.\r\n\t *\r\n\t * Number less than 1 will shrink the image.\r\n\t *\r\n\t * Number bigger than 1 will scale up the image.\r\n\t *\r\n\t * @default 1\r\n\t * @since 4.10.06\r\n\t */\r\n\tscale?: number;\r\n\r\n\t/**\r\n\t * Minimum width in pixels of the exported image. If source chart is smaller\r\n\t * thank this, it will be scaled up.\r\n\t *\r\n\t * @since 4.10.06\r\n\t */\r\n\tminWidth?: number;\r\n\r\n\t/**\r\n\t * Minimum height in pixels of the exported image. If source chart is smaller\r\n\t * thank this, it will be scaled up.\r\n\t *\r\n\t * @since 4.10.06\r\n\t */\r\n\tminHeight?: number;\r\n\r\n\t/**\r\n\t * Maximum width in pixels of the exported image. If source chart is bigger\r\n\t * thank this, it will be scaled down.\r\n\t *\r\n\t * NOTE: this setting might be overidden by `minWidth`.\r\n\t *\r\n\t * @since 4.10.06\r\n\t */\r\n\tmaxWidth?: number;\r\n\r\n\t/**\r\n\t * Maximum height in pixels of the exported image. If source chart is bigger\r\n\t * thank this, it will be scaled down.\r\n\t *\r\n\t * NOTE: this setting might be overidden by `minHeight`.\r\n\t *\r\n\t * @since 4.10.06\r\n\t */\r\n\tmaxHeight?: number;\r\n\r\n}\r\n\r\n/**\r\n * Available PDF page sizes.\r\n */\r\nexport type pageSizes = \"4A0\" | \"2A0\" | \"A0\" | \"A1\" | \"A2\" | \"A3\" | \"A4\" | \"A5\" | \"A6\" | \"A7\" | \"A8\" | \"A9\" | \"A10\" |\r\n\t\"B0\" | \"B1\" | \"B2\" | \"B3\" | \"B4\" | \"B5\" | \"B6\" | \"B7\" | \"B8\" | \"B9\" | \"B10\" |\r\n\t\"C0\" | \"C1\" | \"C2\" | \"C3\" | \"C4\" | \"C5\" | \"C6\" | \"C7\" | \"C8\" | \"C9\" | \"C10\" |\r\n\t\"RA0\" | \"RA1\" | \"RA2\" | \"RA3\" | \"RA4\" |\r\n\t\"SRA0\" | \"SRA1\" | \"SRA2\" | \"SRA3\" | \"SRA4\" |\r\n\t\"EXECUTIVE\" | \"FOLIO\" | \"LEGAL\" | \"LETTER\" | \"TABLOID\";\r\n\r\n/**\r\n * Represents options for PDF export.\r\n */\r\nexport interface IExportPDFOptions extends IExportImageOptions {\r\n\r\n\t/**\r\n\t * Font size to use for all texts.\r\n\t */\r\n\tfontSize?: number;\r\n\r\n\t/**\r\n\t * An image format to use for embedded images in PDF.\r\n\t *\r\n\t * See `imageFormats` in [[Export_module]].\r\n\t */\r\n\timageFormat?: imageFormats;\r\n\r\n\t/**\r\n\t * Whether to add a URL of the web page the chart has been exported from.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\taddURL?: boolean;\r\n\r\n\t/**\r\n\t * Page size of the exported PDF.\r\n\t */\r\n\tpageSize?: pageSizes;\r\n\r\n\t/**\r\n\t * Page orientation.\r\n\t */\r\n\tpageOrientation?: \"landscape\" | \"portrait\";\r\n\r\n\t/**\r\n\t * Alignment of the chart image in PDF.\r\n\t *\r\n\t * Supported options: `\"left\"` (default), `\"center\"`, `\"right\"`.\r\n\t *\r\n\t * @since 4.9.14\r\n\t * @default left\r\n\t */\r\n\talign?: Align;\r\n\r\n\t/**\r\n\t * Page margins.\r\n\t *\r\n\t * Can be one of the following:\r\n\t *\r\n\t * A single number, in which case it will act as margin setting\r\n\t * for all four edges of the page.\r\n\t *\r\n\t * An array of two numbers `[ horizontal, vertical ]`.\r\n\t *\r\n\t * An array of four numbers `[ left, top, right, bottom ]`.\r\n\t */\r\n\tpageMargins?: number | number[];\r\n\r\n\t/**\r\n\t * Should data table be included together with the image?\r\n\t *\r\n\t * Use \"pdfdata\" options to configure table output.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.7.0\r\n\t */\r\n\taddData?: boolean;\r\n\r\n\t/**\r\n\t * Add column names in first row?\r\n\t *\r\n\t * Export will try to use user-friendly column names where possible, either\r\n\t * from Export's `dataFields` or deduced from chart's series' names that are\r\n\t * bound to specific data fields.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.7.0\r\n\t */\r\n\taddColumnNames?: boolean;\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.7.0\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.7.0\r\n\t */\r\n\tuseLocale?: boolean;\r\n\r\n\t/**\r\n\t * Replace missing values with this.\r\n\t *\r\n\t * @default \"\" (empty string)\r\n\t * @since 4.7.0\r\n\t */\r\n\temptyAs?: any;\r\n\r\n\t/**\r\n\t * If set to `true` will export data as pivoted (column names in first column;\r\n\t * values in rows).\r\n\t *\r\n\t * @default false\r\n\t * @since 4.7.0\r\n\t */\r\n\tpivot?: boolean;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n\t/**\r\n\t * Font which should be used for the export.\r\n\t *\r\n\t * Default font used for PDF includes only Latin-based and Cyrilic\r\n\t * characters. If you are exporting text in other languages, you might need\r\n\t * to use some other export font.\r\n\t *\r\n\t * @since 4.9.19\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/using-pdf-export-fonts/}\r\n\t */\r\n\tfont?: IFont;\r\n\r\n\t/**\r\n\t * Additional optional fonts which can be used on individual elements.\r\n\t *\r\n\t * @since 4.9.19\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/using-pdf-export-fonts/}\r\n\t */\r\n\textraFonts?: Array<IFont>;\r\n\r\n\t/**\r\n\t * Rescale image.\r\n\t *\r\n\t * Number less than 1 will shrink the image.\r\n\t *\r\n\t * Number bigger than 1 will scale up the image.\r\n\t *\r\n\t * @default 1\r\n\t * @since 4.10.13\r\n\t */\r\n\tscale?: number;\r\n\r\n\t/**\r\n\t * Minimum width in pixels of the exported image. If source chart is smaller\r\n\t * thank this, it will be scaled up.\r\n\t *\r\n\t * @since 4.10.13\r\n\t */\r\n\tminWidth?: number;\r\n\r\n\t/**\r\n\t * Minimum height in pixels of the exported image. If source chart is smaller\r\n\t * thank this, it will be scaled up.\r\n\t *\r\n\t * @since 4.10.13\r\n\t */\r\n\tminHeight?: number;\r\n\r\n\t/**\r\n\t * Maximum width in pixels of the exported image. If source chart is bigger\r\n\t * thank this, it will be scaled down.\r\n\t *\r\n\t * NOTE: this setting might be overidden by `minWidth`.\r\n\t *\r\n\t * @since 4.10.13\r\n\t */\r\n\tmaxWidth?: number;\r\n\r\n\t/**\r\n\t * Maximum height in pixels of the exported image. If source chart is bigger\r\n\t * thank this, it will be scaled down.\r\n\t *\r\n\t * NOTE: this setting might be overidden by `minHeight`.\r\n\t *\r\n\t * @since 4.10.13\r\n\t */\r\n\tmaxHeight?: number;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for CSV export.\r\n */\r\nexport interface IExportCSVOptions {\r\n\r\n\t/**\r\n\t * Separator string to separate columns with.\r\n\t *\r\n\t * @default \",\"\r\n\t */\r\n\tseparator?: string;\r\n\r\n\t/**\r\n\t * CSV format does not require enclosing values in quotes, unless it\r\n\t * contains strings.\r\n\t *\r\n\t * This setting can be used to enforce enclosing of all values in CSV with\r\n\t * quotes.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tforceQuotes?: boolean;\r\n\r\n\t/**\r\n\t * Add column names in first row?\r\n\t *\r\n\t * Export will try to use user-friendly column names where possible, either\r\n\t * from Export's `dataFields` or deduced from chart's series' names that are\r\n\t * bound to specific data fields.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\taddColumnNames?: boolean;\r\n\r\n\t/**\r\n\t * Add rows in reverse order.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\treverse?: boolean;\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tuseLocale?: boolean;\r\n\r\n\t/**\r\n\t * Replace missing values with this.\r\n\t *\r\n\t * @default \"\" (empty string)\r\n\t */\r\n\temptyAs?: any;\r\n\r\n\t/**\r\n\t * If set to `true` will export data as pivoted (column names in first column;\r\n\t * values in rows).\r\n\t *\r\n\t * @default false\r\n\t * @since 4.6.8\r\n\t */\r\n\tpivot?: boolean;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n\r\n\t/**\r\n\t * Add BOM character to output file, so that it can be used with UTF-8\r\n\t * characters properly in Excel.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.10.21\r\n\t */\r\n\taddBOM?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for JSON export\r\n */\r\nexport interface IExportJSONOptions {\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tuseLocale?: boolean;\r\n\r\n\t/**\r\n\t * Sets indent size for each hierarchical elements.\r\n\t *\r\n\t * @default \"  \"\r\n\t */\r\n\tindent?: number;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for XLSX export.\r\n */\r\nexport interface IExportExcelOptions {\r\n\r\n\t/**\r\n\t * Add column names in first row?\r\n\t *\r\n\t * Export will try to use user-friendly column names where possible, either\r\n\t * from Export's `dataFields` or deduced from chart's series' names that are\r\n\t * bound to specific data fields.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\taddColumnNames?: boolean;\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tuseLocale?: boolean;\r\n\r\n\t/**\r\n\t * Replace missing values with this.\r\n\t *\r\n\t * @default \"\" (empty string)\r\n\t */\r\n\temptyAs?: any;\r\n\r\n\t/**\r\n\t * If set to `true` will export data as pivoted (column names in first column;\r\n\t * values in rows).\r\n\t *\r\n\t * @default false\r\n\t * @since 4.6.8\r\n\t */\r\n\tpivot?: boolean;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for HTML export.\r\n * @since 4.7.0\r\n */\r\nexport interface IExportHTMLOptions {\r\n\r\n\t/**\r\n\t * Add column names in first row?\r\n\t *\r\n\t * Export will try to use user-friendly column names where possible, either\r\n\t * from Export's `dataFields` or deduced from chart's series' names that are\r\n\t * bound to specific data fields.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\taddColumnNames?: boolean;\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tuseLocale?: boolean;\r\n\r\n\t/**\r\n\t * Replace missing values with this.\r\n\t *\r\n\t * @default \"\" (empty string)\r\n\t */\r\n\temptyAs?: any;\r\n\r\n\t/**\r\n\t * If set to `true` will export data as pivoted (column names in first column;\r\n\t * values in rows).\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tpivot?: boolean;\r\n\r\n\t/**\r\n\t * A class name to add to table.\r\n\t */\r\n\ttableClass?: string;\r\n\r\n\t/**\r\n\t * A class name to add to table headers.\r\n\t */\r\n\trowClass?: string;\r\n\r\n\t/**\r\n\t * A class name to add to table headers.\r\n\t */\r\n\theaderClass?: string;\r\n\r\n\t/**\r\n\t * A class name to add to table cells.\r\n\t */\r\n\tcellClass?: string;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for print.\r\n */\r\nexport interface IExportPrintOptions extends IExportImageOptions {\r\n\r\n\t/**\r\n\t * A delay in milliseconds to wait before initiating print.\r\n\t *\r\n\t * This delay is necessary to ensure DOM is prepared and repainted before\r\n\t * print dialog kicks in.\r\n\t *\r\n\t * @default 500\r\n\t */\r\n\tdelay?: number;\r\n\r\n\t/**\r\n\t * Method to use for printing.\r\n\t *\r\n\t * If one fails for your particular setup, try the other.\r\n\t *\r\n\t * \"css\" - inserts dynamic CSS that hides everything, except the image being printed.\r\n\t * \"iframe\" - creates a dynamic `<iframe>` with the image, then prints it.\r\n\t *\r\n\t * @default \"iframe\"\r\n\t */\r\n\tprintMethod?: \"css\" | \"iframe\";\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for custom menu items.\r\n */\r\nexport interface IExportCustomOptions {\r\n\r\n\t/**\r\n\t * A callback function reference that will be called when this custom item\r\n\t * is clicked.\r\n\t */\r\n\tcallback?: (branch?: any) => any;\r\n\r\n\t/**\r\n\t * A target which will be `this` context for callback calls.\r\n\t */\r\n\tcallbackTarget?: any;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents interface for a temporarily removed image.\r\n */\r\nexport interface IExportRemovedObject {\r\n\r\n\t/**\r\n\t * Element that was removed out of DOM.\r\n\t */\r\n\telement: Node;\r\n\r\n\t/**\r\n\t * A placeholder element that was placed instead of removed element so that\r\n\t * we know where to put removed element back in.\r\n\t */\r\n\tplaceholder: Node;\r\n\r\n}\r\n\r\n/**\r\n * Represents all available options for all export operations.\r\n */\r\nexport interface IExportOptions {\r\n\tpng: IExportImageOptions;\r\n\tgif: IExportImageOptions;\r\n\tjpg: IExportImageOptions;\r\n\tsvg: IExportSVGOptions;\r\n\tpdf: IExportPDFOptions;\r\n\txlsx: IExportExcelOptions;\r\n\tcsv: IExportCSVOptions;\r\n\tjson: IExportJSONOptions;\r\n\tpdfdata: IExportPDFOptions;\r\n\thtml: IExportHTMLOptions;\r\n\tprint: IExportPrintOptions;\r\n\tcustom: IExportCustomOptions;\r\n}\r\n\r\n/**\r\n * All export options as a type.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport type ExportOptions = IExportImageOptions | IExportSVGOptions | IExportPDFOptions | IExportExcelOptions | IExportCSVOptions | IExportJSONOptions | IExportHTMLOptions | IExportPrintOptions;\r\n\r\n/**\r\n * Defines events for export operations.\r\n */\r\nexport interface IExportEvents {\r\n\r\n\t/**\r\n\t * Invoked when Export initializes.\r\n\t */\r\n\tinited: {};\r\n\r\n\t/**\r\n\t * Invoked when Export menu is created.\r\n\t */\r\n\tmenucreated: {};\r\n\r\n\t/**\r\n\t * Invoked when the Export starts export procedure.\r\n\t *\r\n\t * You can use event handlers here to modify config before actual export\r\n\t * starts.\r\n\t */\r\n\texportstarted: ExportOperation;\r\n\r\n\t/**\r\n\t * Invoked when export operation finishes.\r\n\t */\r\n\texportfinished: ExportOperation;\r\n\r\n\t/**\r\n\t * Invoked when export operation encounters error.\r\n\t */\r\n\terror: ExportOperation;\r\n\r\n\t/**\r\n\t * Invoked when export operation times out.\r\n\t *\r\n\t * Use Export's `timeoutDelay` setting to set timeout. (default: 2000ms)\r\n\t */\r\n\texporttimedout: ExportOperation;\r\n\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport type Keys = keyof IExportOptions;\r\n\r\n/**\r\n * Represents a list of available adapters for [[Export]].\r\n */\r\nexport interface IExportAdapters {\r\n\r\n\tsupported: {\r\n\t\tsupported: boolean,\r\n\t\ttype: Keys,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\texportFunction: {\r\n\t\tfunc: <Key extends keyof IExportOptions>(type: Key, options?: IExportOptions[Key]) => Promise<any>,\r\n\t\ttype: Keys,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\toptions: {\r\n\t\toptions: IExportOptions[Keys],\r\n\t\ttype?: Keys\r\n\t},\r\n\r\n\ttitle: {\r\n\t\ttitle: $type.Optional<string>,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tcharset: {\r\n\t\tcharset: string,\r\n\t\ttype?: Keys,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t}\r\n\r\n\tsvgToDataURI: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetSVG: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tnormalizeSVG: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetCSV: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetJSON: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetExcel: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetHTML: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tpdfmakeDocument: {\r\n\t\tdoc: any,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tpdfmakeTable: {\r\n\t\ttable: any,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tcontainer: {\r\n\t\tcontainer: HTMLElement\r\n\t},\r\n\r\n\tsprite: {\r\n\t\tsprite: Sprite\r\n\t},\r\n\r\n\textraSprites: {\r\n\t\textraSprites: Array<Sprite | IExportCanvas>\r\n\t},\r\n\r\n\tvalidateSprites: {\r\n\t\tvalidateSprites: Array<Sprite>\r\n\t},\r\n\r\n\tdata: {\r\n\t\tdata: Array<any>\r\n\t},\r\n\r\n\tdataFields: {\r\n\t\tdataFields: any\r\n\t},\r\n\r\n\tformatDataFields: {\r\n\t\tdataFields: any,\r\n\t\tformat: string\r\n\t},\r\n\r\n\tdataFieldsOrder: {\r\n\t\tdataFieldsOrder: string[],\r\n\t\tformat: string\r\n\t},\r\n\r\n\tdateFormatter: {\r\n\t\tdateFormatter: DateFormatter\r\n\t},\r\n\r\n\tdateFormat: {\r\n\t\tdateFormat: $type.Optional<string | Intl.DateTimeFormatOptions>\r\n\t},\r\n\r\n\tdateFields: {\r\n\t\tdateFields: any\r\n\t},\r\n\r\n\tnumberFormatter: {\r\n\t\tnumberFormatter: NumberFormatter\r\n\t},\r\n\r\n\tnumberFormat: {\r\n\t\tnumberFormat: $type.Optional<string>\r\n\t},\r\n\r\n\tnumberFields: {\r\n\t\tnumberFields: any\r\n\t},\r\n\r\n\tdurationFormatter: {\r\n\t\tdurationFormatter: DurationFormatter\r\n\t},\r\n\r\n\tdurationFormat: {\r\n\t\tdurationFormat: $type.Optional<string>\r\n\t},\r\n\r\n\tdurationFields: {\r\n\t\tdurationFields: any\r\n\t},\r\n\r\n\tdataFieldName: {\r\n\t\tname: string,\r\n\t\tfield: string\r\n\t},\r\n\r\n\tisDateField: {\r\n\t\tisDateField: boolean,\r\n\t\tfield: string\r\n\t},\r\n\r\n\tisNumberField: {\r\n\t\tisNumberField: boolean,\r\n\t\tfield: string\r\n\t},\r\n\r\n\tisDurationField: {\r\n\t\tisDurationField: boolean,\r\n\t\tfield: string\r\n\t},\r\n\r\n\tcontentType: {\r\n\t\tcontentType: string,\r\n\t\ttype: Keys\r\n\t},\r\n\r\n\tfilePrefix: {\r\n\t\tfilePrefix: string\r\n\t},\r\n\r\n\tbackgroundColor: {\r\n\t\tbackgroundColor: $type.Optional<Color>\r\n\t},\r\n\r\n\ttimeoutMessage: {\r\n\t\tmessage: string\r\n\t},\r\n\r\n\txlsxWorkbookOptions: {\r\n\t\toptions: any,\r\n\t\txlsx: any\r\n\t},\r\n\r\n\txlsxSheetName: {\r\n\t\tname: string,\r\n\t\txlsx: any\r\n\t},\r\n\r\n\t/**\r\n\t * @since 4.9.28\r\n\t */\r\n\txlsxWorkbook: {\r\n\t\tworkbook: any,\r\n\t\txlsx: any,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * [[Export]] allows downloading of current snapshot of the chart as an\r\n * image, PDF, or its data in various formats.\r\n *\r\n * The export functionality is enabled by default in charts and is accessible\r\n * via API or optional export menu.\r\n *\r\n * To enable menu, simply access export's `menu` property. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * To export via API, use `export()` method:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n *\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n *\r\n * @todo Better loading indicator?\r\n * @todo Implement multiplier option\r\n * @todo Handling of hanged exports\r\n * @important\r\n */\r\nexport class Export extends Validatable {\r\n\r\n\t/**\r\n\t * XLINK namespace definition.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tstatic XLINK: string = \"http://www.w3.org/1999/xlink\";\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IExportEvents;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IExportAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t */\r\n\tpublic adapter = new Adapter<Export, IExportAdapters>(this);\r\n\r\n\t/**\r\n\t * Holds options for each format.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprivate _formatOptions: Dictionary<string, ExportOptions> = new Dictionary<string, ExportOptions>();\r\n\r\n\t/**\r\n\t * An instance of [[Language]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _language: $type.Optional<Language>;\r\n\r\n\t/**\r\n\t * An instance of [[ExportMenu]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _menu: $type.Optional<ExportMenu>;\r\n\r\n\t/**\r\n\t * Reference to main container to place menu in.\r\n\t */\r\n\tprotected _container: HTMLElement;\r\n\r\n\t/**\r\n\t * [[Sprite]] instance to be used when converting to image.\r\n\t */\r\n\tprotected _sprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * Extra [[Sprite]] elements to include in exports.\r\n\t */\r\n\tprotected _extraSprites: Array<Sprite | IExportCanvas> = [];\r\n\r\n\t/**\r\n\t * A list of [[Sprite]] elements that need to be valid before export\r\n\t * commences.\r\n\t */\r\n\tprotected _validateSprites: Array<Sprite> = [];\r\n\r\n\t/**\r\n\t * Data storage to be used when exporting to data formats.\r\n\t */\r\n\tprotected _data: any;\r\n\r\n\t/**\r\n\t * Holds an object of field key / field name used to name columns when\r\n\t * exporting to data formats.\r\n\t */\r\n\tprotected _dataFields: any;\r\n\r\n\t/**\r\n\t * Holds an array of data field names. If set, exported data fields will try\r\n\t * to maintain this order.\r\n\t *\r\n\t * If not set (default), the export will try to maintain the same order as\r\n\t * in source data, or as in `dataFields` (if set).\r\n\t *\r\n\t * @since 4.9.7\r\n\t */\r\n\tpublic dataFieldsOrder: string[] = [];\r\n\r\n\t/**\r\n\t * Indicates whether data fields were generated dynamically (`true`) or\r\n\t * if they were pre-set by the user (`false`).\r\n\t */\r\n\tprotected _dynamicDataFields: boolean = true;\r\n\r\n\t/**\r\n\t * A reference to [[DateFormatter]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _dateFormatter: $type.Optional<DateFormatter>;\r\n\r\n\t/**\r\n\t * A Date format to be used when formatting dates in string-based data\r\n\t * formats.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _dateFormat: $type.Optional<string | Intl.DateTimeFormatOptions>;\r\n\r\n\t/**\r\n\t * A list of column keys that hold date values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _dateFields: $type.Optional<List<string>>;\r\n\r\n\t/**\r\n\t * A reference to [[DurationFormatter]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _durationFormatter: $type.Optional<DurationFormatter>;\r\n\r\n\t/**\r\n\t * A duration format to be used when formatting numeric values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _durationFormat: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * A list of column keys that hold duration values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _durationFields: $type.Optional<List<string>>;\r\n\r\n\t/**\r\n\t * A reference to [[NumberFormatter]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _numberFormatter: $type.Optional<NumberFormatter>;\r\n\r\n\t/**\r\n\t * A number format to be used when formatting numbers in string-based data\r\n\t * formats.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _numberFormat: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * A list of column keys that hold number values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _numberFields: $type.Optional<List<string>>;\r\n\r\n\t/**\r\n\t * Holds a list of objects that were temporarily removed from the DOM while\r\n\t * exporting. Those most probably are tainted images, or foreign objects that\r\n\t * would otherwise prevent SVG to be converted to canvas.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _removedObjects: List<IExportRemovedObject> = new List<IExportRemovedObject>();\r\n\r\n\t/**\r\n\t * Holds references to the objects that were temporarily hidden when export\r\n\t * started, so that we can reveal them back when export ends.\r\n\t */\r\n\tprotected _hiddenObjects: Sprite[] = [];\r\n\r\n\t/**\r\n\t * Indicates if non-exportable objects are now hidden;\r\n\t */\r\n\tprotected _objectsAlreadyHidden: boolean = false;\r\n\r\n\t/**\r\n\t * Exported files will be prefixed with whatever it is set here.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _filePrefix: string = \"amCharts\";\r\n\r\n\t/**\r\n\t * Export will try to determine proper background color itself. If you want to\r\n\t * override it and use some other color, set this property.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _backgroundColor: $type.Optional<Color>;\r\n\r\n\t/**\r\n\t * A title to use for some document exports, mainly for print.\r\n\t * A document.title will be used if not set.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _title: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * If you are using web fonts (such as Google Fonts), your chart might be\r\n\t * using them as well.\r\n\t *\r\n\t * Normally, exporting to image will require to download these fonts so the\r\n\t * are carried over to exported image.\r\n\t *\r\n\t * This setting can be used to disable or enable this functionality.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpublic useWebFonts: boolean = true;\r\n\r\n\t/**\r\n\t * A regular expression that will be matched against each URL of an external\r\n\t * font being loaded. Font will only be loaded of regular expression matches.\r\n\t *\r\n\t * Has no effect of `useWebFonts` is set to `false`.\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.exporting.webFontFilter = /pacifico|roboto/;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.exporting.webFontFilter = /pacifico|roboto/;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"exporting\": {\r\n\t *     // ...\r\n\t *     \"webFontFilter\": /pacifico|roboto/\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.10.17\r\n\t */\r\n\tpublic webFontFilter: RegExp;\r\n\r\n\t/**\r\n\t * Many modern displays have use more actual pixels per displayed pixel. This\r\n\t * results in sharper images on screen. Unfortunately, when exported to a\r\n\t * bitmap image of the sam width/height size it will lose those extra pixels,\r\n\t * resulting in somewhat blurry image.\r\n\t *\r\n\t * This is why we are going to export images larger than they are, so that we\r\n\t * don't lose any details.\r\n\t *\r\n\t * If you'd rather export images without change in size, set this to `false`.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpublic useRetina: boolean = true;\r\n\r\n\t/**\r\n\t * By default Export will try to use built-in method for transforming chart\r\n\t * into an image for download, then fallback to external library (canvg) for\r\n\t * conversion if failed.\r\n\t *\r\n\t * Setting this to `false` will force use of external library for all export\r\n\t * operations.\r\n\t *\r\n\t * It might be useful to turn off simplified export if you are using strict\r\n\t * content security policies, that disallow images with blobs as their\r\n\t * source.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.2.5\r\n\t */\r\n\tpublic useSimplifiedExport: boolean = true;\r\n\r\n\t/**\r\n\t * If export operation takes longer than milliseconds in this second, we will\r\n\t * show a modal saying export operation took longer than expected.\r\n\t */\r\n\tpublic timeoutDelay: number = 2000;\r\n\r\n\t/**\r\n\t * A reference to export timeout.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _timeoutTimeout: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * Holds reference to [[Modal]] instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _modal: $type.Optional<Modal>;\r\n\r\n\t/**\r\n\t * Used to log original value of `interactionsEnabled` so that it can be restored\r\n\t * after temporarily disabling it.\r\n\t */\r\n\tprivate _spriteInteractionsEnabled: $type.Optional<boolean>;\r\n\r\n\tprivate _exportRunning: boolean = false;\r\n\r\n\t/**\r\n\t * Indicator used by [[Component]].\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tprivate _prevHasData: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor(container: HTMLElement) {\r\n\t\tsuper();\r\n\r\n\t\tthis._container = container;\r\n\r\n\t\tthis.className = \"Export\";\r\n\r\n\t\t// Set default options\r\n\t\tthis._formatOptions.setKey(\"png\", {});\r\n\r\n\t\tthis._formatOptions.setKey(\"jpg\", {\r\n\t\t\tquality: 0.8\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"gif\", {});\r\n\r\n\t\tthis._formatOptions.setKey(\"svg\", {});\r\n\r\n\t\tthis._formatOptions.setKey(\"pdf\", {\r\n\t\t\tfontSize: 14,\r\n\t\t\timageFormat: \"png\",\r\n\t\t\talign: \"left\",\r\n\t\t\taddURL: true,\r\n\t\t\taddColumnNames: true\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"json\", {\r\n\t\t\tindent: 2,\r\n\t\t\tuseLocale: true\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"csv\", {\r\n\t\t\taddColumnNames: true,\r\n\t\t\temptyAs: \"\",\r\n\t\t\taddBOM: true\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"xlsx\", {\r\n\t\t\taddColumnNames: true,\r\n\t\t\tuseLocale: true,\r\n\t\t\temptyAs: \"\"\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"html\", {\r\n\t\t\taddColumnNames: true,\r\n\t\t\temptyAs: \"\"\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"pdfdata\", {\r\n\t\t\tfontSize: 14,\r\n\t\t\timageFormat: \"png\",\r\n\t\t\taddURL: true,\r\n\t\t\taddColumnNames: true,\r\n\t\t\temptyAs: \"\"\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"print\", {\r\n\t\t\tdelay: 500,\r\n\t\t\tprintMethod: \"iframe\"\r\n\t\t});\r\n\r\n\t\t// Add options adapter\r\n\t\tthis.adapter.add(\"options\", (arg) => {\r\n\t\t\tlet formatOptions = this._formatOptions.getKey(arg.type);\r\n\t\t\tif (arg.options) {\r\n\t\t\t\targ.options = $object.merge(formatOptions, arg.options);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\targ.options = formatOptions;\r\n\t\t\t}\r\n\t\t\treturn arg;\r\n\t\t});\r\n\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.dispatchImmediately(\"inited\");\r\n\t}\r\n\r\n\t/**\r\n\t * An instance of [[ExportMenu]].\r\n\t *\r\n\t * To add an export menu to a chart, set this to a new instance of\r\n\t * [[ExportMenu]].\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.exporting.menu = new am4core.ExportMenu();\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.exporting.menu = new am4core.ExportMenu();\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"exporting\": {\r\n\t *     \"menu\": {}\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param menu  ExportMenu instance\r\n\t */\r\n\tpublic set menu(menu: $type.Optional<ExportMenu>) {\r\n\t\tif (this._menu) {\r\n\t\t\tthis.removeDispose(this._menu);\r\n\t\t}\r\n\t\tthis._menu = menu;\r\n\r\n\t\t// Set container and language\r\n\t\tthis._menu.container = this.container;\r\n\t\tthis._menu.language = this._language;\r\n\r\n\t\t// Add adapter to check for browser support\r\n\t\tthis._menu.adapter.add(\"branch\", (arg) => {\r\n\t\t\targ.branch.unsupported = !this.typeSupported(arg.branch.type);\r\n\t\t\treturn arg;\r\n\t\t});\r\n\r\n\t\t// Add click events\r\n\t\tthis._menu.events.on(\"hit\", (ev) => {\r\n\t\t\tthis.export(ev.branch.type, ev.branch.options);\r\n\t\t\tthis.menu.close();\r\n\t\t});\r\n\r\n\t\tthis._menu.events.on(\"enter\", (ev) => {\r\n\t\t\tthis.export(ev.branch.type, ev.branch.options);\r\n\t\t\tthis.menu.close();\r\n\t\t});\r\n\r\n\t\tthis._menu.events.on(\"over\", (ev) => {\r\n\t\t\tthis._disablePointers();\r\n\t\t});\r\n\r\n\t\tthis._menu.events.on(\"out\", (ev) => {\r\n\t\t\tsetTimeout(() => { this._releasePointers(); }, 10);\r\n\t\t});\r\n\r\n\t\t// Dispatch event\r\n\t\tthis.dispatchImmediately(\"menucreated\");\r\n\r\n\t\t// Prefix with Sprite's class name\r\n\t\tthis._menu.adapter.add(\"classPrefix\", (obj) => {\r\n\t\t\tobj.classPrefix = options.classNamePrefix + obj.classPrefix;\r\n\t\t\treturn obj;\r\n\t\t});\r\n\r\n\t\t// Add menu to disposers so that it's destroyed when Export is disposed\r\n\t\tthis._disposers.push(this._menu);\r\n\t}\r\n\r\n\t/**\r\n\t * @return ExportMenu instance\r\n\t */\r\n\tpublic get menu(): $type.Optional<ExportMenu> {\r\n\t\treturn this._menu;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this specific menu item type is supported by current system.\r\n\t *\r\n\t * @param type  Menu item type\r\n\t * @return `false` if not supported\r\n\t */\r\n\tpublic typeSupported<Key extends keyof IExportOptions>(type: Key): boolean {\r\n\t\tlet supported = true;\r\n\t\tconst options = this.getFormatOptions(type);\r\n\t\tif ($type.hasValue(options) && options.disabled) {\r\n\t\t\tsupported = false;\r\n\t\t}\r\n\t\telse if (type === \"pdf\") {\r\n\t\t\t//supported = this.downloadSupport();\r\n\t\t}\r\n\t\telse if (type === \"xlsx\") {\r\n\t\t\t//supported = (this.downloadSupport() && this._hasData()) ? true : false;\r\n\t\t\tsupported = this._hasData() ? true : false;\r\n\t\t}\r\n\t\telse if (type == \"print\" && !(<any>window).print) {\r\n\t\t\tsupported = false;\r\n\t\t}\r\n\t\telse if ([\"json\", \"csv\", \"html\", \"pdfdata\"].indexOf(type) !== -1 && !this._hasData()) {\r\n\t\t\tsupported = false;\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"supported\", {\r\n\t\t\tsupported: supported,\r\n\t\t\ttype: type\r\n\t\t}).supported;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if data is available.\r\n\t *\r\n\t * @return Has data?\r\n\t */\r\n\tprivate _hasData(): boolean {\r\n\t\treturn this.data && this.data.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Get function to handle export for particular format.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprivate _getFunction<Key extends keyof IExportOptions>(type: Key): (this: this, type: Key, options?: IExportOptions[Key]) => Promise<any> {\r\n\t\tswitch (type) {\r\n\t\t\tcase \"png\":\r\n\t\t\tcase \"gif\":\r\n\t\t\tcase \"jpg\":\r\n\t\t\t\treturn <any>this.getImage;\r\n\t\t\tcase \"svg\":\r\n\t\t\t\treturn <any>this.getSVG;\r\n\t\t\tcase \"pdf\":\r\n\t\t\tcase \"pdfdata\":\r\n\t\t\t\treturn <any>this.getPDF;\r\n\t\t\tcase \"xlsx\":\r\n\t\t\t\treturn <any>this.getExcel;\r\n\t\t\tcase \"csv\":\r\n\t\t\t\treturn <any>this.getCSV;\r\n\t\t\tcase \"json\":\r\n\t\t\t\treturn <any>this.getJSON;\r\n\t\t\tcase \"html\":\r\n\t\t\t\treturn <any>this.getHTML;\r\n\t\t\tcase \"print\":\r\n\t\t\t\treturn <any>this.getPrint;\r\n\t\t\tdefault:\r\n\t\t\t\treturn this.unsupported;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates export procedure.\r\n\t *\r\n\t * @param type     Export type\r\n\t * @param options  Options\r\n\t * @return `true` if export was successful\r\n\t * @async\r\n\t */\r\n\tpublic async export<Key extends keyof IExportOptions>(type: Key, options?: IExportOptions[Key]): Promise<boolean> {\r\n\r\n\t\t// Check if it's a custom item, and do nothing or execute custom callback\r\n\t\tif (type == \"custom\") {\r\n\t\t\tthis.handleCustom(<IExportCustomOptions>options);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Set export running flag\r\n\t\tthis._exportRunning = true;\r\n\r\n\t\t// Dispatch event\r\n\t\tif (this.events.isEnabled(\"exportstarted\")) {\r\n\t\t\tconst event: AMEvent<this, IExportEvents>[\"exportstarted\"] = {\r\n\t\t\t\t\"type\": \"exportstarted\",\r\n\t\t\t\t\"target\": this,\r\n\t\t\t\t\"format\": type,\r\n\t\t\t\t\"options\": options\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"exportstarted\", event);\r\n\t\t}\r\n\r\n\t\t// Schedule a preloader\r\n\t\tthis.showPreloader()\r\n\r\n\t\t// Schedule a timeout\r\n\t\tif (this.timeoutDelay) {\r\n\t\t\tthis.hideTimeout();\r\n\t\t\tthis._timeoutTimeout = this.setTimeout((): void => {\r\n\r\n\t\t\t\t// Dispatch event\r\n\t\t\t\tif (this.events.isEnabled(\"exporttimedout\")) {\r\n\t\t\t\t\tconst event: AMEvent<this, IExportEvents>[\"exporttimedout\"] = {\r\n\t\t\t\t\t\t\"type\": \"exporttimedout\",\r\n\t\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\t\"format\": type,\r\n\t\t\t\t\t\t\"options\": options\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"exporttimedout\", event);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Show modal\r\n\t\t\t\tthis.showTimeout()\r\n\r\n\t\t\t}, this.timeoutDelay);\r\n\t\t}\r\n\r\n\t\t// Hide items that should not be exported\r\n\t\tthis.hideNonExportableSprites();\r\n\r\n\t\t// Get the actual export function\r\n\t\tlet func: (this: this, type: Key, options?: IExportOptions[Key]) => Promise<any> = this._getFunction(type);\r\n\r\n\t\t// Give chance for plugins to override both function and options\r\n\t\toptions = this.adapter.apply(\"options\", {\r\n\t\t\toptions: options,\r\n\t\t\ttype: type\r\n\t\t}).options;\r\n\r\n\t\tfunc = this.adapter.apply(\"exportFunction\", {\r\n\t\t\tfunc: func as any,\r\n\t\t\ttype: type,\r\n\t\t\toptions: options\r\n\t\t}).func;\r\n\r\n\t\t// Get exported stuff\r\n\t\tlet data = await func.call(this, type, options);\r\n\r\n\t\t// Release pointers\r\n\t\tthis._exportRunning = false;\r\n\t\tthis._releasePointers();\r\n\r\n\t\t// Restore temporarily hidden elements\r\n\t\tthis.restoreNonExportableSprites();\r\n\r\n\t\tif (data) {\r\n\r\n\t\t\t// Dispatch event\r\n\t\t\tif (this.events.isEnabled(\"exportfinished\")) {\r\n\t\t\t\tconst event: AMEvent<this, IExportEvents>[\"exportfinished\"] = {\r\n\t\t\t\t\t\"type\": \"exportfinished\",\r\n\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\"format\": type,\r\n\t\t\t\t\t\"options\": options\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"exportfinished\", event);\r\n\t\t\t}\r\n\r\n\t\t\t// Hide preloader and timeout modals\r\n\t\t\tthis.hidePreloader();\r\n\t\t\tthis.hideTimeout();\r\n\t\t\tif (this.menu) {\r\n\t\t\t\tthis.menu.close();\r\n\t\t\t}\r\n\r\n\t\t\t// Download or print\r\n\t\t\tif (type === \"print\") {\r\n\t\t\t\treturn this.print(data, <IExportOptions[\"print\"]>options, this.adapter.apply(\"title\", {\r\n\t\t\t\t\ttitle: this.title,\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t}).title);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (type == \"pdfdata\") {\r\n\t\t\t\t\treturn this.download(data, this.filePrefix + \".pdf\");\r\n\t\t\t\t}\r\n\t\t\t\treturn this.download(data, this.filePrefix + \".\" + type, (options && (<IExportCSVOptions>options).addBOM));\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Throw exception?\r\n\t\t\t// @todo\r\n\r\n\t\t\t// Dispatch event\r\n\t\t\tif (this.events.isEnabled(\"error\")) {\r\n\t\t\t\tconst event: AMEvent<this, IExportEvents>[\"error\"] = {\r\n\t\t\t\t\t\"type\": \"error\",\r\n\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\"format\": type,\r\n\t\t\t\t\t\"options\": options\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"error\", event);\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A function that should handle unsupported export types.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param type     Export type\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async unsupported<Key extends keyof IExportOptions>(type: Key, options?: IExportOptions[Key]): Promise<string> {\r\n\t\t// TODO should this return `undefined`?\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Handles click on a \"custom\" menu item.\r\n\t *\r\n\t * Basically, if it has \"callback\" enabled, it will be called. Nothing else.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param options  Options\r\n\t */\r\n\tpublic handleCustom(options: IExportCustomOptions): void {\r\n\t\tif ($type.hasValue(options) && $type.hasValue(options.callback)) {\r\n\t\t\toptions.callback.call(options.callbackTarget || this, options);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Requests a Print of the chart.\r\n\t *\r\n\t * @param type     Export type\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getPrint(type: string, options?: IExportPrintOptions): Promise<string> {\r\n\t\treturn this.getImage(\"png\", options);\r\n\t}\r\n\r\n\t/**\r\n\t * A function that returns data: URI encoded @font-family, so that way it can be embedded into SVG.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return String which can be embedded directly into a <style> element.\r\n\t * @async\r\n\t */\r\n\tpublic async getFontFamilies(): Promise<{ blobs: Array<string>, cssText: string }> {\r\n\t\tconst DOMURL = this.getDOMURL();\r\n\r\n\t\tconst blobs: Array<string> = [];\r\n\t\tconst promises: Array<Promise<string>> = [];\r\n\r\n\t\tawait eachStylesheets((topUrl, rule) => {\r\n\t\t\tif (rule.type === CSSRule.FONT_FACE_RULE) {\r\n\t\t\t\tconst cssText = rule.cssText;\r\n\r\n\t\t\t\t// TODO this is necessary because Edge doesn't let you access the src using getPropertyValue\r\n\t\t\t\tconst src = fontFamilySrcRegexp.exec(cssText);\r\n\r\n\t\t\t\tif (src !== null) {\r\n\t\t\t\t\t// TODO make this faster (don't create Promises for non-url stuff)\r\n\t\t\t\t\tconst urls: Array<Promise<string | null>> = src[1].split(/ *, */).map(async (url) => {\r\n\t\t\t\t\t\t// TODO better parsing for this\r\n\t\t\t\t\t\t// TODO is it necessary to handle ' ?\r\n\t\t\t\t\t\tconst a = /^url\\([\"']?([^\"'\\)]+)[\"']?\\)([^,]*)$/.exec(url);\r\n\r\n\t\t\t\t\t\tif (a === null) {\r\n\t\t\t\t\t\t\treturn url;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst after = a[2];\r\n\r\n\t\t\t\t\t\t\tconst fullUrl = $utils.joinUrl(topUrl, a[1]);\r\n\r\n\t\t\t\t\t\t\tif (this.webFontFilter && !fullUrl.match(this.webFontFilter)) {\r\n\t\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t// Fetch the actual font-file (.woff)\r\n\t\t\t\t\t\t\t\tconst response = await $net.load(fullUrl, undefined, { responseType: \"blob\" });\r\n\r\n\t\t\t\t\t\t\t\tlet url;\r\n\r\n\t\t\t\t\t\t\t\t// We need blob for IE and Edge\r\n\t\t\t\t\t\t\t\tif (supportsBlobUri()) {\r\n\t\t\t\t\t\t\t\t\turl = DOMURL.createObjectURL(response.blob);\r\n\t\t\t\t\t\t\t\t\tblobs.push(url);\r\n\r\n\t\t\t\t\t\t\t\t\t// We need a data URI for Firefox and Chrome\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\turl = await blobToDataUri(response.blob);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// TODO should it should escape the URI ?\r\n\t\t\t\t\t\t\t\treturn \"url(\\\"\" + url + \"\\\")\" + after;\r\n\r\n\t\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\t\tconsole.error(\"Failed to load font\", fullUrl, e);\r\n\t\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tpromises.push(Promise.all(urls).then((a) => {\r\n\t\t\t\t\t\ta = a.filter((x) => x != null);\r\n\r\n\t\t\t\t\t\tif (a.length === 0) {\r\n\t\t\t\t\t\t\treturn \"\";\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn cssText.replace(fontFamilySrcRegexp, \"src: \" + a.join(\", \") + \";\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst a = await Promise.all(promises);\r\n\r\n\t\treturn {\r\n\t\t\tblobs: blobs,\r\n\t\t\tcssText: a.filter((x) => !!x).join(\"\\n\")\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Produces image output from the element.\r\n\t *\r\n\t * Converts to a `Canvas` first, then produces an image to download.\r\n\t *\r\n\t * This is an asynchronous function. Rather than returning a result, it\r\n\t * returns a Promise.\r\n\t *\r\n\t * You can use `await` notion from other async functions, or `then()`\r\n\t * anywhere else.\r\n\t *\r\n\t * ```TypeScript\r\n\t * let img;\r\n\t *\r\n\t * // Async\r\n\t * img = await chart.exporting.getImage( \"png\" );\r\n\t *\r\n\t * // Sync\r\n\t * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n\t *   img = data;\r\n\t * } );\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var img;\r\n\t * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n\t *   img = data;\r\n\t * } );\r\n\t * ```\r\n\t *\r\n\t * @param  type           Image format\r\n\t * @param  options        Options\r\n\t * @param  includeExtras  Should extra sprites be included if set?\r\n\t * @return Promise\r\n\t */\r\n\tpublic async getImage<Key extends imageFormats>(type: Key, options?: IExportImageOptions, includeExtras?: boolean): Promise<string> {\r\n\r\n\t\tlet prehidden = this._objectsAlreadyHidden;\r\n\t\tif (!prehidden) {\r\n\t\t\tthis.hideNonExportableSprites();\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = this.getFormatOptions(type);\r\n\t\t}\r\n\r\n\t\t// Wait for required elements to be ready before proceeding\r\n\t\tawait this.awaitValidSprites();\r\n\r\n\t\t// Are we using simplified export option?\r\n\t\tif (await this.simplifiedImageExport()) {\r\n\r\n\t\t\tlet canvas;\r\n\t\t\ttry {\r\n\t\t\t\tcanvas = await this.getCanvas(options);\r\n\r\n\t\t\t\t// Add extra sprites\r\n\t\t\t\tif (includeExtras !== false) {\r\n\t\t\t\t\tconst newCanvas = await this.addExtras(canvas, options);\r\n\t\t\t\t\tthis.disposeCanvas(canvas);\r\n\t\t\t\t\tcanvas = newCanvas;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Convert to data uri\r\n\t\t\t\tlet uri = canvas.toDataURL(this.getContentType(type), options.quality);\r\n\r\n\t\t\t\t// Get rid of the canvas\r\n\t\t\t\tthis.disposeCanvas(canvas);\r\n\r\n\t\t\t\tif (!prehidden) {\r\n\t\t\t\t\tthis.restoreNonExportableSprites();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn uri;\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\tconsole.error(e.message + \"\\n\" + e.stack);\r\n\t\t\t\t$log.warn(\"Simple export failed, falling back to advanced export\");\r\n\r\n\t\t\t\tif (canvas) {\r\n\t\t\t\t\tthis.disposeCanvas(canvas);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// An error occurred, let's try advanced method\r\n\t\t\t\tconst data = await this.getImageAdvanced(type, options, includeExtras);\r\n\r\n\t\t\t\tif (!prehidden) {\r\n\t\t\t\t\tthis.restoreNonExportableSprites();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn data;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t/**\r\n\t\t\t * Going the hard way. Converting to canvas from each node\r\n\t\t\t */\r\n\t\t\tconst data = await this.getImageAdvanced(type, options, includeExtras);\r\n\r\n\t\t\tif (!prehidden) {\r\n\t\t\t\tthis.restoreNonExportableSprites();\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds extra elements to the canvas.\r\n\t *\r\n\t * @param  canvas   Original canvas\r\n\t * @param  options  Options\r\n\t */\r\n\tprivate async addExtras(canvas: HTMLCanvasElement, options?: IExportImageOptions, advanced?: boolean): Promise<HTMLCanvasElement> {\r\n\t\tif (this.extraSprites.length) {\r\n\t\t\tlet middleLeft = 0;\r\n\t\t\tlet middleTop = 0;\r\n\t\t\tlet middleWidth = canvas.width;\r\n\t\t\tlet middleHeight = canvas.height;\r\n\t\t\tlet extraRight = 0;\r\n\t\t\tlet extraBottom = 0;\r\n\r\n\t\t\tconst extras = await Promise.all($array.map(this.extraSprites, async (extraSprite) => {\r\n\t\t\t\t// Get that extra\r\n\t\t\t\tlet extra: IExportCanvas;\r\n\r\n\t\t\t\tif (extraSprite instanceof Sprite) {\r\n\t\t\t\t\textra = {\r\n\t\t\t\t\t\tsprite: extraSprite,\r\n\t\t\t\t\t\tposition: \"bottom\"\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\textra = extraSprite;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set defaults\r\n\t\t\t\textra.position = extra.position || \"bottom\";\r\n\t\t\t\textra.marginTop = extra.marginTop || 0;\r\n\t\t\t\textra.marginRight = extra.marginRight || 0;\r\n\t\t\t\textra.marginBottom = extra.marginBottom || 0;\r\n\t\t\t\textra.marginLeft = extra.marginLeft || 0;\r\n\r\n\t\t\t\tlet extraCanvas;\r\n\r\n\t\t\t\tif (advanced) {\r\n\t\t\t\t\textraCanvas = await extra.sprite.exporting.getCanvasAdvanced(options);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\textraCanvas = await extra.sprite.exporting.getCanvas(options);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst extraWidth = extraCanvas.width + extra.marginLeft + extra.marginRight;\r\n\t\t\t\tconst extraHeight = extraCanvas.height + extra.marginTop + extra.marginBottom;\r\n\r\n\t\t\t\tif (extra.position == \"top\") {\r\n\t\t\t\t\tmiddleWidth = extra.crop ? middleHeight : $math.max(middleWidth, extraWidth);\r\n\t\t\t\t\tmiddleTop += extraHeight;\r\n\r\n\t\t\t\t} else if (extra.position == \"right\") {\r\n\t\t\t\t\tmiddleHeight = extra.crop ? middleHeight : $math.max(middleHeight, extraHeight);\r\n\t\t\t\t\textraRight += extraWidth;\r\n\r\n\t\t\t\t} else if (extra.position == \"left\") {\r\n\t\t\t\t\tmiddleHeight = extra.crop ? middleHeight : $math.max(middleHeight, extraHeight);\r\n\t\t\t\t\tmiddleLeft += extraWidth;\r\n\r\n\t\t\t\t} else if (extra.position === \"bottom\") {\r\n\t\t\t\t\tmiddleWidth = extra.crop ? middleHeight : $math.max(middleWidth, extraWidth);\r\n\t\t\t\t\textraBottom += extraHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tcanvas: extraCanvas,\r\n\t\t\t\t\tposition: extra.position,\r\n\t\t\t\t\tleft: extra.marginLeft,\r\n\t\t\t\t\ttop: extra.marginTop,\r\n\t\t\t\t\twidth: extraWidth,\r\n\t\t\t\t\theight: extraHeight\r\n\t\t\t\t};\r\n\t\t\t}));\r\n\r\n\t\t\tconst newCanvas = this.getDisposableCanvas();\r\n\r\n\t\t\tnewCanvas.width = middleLeft + middleWidth + extraRight;\r\n\t\t\tnewCanvas.height = middleTop + middleHeight + extraBottom;\r\n\r\n\t\t\tconst ctx = newCanvas.getContext(\"2d\");\r\n\r\n\t\t\t// Get background\r\n\t\t\tconst background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n\r\n\t\t\tif (background) {\r\n\t\t\t\tctx.fillStyle = background.toString();\r\n\t\t\t\tctx.fillRect(0, 0, newCanvas.width, newCanvas.height);\r\n\t\t\t}\r\n\r\n\t\t\tlet left = middleLeft;\r\n\t\t\tlet top = middleTop;\r\n\t\t\tlet right = left + middleWidth;\r\n\t\t\tlet bottom = top + middleHeight;\r\n\r\n\t\t\t// Radiates outwards from center\r\n\t\t\t$array.each(extras, (extra) => {\r\n\t\t\t\tif (extra.position == \"top\") {\r\n\t\t\t\t\ttop -= extra.height;\r\n\t\t\t\t\tctx.drawImage(extra.canvas, middleLeft + extra.left, top + extra.top);\r\n\r\n\t\t\t\t} else if (extra.position == \"right\") {\r\n\t\t\t\t\tctx.drawImage(extra.canvas, right + extra.left, middleTop + extra.top);\r\n\t\t\t\t\tright += extra.width;\r\n\r\n\t\t\t\t} else if (extra.position == \"left\") {\r\n\t\t\t\t\tleft -= extra.width;\r\n\t\t\t\t\tctx.drawImage(extra.canvas, left + extra.left, middleTop + extra.top);\r\n\r\n\t\t\t\t} else if (extra.position === \"bottom\") {\r\n\t\t\t\t\tctx.drawImage(extra.canvas, middleLeft + extra.left, bottom + extra.top);\r\n\t\t\t\t\tbottom += extra.height;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.disposeCanvas(extra.canvas);\r\n\t\t\t});\r\n\r\n\t\t\tctx.drawImage(canvas, middleLeft, middleTop);\r\n\r\n\t\t\treturn newCanvas;\r\n\r\n\t\t} else {\r\n\t\t\treturn canvas;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns canvas representation of the [[Sprite]].\r\n\t *\r\n\t * @param   options  Options\r\n\t * @return           Canvas\r\n\t */\r\n\tpublic async getCanvas(options?: IExportImageOptions): Promise<HTMLCanvasElement> {\r\n\r\n\t\t// Options are set?\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\r\n\t\t// Get background\r\n\t\tlet background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n\r\n\t\t// Get DOM URL\r\n\t\tlet DOMURL = this.getDOMURL();\r\n\t\tlet url: string | null = null;\r\n\t\tlet blobs: Array<string> | null = null;\r\n\t\tlet canvas;\r\n\r\n\t\t// Create temporary image element\r\n\t\ttry {\r\n\t\t\t/**\r\n\t\t\t * Simplified version using `createObjectURL`\r\n\t\t\t * Not supported in older browsers\r\n\t\t\t */\r\n\r\n\t\t\t// Get dimensions\r\n\t\t\tlet width = this.sprite.pixelWidth;\r\n\t\t\tlet height = this.sprite.pixelHeight;\r\n\t\t\tlet font = $dom.findFont(this.sprite.dom);\r\n\t\t\tlet fontSize = $dom.findFontSize(this.sprite.dom);\r\n\t\t\tlet scale = options.scale || 1;\r\n\t\t\tlet pixelRatio = this.getPixelRatio(options);\r\n\r\n\t\t\t// Check if scale needs to be updated as per min/max dimensions\r\n\t\t\tscale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\r\n\r\n\t\t\t// Create canvas and its 2D context\r\n\t\t\tcanvas = this.getDisposableCanvas();\r\n\r\n\t\t\t// Set canvas width/height\r\n\t\t\tcanvas.style.width = width * scale + 'px';\r\n\t\t\tcanvas.style.height = height * scale + 'px';\r\n\t\t\tcanvas.width = width * scale;\r\n\t\t\tcanvas.height = height * scale;\r\n\r\n\t\t\tlet ctx = canvas.getContext(\"2d\");\r\n\r\n\t\t\t// if (pixelRatio != 1) {\r\n\t\t\t// \tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n\t\t\t// }\r\n\r\n\t\t\t// Add background if necessary\r\n\t\t\tif (background) {\r\n\t\t\t\tctx.fillStyle = background.toString();\r\n\t\t\t\tctx.fillRect(0, 0, width * scale, height * scale);\r\n\t\t\t}\r\n\r\n\t\t\tlet promises: Promise<any>[] = [];\r\n\r\n\t\t\tif (this.useWebFonts) {\r\n\t\t\t\t// TODO what if one of the other things errors before it's been able to set `blobs` ?\r\n\t\t\t\tpromises.push(this.getFontFamilies().then((fonts) => {\r\n\t\t\t\t\tblobs = fonts.blobs;\r\n\t\t\t\t\treturn fonts.cssText;\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\r\n\t\t\tpromises.push(this.imagesToDataURI(this.sprite.dom, options));\r\n\t\t\tpromises.push(this.prepForeignObjects(this.sprite.dom, options));\r\n\r\n\t\t\t// Do prepareations on a document\r\n\t\t\tlet a = await Promise.all(promises);\r\n\r\n\t\t\t// Get SVG representation of the Sprite\r\n\t\t\tlet data = this.normalizeSVG(\r\n\t\t\t\t\"<style>\" + a[0] + \"</style>\" + this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom),\r\n\t\t\t\toptions,\r\n\t\t\t\twidth,\r\n\t\t\t\theight,\r\n\t\t\t\tscale,\r\n\t\t\t\tfont,\r\n\t\t\t\tfontSize\r\n\t\t\t);\r\n\r\n\t\t\t// Get Blob representation of SVG and create object URL\r\n\t\t\tlet svg = new Blob([data], { type: \"image/svg+xml\" });\r\n\t\t\turl = DOMURL.createObjectURL(svg);\r\n\t\t\tlet img = await this.loadNewImage(url, width * scale * pixelRatio, height * scale * pixelRatio, \"anonymous\");\r\n\r\n\t\t\t// Draw image on canvas\r\n\t\t\tctx.drawImage(img, 0, 0);\r\n\r\n\t\t} finally {\r\n\t\t\tif (url !== null) {\r\n\t\t\t\tDOMURL.revokeObjectURL(url);\r\n\t\t\t}\r\n\r\n\t\t\tif (blobs !== null) {\r\n\t\t\t\t$array.each(blobs, (url) => {\r\n\t\t\t\t\tDOMURL.revokeObjectURL(url);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Restore replaced tainted images in DOM\r\n\t\t\tthis.restoreRemovedObjects();\r\n\t\t}\r\n\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns canvas representation of the [[Sprite]] using canvg.\r\n\t *\r\n\t * @param   options  Options\r\n\t * @return           Canvas\r\n\t */\r\n\tpublic async getCanvasAdvanced(options?: IExportImageOptions): Promise<HTMLCanvasElement> {\r\n\r\n\t\t// Options are set?\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t// Convert external images to data uris\r\n\t\tawait this.imagesToDataURI(this.sprite.dom, options);\r\n\r\n\t\t// Get background\r\n\t\tlet background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n\r\n\t\t// Get canvg\r\n\t\tlet canvg = await this.canvg;\r\n\r\n\t\t// Get dimensions\r\n\t\tlet width = this.sprite.pixelWidth;\r\n\t\tlet height = this.sprite.pixelHeight;\r\n\t\tlet font = $dom.findFont(this.sprite.dom);\r\n\t\tlet fontSize = $dom.findFontSize(this.sprite.dom);\r\n\t\tlet scale = options.scale || 1;\r\n\t\tlet pixelRatio = this.getPixelRatio(options);\r\n\r\n\t\t// Check if scale needs to be updated as per min/max dimensions\r\n\t\tscale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\r\n\r\n\t\t// Get SVG representation of the Sprite\r\n\t\tlet data = this.normalizeSVG(\r\n\t\t\tthis.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom),\r\n\t\t\toptions,\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\tscale,\r\n\t\t\tfont,\r\n\t\t\tfontSize,\r\n\t\t\tbackground\r\n\t\t);\r\n\r\n\t\t// Create canvas and its 2D context\r\n\t\tlet canvas = this.getDisposableCanvas();\r\n\r\n\t\t// Set canvas width/height\r\n\t\tcanvas.style.width = (width * pixelRatio * scale) + 'px';\r\n\t\tcanvas.style.height = (height * pixelRatio * scale) + 'px';\r\n\t\tcanvas.width = width * pixelRatio * scale;\r\n\t\tcanvas.height = height * pixelRatio * scale;\r\n\r\n\t\tlet config: any = {\r\n\t\t\t//ignoreDimensions: true,\r\n\t\t\tuseCORS: true\r\n\t\t};\r\n\r\n\t\tif (pixelRatio != 1) {\r\n\t\t\tconfig.ignoreDimensions = true;\r\n\t\t\tconfig.scaleWidth = width * pixelRatio * scale;\r\n\t\t\tconfig.scaleHeight = height * pixelRatio * scale;\r\n\t\t}\r\n\r\n\t\tawait canvg.fromString(canvas.getContext(\"2d\"), data, config).render();\r\n\r\n\t\treturn canvas;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Tries to dynamically load [canvg.js](https://github.com/canvg/canvg) and\r\n\t * export an image using its functions.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param type     Image format\r\n\t * @param options  Options\r\n\t * @return Data uri\r\n\t */\r\n\tpublic async getImageAdvanced(type: imageFormats, options?: IExportImageOptions, includeExtras?: boolean): Promise<string> {\r\n\r\n\t\tlet prehidden = this._objectsAlreadyHidden;\r\n\t\tif (!prehidden) {\r\n\t\t\tthis.hideNonExportableSprites();\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = this.getFormatOptions(type);\r\n\t\t}\r\n\t\t// Get canvas\r\n\t\tlet canvas = await this.getCanvasAdvanced(options);\r\n\r\n\t\t// Add extra sprites\r\n\t\tif (includeExtras !== false) {\r\n\t\t\tcanvas = await this.addExtras(canvas, options, true);\r\n\t\t}\r\n\r\n\t\t// Convert canvas to data url\r\n\t\tlet uri = canvas.toDataURL(this.getContentType(type), options.quality);\r\n\r\n\t\t// Get rid of the canvas\r\n\t\tthis.disposeCanvas(canvas);\r\n\r\n\t\tif (!prehidden) {\r\n\t\t\tthis.restoreNonExportableSprites();\r\n\t\t}\r\n\r\n\t\treturn uri;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a `<canvas>` element and returns it.\r\n\t *\r\n\t * @return Canvas element\r\n\t */\r\n\tprotected getDisposableCanvas(): HTMLCanvasElement {\r\n\t\tlet canvas = document.createElement(\"canvas\");\r\n\t\tcanvas.style.position = \"fixed\";\r\n\t\tcanvas.style.top = \"-10000px\";\r\n\t\tdocument.body.appendChild(canvas);\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes canvas.\r\n\t *\r\n\t * @param canvas  Canvas element\r\n\t */\r\n\tprotected disposeCanvas(canvas: HTMLCanvasElement): void {\r\n\t\tif (document.body.contains(canvas)) {\r\n\t\t\tdocument.body.removeChild(canvas);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pixel ratio for retina displays.\r\n\t *\r\n\t * @return Pixel ratio\r\n\t */\r\n\tprotected getPixelRatio(options?: IExportImageOptions): number {\r\n\t\t// const scale = options && options.scale ? options.scale : 1;\r\n\t\t// return (this.useRetina ? $utils.getPixelRatio() : 1) * scale;\r\n\t\treturn this.useRetina ? $utils.getPixelRatio() : 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates adjusted scale if image does not fit or is larger than min/max\r\n\t * settings.\r\n\t *\r\n\t * @param   width    Width of the source image\r\n\t * @param   height   Height of the source image\r\n\t * @param   scale    Current scale\r\n\t * @param   options  Options\r\n\t * @return           Adjusted scale\r\n\t */\r\n\tprotected getAdjustedScale(width: number, height: number, scale: number, options?: IExportImageOptions): number {\r\n\r\n\t\tif (!options) {\r\n\t\t\treturn scale;\r\n\t\t}\r\n\r\n\t\tlet adjWidth = width * scale;\r\n\t\tlet adjHeight = width * scale;\r\n\r\n\t\t// Check max restrictions\r\n\t\tlet widthScale;\r\n\t\tlet heightScale;\r\n\t\tif (options.maxWidth && (adjWidth > options.maxWidth)) {\r\n\t\t\twidthScale = options.maxWidth / width;\r\n\t\t}\r\n\t\tif (options.maxHeight && (adjHeight > options.maxHeight)) {\r\n\t\t\theightScale = options.maxHeight / height;\r\n\t\t}\r\n\t\tif (widthScale || heightScale) {\r\n\t\t\treturn $math.min(widthScale, heightScale)\r\n\t\t}\r\n\r\n\t\t// Check min restrictions\r\n\t\tif (options.minWidth && (adjWidth < options.minWidth)) {\r\n\t\t\twidthScale = options.minWidth / width;\r\n\t\t}\r\n\t\tif (options.minHeight && (adjHeight < options.minHeight)) {\r\n\t\t\theightScale = options.minHeight / height;\r\n\t\t}\r\n\t\tif (widthScale || heightScale) {\r\n\t\t\treturn $math.max(widthScale, heightScale)\r\n\t\t}\r\n\r\n\t\treturn scale;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts all `<image>` tags in SVG to use data uris instead of external\r\n\t * URLs\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param el       SVG node\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t */\r\n\tpublic async imagesToDataURI(el: SVGSVGElement, options?: IExportImageOptions): Promise<void> {\r\n\r\n\t\t// Get and process all images\r\n\t\tlet images = el.querySelectorAll(\"image\");\r\n\t\tif (images.length) {\r\n\r\n\t\t\t// Init promises\r\n\t\t\tlet promises = [];\r\n\r\n\t\t\t// There are images, process each of them\r\n\t\t\tfor (let count = images.length, i = 0; i < count; i++) {\r\n\r\n\t\t\t\t// Get image and its href\r\n\t\t\t\tlet image = images[i];\r\n\t\t\t\tlet href = image.getAttributeNS(Export.XLINK, \"href\");\r\n\r\n\t\t\t\t// no href?\r\n\t\t\t\tif (!href) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (href.indexOf(\"data:image\") !== -1) {\r\n\t\t\t\t\t// Ignore image if it's already in Data URI format\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\t// SVG or bitmap image?\r\n\t\t\t\t\tif (href.indexOf(\".svg\") !== -1) {\r\n\t\t\t\t\t\tpromises.push(this.svgToDataURI(image, options));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tpromises.push(this.imageToDataURI(image, options));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tawait Promise.all(promises);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * `foreignObject` elements cannot be exported. This function hides them\r\n\t * temprarily. In the future it might try to convert them to SVG to make them\r\n\t * exportable.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param el       SVG node\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t */\r\n\tpublic async prepForeignObjects(el: SVGSVGElement, options?: IExportImageOptions): Promise<void> {\r\n\r\n\t\t// Get and process all foreign objects\r\n\t\tlet objects = el.querySelectorAll(\"foreignObject\");\r\n\t\tif (objects.length) {\r\n\r\n\t\t\t// There are foreign objects, process each of them\r\n\t\t\tfor (let count = objects.length, i = 0; i < count; i++) {\r\n\t\t\t\tthis.temporarilyRemoveObject(objects[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an SVG `<image>` to use its data uri for `href` instead of\r\n\t * external file.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param el       SVG element\r\n\t * @param options  Options\r\n\t */\r\n\tpublic async imageToDataURI(el: SVGImageElement, options?: IExportImageOptions): Promise<string> {\r\n\r\n\t\t// Create a new image and set its `crossOrigin`. This might not work on some\r\n\t\t// browsers. We'll deal with it if error occurs\r\n\t\tlet img: HTMLImageElement;\r\n\t\ttry {\r\n\r\n\t\t\t// Create image\r\n\t\t\timg = await this.loadNewImage(el.getAttributeNS(Export.XLINK, \"href\"), null, null, \"anonymous\");\r\n\r\n\t\t\t// Create new canvas\r\n\t\t\tlet canvas = document.createElement(\"canvas\");\r\n\t\t\tcanvas.width = img.width;\r\n\t\t\tcanvas.height = img.height;\r\n\r\n\t\t\t// Draw new image on it via `toDataURL`\r\n\t\t\tcanvas.getContext(\"2d\").drawImage(img, 0, 0);\r\n\r\n\t\t\t// Replace image `href` with data uri\r\n\t\t\t// If we got to this point it means image has loaded, however we might\r\n\t\t\t// still get an error with `toDataURL()`\r\n\t\t\ttry {\r\n\t\t\t\tlet uri = canvas.toDataURL();\r\n\t\t\t\tel.setAttribute(\"href\", uri);\r\n\t\t\t\treturn uri;\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\t// Give up and temporarily remove the element href temporarily\r\n\t\t\t\tif (options.keepTainted !== false) {\r\n\t\t\t\t\t/*this._removedObjects.push({\r\n\t\t\t\t\t\t\"element\": el,\r\n\t\t\t\t\t\t\"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tel.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n\t\t\t\t\tthis.temporarilyRemoveObject(el);\r\n\t\t\t\t}\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tcatch (e) {\r\n\r\n\t\t\t// Give up and temporarily remove the element's href\r\n\t\t\tif (!options || options.keepTainted !== false) {\r\n\t\t\t\t/*this._removedObjects.push({\r\n\t\t\t\t\t\"element\": el,\r\n\t\t\t\t\t\"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n\t\t\t\t});\r\n\t\t\t\tel.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n\t\t\t\tthis.temporarilyRemoveObject(el);\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `<image>` with external SVG source to data uri. Loads external SVG\r\n\t * file, then converts it to data uri and replaces the `xlink:href` parameter.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param el        An SVG element\r\n\t * @param options   Options\r\n\t */\r\n\tpublic async svgToDataURI(el: SVGImageElement, options?: IExportImageOptions): Promise<string> {\r\n\t\tlet href = el.getAttributeNS(Export.XLINK, \"href\");\r\n\t\ttry {\r\n\t\t\tlet data = await $net.load(href);\r\n\t\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\t\tcharset: \"base64\",\r\n\t\t\t\ttype: \"svg\",\r\n\t\t\t\toptions: options\r\n\t\t\t}).charset;\r\n\r\n\t\t\tlet uri = this.adapter.apply(\"svgToDataURI\", {\r\n\t\t\t\tdata: \"data:\" + this.getContentType(\"svg\") + \";\" + charset + \",\" + btoa(data.response),\r\n\t\t\t\toptions: options\r\n\t\t\t}).data;\r\n\r\n\t\t\tel.setAttributeNS(Export.XLINK, \"href\", uri);\r\n\t\t\treturn uri;\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\t// Disable temporarily\r\n\t\t\tif (!options || options.keepTainted !== false) {\r\n\t\t\t\t/*this._removedObjects.push({\r\n\t\t\t\t\t\"element\": el,\r\n\t\t\t\t\t\"originalHref\": href\r\n\t\t\t\t});\r\n\t\t\t\tel.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n\t\t\t\tthis.temporarilyRemoveObject(el);\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Temporarily removes element from DOM, and replaces it with a dummy\r\n\t * placeholder, as well as stores it for later restoration.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param el Node\r\n\t */\r\n\tpublic temporarilyRemoveObject(el: Node, placeholder?: SVGSVGElement): void {\r\n\r\n\t\t// Get parent\r\n\t\tlet parent = el.parentElement || el.parentNode;\r\n\r\n\t\t// Create a placeholder group element if it has not been passed in\r\n\t\tif (!placeholder) {\r\n\t\t\tplaceholder = this.sprite.paper.add(\"g\").node;\r\n\t\t}\r\n\t\tparent.insertBefore(placeholder, el);\r\n\r\n\t\t// Check if we have a textContents we can replace with\r\n\t\t// @todo Perhaps we should explore alternatives to creating text nodes\r\n\t\t// i.e. creating a text version of the HTML-based Text, just for export\r\n\t\t// purposes. Converting HTML into SVG is very complicated\r\n\t\tif (el.textContent) {\r\n\t\t\t/*let text = this.sprite.paper.add(\"text\").node;\r\n\t\t\ttext.textContent = el.textContent;\r\n\t\t\tplaceholder.appendChild(text);\r\n\r\n\t\t\t// Copy properties from the removing element to the placeholder\r\n\t\t\t$dom.copyAttributes(el, placeholder);*/\r\n\t\t}\r\n\r\n\t\t// Remove the old element\r\n\t\tparent.removeChild(el);\r\n\r\n\t\t// Log removed item\r\n\t\tthis._removedObjects.push({\r\n\t\t\t\"element\": el,\r\n\t\t\t\"placeholder\": placeholder\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Restores all (possibly tainted or unsupported) objects that were\r\n\t * temporarily removed when exporting.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic restoreRemovedObjects(): void {\r\n\t\tlet obj: IExportRemovedObject;\r\n\r\n\t\twhile (true) {\r\n\t\t\tobj = this._removedObjects.pop()\r\n\r\n\t\t\tif (!obj) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t//obj.element.setAttribute(\"href\", obj.originalHref);\r\n\t\t\tlet parent = obj.placeholder.parentElement || obj.placeholder.parentNode;\r\n\t\t\tparent.insertBefore(obj.element, obj.placeholder);\r\n\t\t\t//parent.removeChild(obj.placeholder);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checkes if simplified export can be used using `createObjectURL` and SVG\r\n\t * document does not contain any external images.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return `true` if simplified export can be used\r\n\t */\r\n\tpublic async simplifiedImageExport(): Promise<boolean> {\r\n\r\n\t\tif (this.useSimplifiedExport === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Do we have this cached?\r\n\t\tlet cache = registry.getCache(\"simplifiedImageExport\");\r\n\t\tif (cache === false || cache === true) {\r\n\t\t\treturn cache;\r\n\t\t}\r\n\r\n\t\t// Try generating a small SVG-embedded canvas\r\n\t\t// If exception occurs, simplified method is not supported\r\n\t\ttry {\r\n\t\t\tlet canvas = document.createElement(\"canvas\");\r\n\t\t\tcanvas.width = 1;\r\n\t\t\tcanvas.height = 1;\r\n\t\t\tlet ctx = canvas.getContext(\"2d\");\r\n\t\t\tlet DOMURL = this.getDOMURL();\r\n\t\t\tlet svg = new Blob([this.normalizeSVG(\"<g></g>\", {}, 1, 1)], { type: \"image/svg+xml\" });\r\n\t\t\tlet url = DOMURL.createObjectURL(svg);\r\n\t\t\tlet img;\r\n\t\t\ttry {\r\n\t\t\t\timg = await this.loadNewImage(url, 1, 1);\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tctx.drawImage(img, 0, 0);\r\n\t\t\tDOMURL.revokeObjectURL(url);\r\n\t\t\ttry {\r\n\t\t\t\t//let uri = canvas.toDataURL(\"image/png\");\r\n\t\t\t\tregistry.setCache(\"simplifiedImageExport\", true);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\tregistry.setCache(\"simplifiedImageExport\", false);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t} catch (e) {\r\n\t\t\tregistry.setCache(\"simplifiedImageExport\", false);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new `<image>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param url          URL of the image\r\n\t * @param width        Width (px)\r\n\t * @param height       Height (px)\r\n\t * @param crossOrigin  Cross-Origin setting\r\n\t * @return Promise\r\n\t */\r\n\tpublic loadNewImage(url: string, width?: number, height?: number, crossOrigin?: string): Promise<HTMLImageElement> {\r\n\t\treturn new Promise((success, error) => {\r\n\r\n\t\t\t// New image\r\n\t\t\tlet image: HTMLImageElement;\r\n\t\t\tif (width && height) {\r\n\t\t\t\timage = new Image(width, height);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\timage = new Image();\r\n\t\t\t}\r\n\r\n\t\t\t// Set crossorigin\r\n\t\t\tif (crossOrigin) {\r\n\t\t\t\timage.setAttribute(\"crossOrigin\", crossOrigin);\r\n\t\t\t}\r\n\r\n\t\t\t// Report success on load\r\n\t\t\timage.onload = () => {\r\n\t\t\t\tsuccess(image);\r\n\t\t\t};\r\n\r\n\t\t\tfunction onerror() {\r\n\t\t\t\t// Error occurred. Just in case it's the crossOrigin issue, let's try\r\n\t\t\t\t// stripping off this attribute and trying again\r\n\t\t\t\tif (crossOrigin) {\r\n\r\n\t\t\t\t\t// Retain old uri\r\n\t\t\t\t\tlet currentHref = image.src;\r\n\r\n\t\t\t\t\t// Set up another `onerror` to handle situations where image is not\r\n\t\t\t\t\t// loadable at all (i.e. protected by CORS)\r\n\t\t\t\t\timage.onerror = () => {\r\n\t\t\t\t\t\t// Nope, no luck\r\n\t\t\t\t\t\terror(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// remove the `crossOrigin` attribute\r\n\t\t\t\t\timage.removeAttribute(\"crossorigin\");\r\n\r\n\t\t\t\t\t// retry\r\n\t\t\t\t\timage.src = \"\";\r\n\t\t\t\t\timage.src = currentHref;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terror(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set image error handlers\r\n\t\t\timage.onabort = onerror;\r\n\t\t\timage.onerror = onerror;\r\n\r\n\t\t\t// Trigger load\r\n\t\t\timage.src = url;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current DOM URL.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return URL\r\n\t */\r\n\tpublic getDOMURL(): any {\r\n\t\treturn self.URL || (<any>self).webkitURL || self;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an SVG representation of the chart.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param type       Type of the export\r\n\t * @param options    Options\r\n\t * @param encodeURI  If true, will return result will be data URI\r\n\t * @return Promise\r\n\t */\r\n\tpublic async getSVG(type: \"svg\", options?: IExportSVGOptions, encodeURI: boolean = true): Promise<string> {\r\n\r\n\t\tlet prehidden = this._objectsAlreadyHidden;\r\n\t\tif (!prehidden) {\r\n\t\t\tthis.hideNonExportableSprites();\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = this.getFormatOptions(\"svg\");\r\n\t\t}\r\n\r\n\t\t// Wait for required elements to be ready before proceeding\r\n\t\tawait this.awaitValidSprites();\r\n\r\n\t\t// Get dimensions\r\n\t\tlet width = this.sprite.pixelWidth;\r\n\t\tlet height = this.sprite.pixelHeight;\r\n\t\tlet font = $dom.findFont(this.sprite.dom);\r\n\t\tlet fontSize = $dom.findFontSize(this.sprite.dom);\r\n\t\tlet scale = options.scale || 1;\r\n\t\tlet pixelRatio = this.getPixelRatio(options);\r\n\r\n\t\t// Check if scale needs to be updated as per min/max dimensions\r\n\t\tscale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\r\n\r\n\t\t// Get SVG\r\n\t\tlet svg = this.normalizeSVG(\r\n\t\t\tthis.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom),\r\n\t\t\toptions,\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\tscale,\r\n\t\t\tfont,\r\n\t\t\tfontSize\r\n\t\t);\r\n\r\n\t\t// Prep data URI\r\n\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\tcharset: \"charset=utf-8\",\r\n\t\t\ttype: \"svg\",\r\n\t\t\toptions: options\r\n\t\t}).charset;\r\n\r\n\t\tlet uri = this.adapter.apply(\"getSVG\", {\r\n\t\t\tdata: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(svg) : svg,\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\tif (!prehidden) {\r\n\t\t\tthis.restoreNonExportableSprites();\r\n\t\t}\r\n\r\n\t\treturn uri;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if SVG is fully formatted. Encloses in `<svg>...</svg>` if\r\n\t * necessary.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param svg       Input SVG\r\n\t * @param options   Options\r\n\t * @param width     Width of the SVG viewport\r\n\t * @param height    Height of the SVG viewport\r\n\t * @param font      Font family to use as a base\r\n\t * @param fontSize  Font size to use as a base\r\n\t * @return Output SVG\r\n\t * @todo Add style params to existing <svg>\r\n\t */\r\n\tpublic normalizeSVG(svg: string, options?: IExportSVGOptions, width?: number, height?: number, scale?: number, font?: string, fontSize?: string, background?: Color): string {\r\n\r\n\t\t// Construct width/height params\r\n\t\tlet dimParams = \"\";\r\n\t\tif (width) {\r\n\t\t\tdimParams += \"width=\\\"\" + Math.round(width * (scale || 1)) + \"px\\\" \";\r\n\t\t}\r\n\t\tif (height) {\r\n\t\t\tdimParams += \"height=\\\"\" + Math.round(height * (scale || 1)) + \"px\\\" \";\r\n\t\t}\r\n\r\n\t\t// Apply font settings\r\n\t\tlet styleParams = \"\";\r\n\t\tif (font) {\r\n\t\t\tstyleParams += \"font-family: \" + font.replace(/\"/g, \"\") + \";\";\r\n\t\t}\r\n\t\tif (fontSize) {\r\n\t\t\tstyleParams += \"font-size: \" + fontSize + \";\";\r\n\t\t}\r\n\r\n\t\t// Scale\r\n\t\tif (scale) {\r\n\t\t\tdimParams += \"viewBox=\\\"0 0 \" + (width) + \" \" + (height) + \"\\\" \";\r\n\t\t}\r\n\r\n\t\t// Remove foreign objects temporarily\r\n\t\tlet fos: string[] = [];\r\n\t\tlet ms = svg.match(/<foreignObject[\\s\\S]*<\\/foreignObject>/gi);\r\n\t\tif (ms) {\r\n\t\t\tfor (let i = 0; i < ms.length; i++) {\r\n\t\t\t\tsvg = svg.replace(ms[i], $strings.PLACEHOLDER);\r\n\t\t\t\tfos.push(ms[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add missing <svg> enclosure\r\n\t\tif (!svg.match(/<svg/)) {\r\n\t\t\tsvg = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><svg \" + dimParams + \" style=\\\"\" + styleParams + \"\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\" + svg + \"</svg>\";\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tif (dimParams !== \"\") {\r\n\t\t\t\t// Clear current params\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)width=\"[^\"]*\"/, \"$1\");\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n\r\n\t\t\t\t// Add new params\r\n\t\t\t\tsvg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n\t\t\t}\r\n\r\n\t\t\t/*if (styleParams !== \"\") {\r\n\t\t\t\t// Clear current params\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)stylewidth=\"[^\"]*\"/, \"$1\");\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n\r\n\t\t\t\t// Add new params\r\n\t\t\t\tsvg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n\t\t\t}*/\r\n\t\t}\r\n\r\n\r\n\t\tif (background) {\r\n\t\t\tsvg = svg.replace(/(<svg[^>]*>)/, \"$1<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/>\");\r\n\t\t\t//svg = svg.replace(/<\\/svg>/, \"<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/></svg>\");\r\n\t\t}\r\n\r\n\t\tif ($browser.isInternetExplorer()) {\r\n\t\t\t// IE can't handle exporting <feColorMatrix> for some reason\r\n\t\t\tsvg = svg.replace(/<feColorMatrix [^\\/>]*\\/>/gi, \"\");\r\n\t\t}\r\n\r\n\t\t// Remove base uri-related stuff\r\n\t\tlet reg = new RegExp(\"url\\\\(\" + $utils.escapeForRgex($utils.getBaseURI()), \"g\");\r\n\t\tsvg = svg.replace(reg, \"url(#\");\r\n\r\n\t\t// Remove escaped quotes in url() parameters\r\n\t\tsvg = svg.replace(/url\\(&quot;([^)]*)&quot;\\)/gm, \"url($1)\");\r\n\r\n\t\t// Put foreignObjects back in\r\n\t\tif (fos.length) {\r\n\t\t\tfor (let i = 0; i < fos.length; i++) {\r\n\t\t\t\tsvg = svg.replace($strings.PLACEHOLDER, fos[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsvg = this.adapter.apply(\"normalizeSVG\", {\r\n\t\t\tdata: svg,\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn svg;\r\n\t}\r\n\r\n\t/**\r\n\t * Serializes an element and returns its contents.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param element  An element to serialize\r\n\t * @return A serialized XML\r\n\t */\r\n\tpublic serializeElement(element: HTMLElement | SVGSVGElement | SVGDefsElement): string {\r\n\t\treturn new XMLSerializer().serializeToString(element);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a PDF containing chart image.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param type     Type of the export\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t * @async\r\n\t * @todo Account for header when calculating vertical fit\r\n\t */\r\n\tpublic async getPDF(type: \"pdf\" | \"pdfdata\", options?: IExportPDFOptions): Promise<string> {\r\n\r\n\t\t// Get image\r\n\t\tlet image = await this.getImage(options.imageFormat || \"png\", options);\r\n\r\n\t\t// Load pdfmake\r\n\t\tlet pdfmake = await this.pdfmake;\r\n\r\n\t\t// Defaults\r\n\t\tlet defaultMargins = [30, 30, 30, 30];\r\n\r\n\t\t// Init content for PDF\r\n\t\tlet doc = {\r\n\t\t\tpageSize: options.pageSize || \"A4\",\r\n\t\t\tpageOrientation: options.pageOrientation || \"portrait\",\r\n\t\t\tpageMargins: options.pageMargins || defaultMargins,\r\n\t\t\tdefaultStyle: {\r\n\t\t\t\tfont: options.font ? options.font.name : undefined\r\n\t\t\t},\r\n\t\t\t//header: <any>[],\r\n\t\t\tcontent: <any>[]\r\n\t\t};\r\n\r\n\t\t// Should we add title?\r\n\t\tlet title = this.adapter.apply(\"title\", {\r\n\t\t\ttitle: this.title,\r\n\t\t\toptions: options\r\n\t\t}).title;\r\n\r\n\t\tlet extraMargin = 0;\r\n\r\n\t\tif (title) {\r\n\t\t\tdoc.content.push({\r\n\t\t\t\ttext: title,\r\n\t\t\t\tfontSize: options.fontSize || 14,\r\n\t\t\t\tbold: true,\r\n\t\t\t\tmargin: [0, 0, 0, 15]\r\n\t\t\t});\r\n\r\n\t\t\t// Add some leftover margin for title\r\n\t\t\textraMargin += 50;\r\n\t\t}\r\n\r\n\t\t// Add page URL?\r\n\t\tif (options.addURL) {\r\n\t\t\tdoc.content.push({\r\n\t\t\t\ttext: this.language.translate(\"Saved from\") + \": \" + document.location.href,\r\n\t\t\t\tfontSize: options.fontSize,\r\n\t\t\t\tmargin: [0, 0, 0, 15]\r\n\t\t\t});\r\n\r\n\t\t\t// Add some leftover margin for URL\r\n\t\t\textraMargin += 50;\r\n\t\t}\r\n\r\n\t\t// Add image\r\n\t\tif (type != \"pdfdata\") {\r\n\t\t\tdoc.content.push({\r\n\t\t\t\timage: image,\r\n\t\t\t\talignment: options.align || \"left\",\r\n\t\t\t\tfit: this.getPageSizeFit(doc.pageSize, doc.pageMargins, extraMargin)\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Add data\r\n\t\tif (type == \"pdfdata\" || options.addData) {\r\n\t\t\tdoc.content.push({\r\n\t\t\t\ttable: await this.getPDFData(\"pdf\", options),\r\n\t\t\t\tfontSize: options.fontSize || 14\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Apply adapters\r\n\t\tdoc = this.adapter.apply(\"pdfmakeDocument\", {\r\n\t\t\tdoc: doc,\r\n\t\t\toptions: options\r\n\t\t}).doc;\r\n\r\n\t\tlet fonts: { [name: string]: { [types: string]: string } } | null = null;\r\n\t\tlet vfs: { [path: string]: string } | null = null;\r\n\r\n\t\tfunction addFont(font: IFont) {\r\n\t\t\tconst paths: { [path: string]: string } = {};\r\n\r\n\t\t\tpaths.normal = font.normal.path;\r\n\t\t\tvfs[font.normal.path] = font.normal.bytes;\r\n\r\n\t\t\tif (font.bold) {\r\n\t\t\t\tpaths.bold = font.bold.path;\r\n\t\t\t\tvfs[font.bold.path] = font.bold.bytes;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tpaths.bold = font.normal.path;\r\n\t\t\t}\r\n\r\n\t\t\tif (font.italics) {\r\n\t\t\t\tpaths.italics = font.italics.path;\r\n\t\t\t\tvfs[font.italics.path] = font.italics.bytes;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tpaths.italics = font.normal.path;\r\n\t\t\t}\r\n\r\n\t\t\tif (font.bolditalics) {\r\n\t\t\t\tpaths.bolditalics = font.bolditalics.path;\r\n\t\t\t\tvfs[font.bolditalics.path] = font.bolditalics.bytes;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tpaths.bolditalics = font.normal.path;\r\n\t\t\t}\r\n\r\n\t\t\tfonts[font.name] = paths;\r\n\t\t}\r\n\r\n\t\tif (options.font) {\r\n\t\t\tfonts = {};\r\n\t\t\tvfs = {};\r\n\t\t\taddFont(options.font);\r\n\r\n\t\t\tif (options.extraFonts) {\r\n\t\t\t\t$array.each(options.extraFonts, addFont);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Create PDF\r\n\t\treturn await new Promise<string>((success, error) => {\r\n\t\t\tpdfmake.createPdf(doc, null, fonts, vfs).getDataUrl((uri: string) => {\r\n\t\t\t\tsuccess(uri);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns chart's data formatted suitable for PDF export (pdfmake).\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @since 4.7.0\r\n\t * @param type     Type of the export\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getPDFData(type: \"pdf\", options?: IExportPDFOptions): Promise<any> {\r\n\r\n\t\t// Init output\r\n\t\tlet content = <any>{\r\n\t\t\t\"body\": <any>[]\r\n\t\t};\r\n\r\n\t\t// Data fields\r\n\t\tconst dataFields = this.adapter.apply(\"formatDataFields\", {\r\n\t\t\tdataFields: this.dataFields,\r\n\t\t\tformat: \"pdf\"\r\n\t\t}).dataFields;\r\n\r\n\t\t// Add rows\r\n\t\tconst data = this.data;\r\n\r\n\t\t// Vertical or horizontal (default) layout\r\n\t\tif (options.pivot) {\r\n\r\n\t\t\t// Data fields order\r\n\t\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\t\tformat: \"pdfdata\"\r\n\t\t\t}).dataFieldsOrder;\r\n\r\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\r\n\t\t\t\tlet dataRow = [];\r\n\t\t\t\tif (options.addColumnNames) {\r\n\t\t\t\t\tdataRow.push(val);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\r\n\t\t\t\t\tlet dataValue = data[i][key];\r\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat<\"pdf\">(key, dataValue, options, true));\r\n\t\t\t\t}\r\n\t\t\t\tcontent.body.push(this.getPDFDataRow(dataRow, options, undefined, true));\r\n\t\t\t}, (a, b) => {\r\n\t\t\t\t//console.log(a, b)\r\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\t\tif (ai > bi) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (ai < bi) {\r\n\t\t\t\t\treturn -1\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\telse {\r\n\r\n\t\t\t// Add column names?\r\n\t\t\tif (options.addColumnNames) {\r\n\t\t\t\tcontent.body.push(this.getPDFDataRow(dataFields, options, undefined, true));\r\n\t\t\t\tcontent.headerRows = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\r\n\t\t\t\tcontent.body.push(this.getPDFDataRow(data[i], options, dataFields));\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"pdfmakeTable\", {\r\n\t\t\ttable: content,\r\n\t\t\toptions: options\r\n\t\t}).table;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Formats a row of data for use in PDF data table (pdfmake).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @since 4.7.0\r\n\t * @param  row         An object holding data for the row\r\n\t * @param  options     Options\r\n\t * @param  dataFields  Data fields\r\n\t * @param  asIs        Do not try to convert to dates\r\n\t * @return Formated Data line\r\n\t */\r\n\tpublic getPDFDataRow(row: any, options?: IExportPDFOptions, dataFields?: any, asIs: boolean = false): Array<string> {\r\n\r\n\t\t// Init\r\n\t\tlet items: any[] = [];\r\n\r\n\t\t// Data fields\r\n\t\tif (!dataFields) {\r\n\t\t\tdataFields = row;\r\n\t\t}\r\n\r\n\t\t// Data fields order\r\n\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\tformat: \"pdfdata\"\r\n\t\t}).dataFieldsOrder;\r\n\r\n\t\t// Process each row item\r\n\t\t$object.eachOrdered(dataFields, (key, name) => {\r\n\r\n\t\t\t// Get value\r\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\r\n\r\n\t\t\t// Convert dates\r\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat<\"csv\">(key, value, options);\r\n\t\t\titem = \"\" + item;\r\n\r\n\t\t\t// Add to item\r\n\t\t\titems.push(item);\r\n\t\t}, (a, b) => {\r\n\t\t\t//console.log(a, b)\r\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\tif (ai > bi) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\telse if (ai < bi) {\r\n\t\t\t\treturn -1\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns fit dimensions for available page sizes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param pageSize Page size\r\n\t * @return `[width, height]` in pixels\r\n\t */\r\n\tpublic getPageSizeFit(pageSize: pageSizes, margins?: number | number[], extraMargin: number = 0): number[] {\r\n\r\n\t\t// Check margins\r\n\t\tlet newMargins = [0, 0, 0, 0];\r\n\t\tif (typeof margins == \"number\") {\r\n\t\t\tnewMargins = [margins, margins, margins, margins];\r\n\t\t}\r\n\t\telse if (margins.length == 2) {\r\n\t\t\tnewMargins = [margins[0], margins[1], margins[0], margins[1]];\r\n\t\t}\r\n\t\telse if (margins.length == 4) {\r\n\t\t\tnewMargins = margins;\r\n\t\t}\r\n\r\n\t\t// Define available page sizes\r\n\t\tlet sizes = {\r\n\t\t\t\"4A0\": [4767.87, 6740.79],\r\n\t\t\t\"2A0\": [3370.39, 4767.87],\r\n\t\t\tA0: [2383.94, 3370.39],\r\n\t\t\tA1: [1683.78, 2383.94],\r\n\t\t\tA2: [1190.55, 1683.78],\r\n\t\t\tA3: [841.89, 1190.55],\r\n\t\t\tA4: [595.28, 841.89],\r\n\t\t\tA5: [419.53, 595.28],\r\n\t\t\tA6: [297.64, 419.53],\r\n\t\t\tA7: [209.76, 297.64],\r\n\t\t\tA8: [147.40, 209.76],\r\n\t\t\tA9: [104.88, 147.40],\r\n\t\t\tA10: [73.70, 104.88],\r\n\t\t\tB0: [2834.65, 4008.19],\r\n\t\t\tB1: [2004.09, 2834.65],\r\n\t\t\tB2: [1417.32, 2004.09],\r\n\t\t\tB3: [1000.63, 1417.32],\r\n\t\t\tB4: [708.66, 1000.63],\r\n\t\t\tB5: [498.90, 708.66],\r\n\t\t\tB6: [354.33, 498.90],\r\n\t\t\tB7: [249.45, 354.33],\r\n\t\t\tB8: [175.75, 249.45],\r\n\t\t\tB9: [124.72, 175.75],\r\n\t\t\tB10: [87.87, 124.72],\r\n\t\t\tC0: [2599.37, 3676.54],\r\n\t\t\tC1: [1836.85, 2599.37],\r\n\t\t\tC2: [1298.27, 1836.85],\r\n\t\t\tC3: [918.43, 1298.27],\r\n\t\t\tC4: [649.13, 918.43],\r\n\t\t\tC5: [459.21, 649.13],\r\n\t\t\tC6: [323.15, 459.21],\r\n\t\t\tC7: [229.61, 323.15],\r\n\t\t\tC8: [161.57, 229.61],\r\n\t\t\tC9: [113.39, 161.57],\r\n\t\t\tC10: [79.37, 113.39],\r\n\t\t\tRA0: [2437.80, 3458.27],\r\n\t\t\tRA1: [1729.13, 2437.80],\r\n\t\t\tRA2: [1218.90, 1729.13],\r\n\t\t\tRA3: [864.57, 1218.90],\r\n\t\t\tRA4: [609.45, 864.57],\r\n\t\t\tSRA0: [2551.18, 3628.35],\r\n\t\t\tSRA1: [1814.17, 2551.18],\r\n\t\t\tSRA2: [1275.59, 1814.17],\r\n\t\t\tSRA3: [907.09, 1275.59],\r\n\t\t\tSRA4: [637.80, 907.09],\r\n\t\t\tEXECUTIVE: [521.86, 756.00],\r\n\t\t\tFOLIO: [612.00, 936.00],\r\n\t\t\tLEGAL: [612.00, 1008.00],\r\n\t\t\tLETTER: [612.00, 792.00],\r\n\t\t\tTABLOID: [792.00, 1224.00]\r\n\t\t};\r\n\r\n\t\t// Calculate size\r\n\t\tlet fitSize = sizes[pageSize]\r\n\t\tfitSize[0] -= newMargins[0] + newMargins[2];\r\n\t\tfitSize[1] -= newMargins[1] + newMargins[3] + extraMargin;\r\n\t\treturn fitSize;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an Excel file of chart's data.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param type     Type of the export\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t * @async\r\n\t * @todo Handle dates\r\n\t * @todo Support for multi-sheet\r\n\t */\r\n\tpublic async getExcel(type: \"xlsx\", options?: IExportExcelOptions): Promise<string> {\r\n\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = this.getFormatOptions(\"xlsx\");\r\n\t\t}\r\n\r\n\t\t// Load xlsx\r\n\t\tlet XLSX = await this.xlsx;\r\n\r\n\t\t// Create workbook options\r\n\t\tlet wbOptions = this.adapter.apply(\"xlsxWorkbookOptions\", {\r\n\t\t\txlsx: XLSX,\r\n\t\t\toptions: {\r\n\t\t\t\tbookType: \"xlsx\",\r\n\t\t\t\tbookSST: false,\r\n\t\t\t\ttype: \"base64\",\r\n\t\t\t\t//dateNF: 'yyyy-mm-dd'\r\n\t\t\t}\r\n\t\t}).options;\r\n\r\n\t\t// Get sheet name\r\n\t\tlet sheetName = this.normalizeExcelSheetName(this.adapter.apply(\"xlsxSheetName\", {\r\n\t\t\txlsx: XLSX,\r\n\t\t\tname: this.title || this.language.translate(\"Data\")\r\n\t\t}).name);\r\n\r\n\t\t// Create a workbook\r\n\t\tlet wb = {\r\n\t\t\tSheetNames: <any>[sheetName],\r\n\t\t\tSheets: <any>{}\r\n\t\t};\r\n\r\n\t\t// Init worksheet data\r\n\t\tlet data: Array<any> = [];\r\n\r\n\t\t// Data fields\r\n\t\tconst dataFields = this.adapter.apply(\"formatDataFields\", {\r\n\t\t\tdataFields: this.dataFields,\r\n\t\t\tformat: \"xslx\"\r\n\t\t}).dataFields;\r\n\r\n\t\t// Vertical or horizontal (default) layout\r\n\t\tif (options.pivot) {\r\n\r\n\t\t\t// Data fields order\r\n\t\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\t\tformat: \"xlsx\"\r\n\t\t\t}).dataFieldsOrder;\r\n\r\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\r\n\t\t\t\tlet dataRow = [];\r\n\t\t\t\tif (options.addColumnNames) {\r\n\t\t\t\t\tdataRow.push(val);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let len = this.data.length, i = 0; i < len; i++) {\r\n\t\t\t\t\tlet dataValue = this.data[i][key];\r\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat<\"xlsx\">(key, dataValue, options, true));\r\n\t\t\t\t}\r\n\t\t\t\tdata.push(this.getExcelRow(dataRow, options, undefined, true));\r\n\t\t\t}, (a, b) => {\r\n\t\t\t\t//console.log(a, b)\r\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\t\tif (ai > bi) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (ai < bi) {\r\n\t\t\t\t\treturn -1\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\t// Add column names?\r\n\t\t\tif (options.addColumnNames) {\r\n\t\t\t\tdata.push(this.getExcelRow(dataFields, options, undefined, true));\r\n\t\t\t}\r\n\r\n\t\t\t// Add lines\r\n\t\t\tfor (let len = this.data.length, i = 0; i < len; i++) {\r\n\t\t\t\tdata.push(this.getExcelRow(this.data[i], options, dataFields));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Create sheet and add data\r\n\t\twb.Sheets[sheetName] = XLSX.utils.aoa_to_sheet(data);\r\n\r\n\t\t// Apply adapters\r\n\t\twb = this.adapter.apply(\"xlsxWorkbook\", {\r\n\t\t\txlsx: XLSX,\r\n\t\t\tworkbook: wb,\r\n\t\t\toptions: options\r\n\t\t}).workbook;\r\n\r\n\t\t// Generate data uri\r\n\t\tlet uri = this.adapter.apply(\"getExcel\", {\r\n\t\t\tdata: \"data:\" + this.getContentType(type) + \";base64,\" + XLSX.write(wb, wbOptions),\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\t}\r\n\r\n\t/**\r\n\t * This is needed to work around Excel limitations.\r\n\t *\r\n\t * @param name  Source name\r\n\t * @return Normalized name\r\n\t */\r\n\tprivate normalizeExcelSheetName(name: string): string {\r\n\t\tname = name.replace(/([:\\\\\\/?*\\[\\]]+)/g, \" \");\r\n\t\treturn $utils.truncateWithEllipsis(name, 31, \"...\", true);\r\n\t}\r\n\r\n\t/**\r\n\t * Rertuns an array of values to be used as Excel row.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  row         Row data\r\n\t * @param  options     Options\r\n\t * @param  dataFields  Data fields\r\n\t * @param  asIs        Do not try to convert to dates\r\n\t * @return Array of values\r\n\t */\r\n\tpublic getExcelRow(row: any, options?: IExportExcelOptions, dataFields?: any, asIs: boolean = false): any[] {\r\n\r\n\t\t// Init\r\n\t\tlet items: any[] = [];\r\n\r\n\t\t// Data fields\r\n\t\tif (!dataFields) {\r\n\t\t\tdataFields = row;\r\n\t\t}\r\n\r\n\t\t// Data fields order\r\n\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\tformat: \"xlsx\"\r\n\t\t}).dataFieldsOrder;\r\n\r\n\t\t// Process each row item\r\n\t\t$object.eachOrdered(dataFields, (key, name) => {\r\n\r\n\t\t\t// Get value\r\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\r\n\r\n\t\t\t// Convert dates\r\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat<\"xlsx\">(key, value, options, true);\r\n\r\n\t\t\titems.push(item);\r\n\t\t}, (a, b) => {\r\n\t\t\t//console.log(a, b)\r\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\tif (ai > bi) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\telse if (ai < bi) {\r\n\t\t\t\treturn -1\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns chart's data formatted as CSV.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param type       Type of the export\r\n\t * @param options    Options\r\n\t * @param encodeURI  If true, will return result will be data URI\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getCSV(type: \"csv\", options?: IExportCSVOptions, encodeURI: boolean = true): Promise<string> {\r\n\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = this.getFormatOptions(\"csv\");\r\n\t\t}\r\n\r\n\t\t// Init output\r\n\t\tlet csv = \"\";\r\n\r\n\t\t// Data fields\r\n\t\tconst dataFields = this.adapter.apply(\"formatDataFields\", {\r\n\t\t\tdataFields: this.dataFields,\r\n\t\t\tformat: \"csv\"\r\n\t\t}).dataFields;\r\n\r\n\t\t// Add rows\r\n\t\tlet br = \"\";\r\n\t\tconst data = this.data;\r\n\r\n\t\t// Vertical or horizontal (default) layout\r\n\t\tif (options.pivot) {\r\n\r\n\t\t\t// Data fields order\r\n\t\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\t\tformat: \"csv\"\r\n\t\t\t}).dataFieldsOrder;\r\n\r\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\r\n\t\t\t\tlet dataRow = [];\r\n\t\t\t\tif (options.addColumnNames) {\r\n\t\t\t\t\tdataRow.push(val);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\r\n\t\t\t\t\tlet dataValue = data[i][key];\r\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat<\"csv\">(key, dataValue, options, true));\r\n\t\t\t\t}\r\n\t\t\t\tcsv += br + this.getCSVRow(dataRow, options, undefined, true);\r\n\t\t\t\tbr = \"\\n\";\r\n\t\t\t}, (a, b) => {\r\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\t\tif (ai > bi) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (ai < bi) {\r\n\t\t\t\t\treturn 1\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\r\n\t\t\t\tlet row = this.getCSVRow(data[i], options, dataFields);\r\n\t\t\t\tif (options.reverse) {\r\n\t\t\t\t\tcsv = row + br + csv;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcsv += br + row;\r\n\t\t\t\t}\r\n\t\t\t\tbr = \"\\n\";\r\n\t\t\t}\r\n\r\n\t\t\t// Add column names?\r\n\t\t\tif (options.addColumnNames) {\r\n\t\t\t\tcsv = this.getCSVRow(dataFields, options, undefined, true) + br + csv;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add content type\r\n\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\tcharset: \"charset=utf-8\",\r\n\t\t\ttype: type,\r\n\t\t\toptions: options\r\n\t\t}).charset;\r\n\r\n\t\tlet uri = this.adapter.apply(\"getCSV\", {\r\n\t\t\tdata: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(csv) : csv,\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Formats a row of CSV data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  row         An object holding data for the row\r\n\t * @param  options     Options\r\n\t * @param  dataFields  Data fields\r\n\t * @param  asIs        Do not try to convert to dates\r\n\t * @return Formated CSV line\r\n\t */\r\n\tpublic getCSVRow(row: any, options?: IExportCSVOptions, dataFields?: any, asIs: boolean = false): string {\r\n\r\n\t\t// Init\r\n\t\tlet separator = options.separator || \",\";\r\n\t\tlet items: any[] = [];\r\n\r\n\t\t// Data fields\r\n\t\tif (!dataFields) {\r\n\t\t\tdataFields = row;\r\n\t\t}\r\n\r\n\t\t// Data fields order\r\n\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\tformat: \"csv\"\r\n\t\t}).dataFieldsOrder;\r\n\r\n\t\t// Process each row item\r\n\t\t$object.eachOrdered(dataFields, (key, name) => {\r\n\r\n\t\t\t// Get value\r\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\r\n\r\n\t\t\t// Check if we need to skip\r\n\t\t\t// This is no longer required because we are iterating via dataFields anyway\r\n\t\t\t/*if ($type.hasValue(this.dataFields) && !$type.hasValue(this.dataFields[key])) {\r\n\t\t\t\treturn;\r\n\t\t\t}*/\r\n\r\n\t\t\t// Convert dates\r\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat<\"csv\">(key, value, options);\r\n\r\n\t\t\t// Cast and escape doublequotes\r\n\t\t\titem = \"\" + item;\r\n\t\t\titem = item.replace(/\"/g, '\"\"');\r\n\r\n\t\t\t// Enclose into double quotes\r\n\t\t\tif (options.forceQuotes || (item.search(new RegExp(\"\\\"|\\n|\" + separator, \"g\")) >= 0)) {\r\n\t\t\t\titem = \"\\\"\" + item + \"\\\"\";\r\n\t\t\t}\r\n\r\n\t\t\t// Add to item\r\n\t\t\titems.push(item);\r\n\t\t}, (a, b) => {\r\n\t\t\t//console.log(a, b)\r\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\tif (ai > bi) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\telse if (ai < bi) {\r\n\t\t\t\treturn -1\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\treturn items.join(separator);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns chart's data formatted as HTML table.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @since 4.7.0\r\n\t * @param type       Type of the export\r\n\t * @param options    Options\r\n\t * @param encodeURI  If true, will return result will be data URI\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getHTML(type: \"html\", options?: IExportHTMLOptions, encodeURI: boolean = true): Promise<string> {\r\n\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = this.getFormatOptions(\"html\");\r\n\t\t}\r\n\r\n\t\t// Init output\r\n\t\tlet html = \"<table>\";\r\n\t\tif (options.tableClass) {\r\n\t\t\thtml = \"<table class=\\\"\" + options.tableClass + \"\\\">\";\r\n\t\t}\r\n\r\n\t\t// Data fields\r\n\t\tconst dataFields = this.adapter.apply(\"formatDataFields\", {\r\n\t\t\tdataFields: this.dataFields,\r\n\t\t\tformat: \"html\"\r\n\t\t}).dataFields;\r\n\r\n\t\t// Add rows\r\n\t\tconst data = this.data;\r\n\r\n\t\t// Vertical or horizontal (default) layout\r\n\t\tif (options.pivot) {\r\n\r\n\t\t\t// Data fields order\r\n\t\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\t\tformat: \"html\"\r\n\t\t\t}).dataFieldsOrder;\r\n\r\n\t\t\thtml += \"\\n<tbody>\";\r\n\r\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\r\n\t\t\t\tlet dataRow = [];\r\n\t\t\t\tif (options.addColumnNames) {\r\n\t\t\t\t\tdataRow.push(val);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\r\n\t\t\t\t\tlet dataValue = data[i][key];\r\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat<\"html\">(key, dataValue, options, true));\r\n\t\t\t\t}\r\n\t\t\t\thtml += \"\\n\" + this.getHTMLRow(dataRow, options, undefined, true);\r\n\t\t\t}, (a, b) => {\r\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\t\tif (ai > bi) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (ai < bi) {\r\n\t\t\t\t\treturn 1\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\r\n\t\t\thtml += \"\\n</tbody>\";\r\n\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\t// Add column names?\r\n\t\t\tif (options.addColumnNames) {\r\n\t\t\t\thtml += \"\\n<thead>\\n\" + this.getHTMLRow(dataFields, options, undefined, true, true) + \"\\n</thead>\";\r\n\t\t\t}\r\n\r\n\t\t\thtml += \"\\n<tbody>\";\r\n\r\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\r\n\t\t\t\thtml += \"\\n\" + this.getHTMLRow(data[i], options, dataFields);\r\n\t\t\t}\r\n\r\n\t\t\thtml += \"\\n</tbody>\";\r\n\t\t}\r\n\r\n\t\thtml += \"\\n</table>\";\r\n\r\n\t\t// Add content type\r\n\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\tcharset: \"charset=utf-8\",\r\n\t\t\ttype: type,\r\n\t\t\toptions: options\r\n\t\t}).charset;\r\n\r\n\t\tlet uri = this.adapter.apply(\"getHTML\", {\r\n\t\t\tdata: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(html) : html,\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Formats a row of HTML data.\r\n\t *\r\n\t * @since 4.7.0\r\n\t * @ignore Exclude from docs\r\n\t * @param  row         An object holding data for the row\r\n\t * @param  options     Options\r\n\t * @param  dataFields  Data fields\r\n\t * @param  asIs        Do not try to convert to dates\r\n\t * @return Formated HTML row\r\n\t */\r\n\tpublic getHTMLRow(row: any, options?: IExportHTMLOptions, dataFields?: any, asIs: boolean = false, headerRow: boolean = false): string {\r\n\r\n\t\t// Init output\r\n\t\tlet html = \"\\t<tr>\";\r\n\t\tif (options.rowClass) {\r\n\t\t\thtml = \"\\t<tr class=\\\"\" + options.rowClass + \"\\\">\";\r\n\t\t}\r\n\r\n\t\t// Data fields\r\n\t\tif (!dataFields) {\r\n\t\t\tdataFields = row;\r\n\t\t}\r\n\r\n\t\t// Data fields order\r\n\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\tformat: \"html\"\r\n\t\t}).dataFieldsOrder;\r\n\r\n\t\t// th or dh?\r\n\t\tconst tag = headerRow ? \"th\" : \"td\";\r\n\r\n\t\t// Process each row item\r\n\t\tlet first = true;\r\n\t\t$object.eachOrdered(dataFields, (key, name) => {\r\n\r\n\t\t\t// Get value\r\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\r\n\r\n\t\t\t// Convert dates\r\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat<\"html\">(key, value, options);\r\n\r\n\t\t\t// Escape HTML entities\r\n\t\t\titem = \"\" + item;\r\n\t\t\titem = item.replace(/[\\u00A0-\\u9999<>\\&]/gim, function(i: string) {\r\n\t\t\t\treturn \"&#\" + i.charCodeAt(0) + \";\";\r\n\t\t\t});\r\n\r\n\t\t\t// Which tag to use\r\n\t\t\tlet useTag = tag;\r\n\t\t\tif (options.pivot && first) {\r\n\t\t\t\tuseTag = \"th\";\r\n\t\t\t}\r\n\r\n\t\t\t// Add cell\r\n\t\t\tif (options.cellClass) {\r\n\t\t\t\thtml += \"\\n\\t\\t<\" + useTag + \" class=\\\"\" + options.cellClass + \"\\\">\" + item + \"</\" + useTag + \">\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thtml += \"\\n\\t\\t<\" + useTag + \">\" + item + \"</\" + useTag + \">\";\r\n\t\t\t}\r\n\r\n\t\t\tfirst = false;\r\n\t\t}, (a, b) => {\r\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\tif (ai > bi) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\telse if (ai < bi) {\r\n\t\t\t\treturn -1\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\thtml += \"\\n\\t</tr>\";\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns chart's data in JSON format.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param type       Type of the export\r\n\t * @param options    Options\r\n\t * @param encodeURI  If true, will return result will be data URI\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getJSON(type: \"json\", options?: IExportJSONOptions, encodeURI: boolean = true): Promise<string> {\r\n\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = this.getFormatOptions(\"json\");\r\n\t\t}\r\n\r\n\t\t// Check if we need to regenerate data based on `dataFields`\r\n\t\tlet data: any[];\r\n\t\tconst dataFields = this.adapter.apply(\"formatDataFields\", {\r\n\t\t\tdataFields: this.dataFields,\r\n\t\t\tformat: \"json\"\r\n\t\t}).dataFields;\r\n\t\tif (!this._dynamicDataFields) {\r\n\t\t\tdata = [];\r\n\t\t\tconst sourceData = this.data;\r\n\t\t\tfor (let len = sourceData.length, i = 0; i < len; i++) {\r\n\t\t\t\tlet value = sourceData[i];\r\n\t\t\t\tif (typeof value == \"object\") {\r\n\t\t\t\t\tlet newValue: any = {};\r\n\t\t\t\t\t$object.each(value, (field, item) => {\r\n\t\t\t\t\t\tif ($type.hasValue(dataFields[field])) {\r\n\t\t\t\t\t\t\tnewValue[dataFields[field]] = this.convertToSpecialFormat<\"json\">(field, item, options);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdata.push(newValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdata = this.data;\r\n\t\t}\r\n\r\n\t\t// Stringify JSON\r\n\t\tlet json = JSON.stringify(data, (key, value) => {\r\n\t\t\tif (typeof value == \"object\") {\r\n\t\t\t\t$object.each(value, (field, item) => {\r\n\t\t\t\t\tvalue[field] = this.convertToSpecialFormat<\"json\">(field, item, options);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t}, options.indent);\r\n\r\n\t\t// Add content type\r\n\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\tcharset: \"charset=utf-8\",\r\n\t\t\ttype: type,\r\n\t\t\toptions: options\r\n\t\t}).charset;\r\n\r\n\t\tlet uri = this.adapter.apply(\"getJSON\", {\r\n\t\t\tdata: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(json) : json,\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the value to proper date format.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  field         Field name\r\n\t * @param  value         Value\r\n\t * @param  options       Options\r\n\t * @param  keepOriginal  Will ignore formatting and will keep value as it is in data\r\n\t * @return Formatted date value or unmodified value\r\n\t */\r\n\tpublic convertToSpecialFormat<Key extends \"json\" | \"csv\" | \"xlsx\" | \"html\" | \"pdf\">(field: string, value: any, options?: IExportOptions[Key], keepOriginal?: boolean): any {\r\n\r\n\t\t// Is this a timestamp or duration?\r\n\t\tif (typeof value == \"number\") {\r\n\t\t\tif (this.isDateField(field)) {\r\n\t\t\t\tvalue = new Date(value);\r\n\t\t\t}\r\n\t\t\telse if (this.isDurationField(field)) {\r\n\t\t\t\treturn this.durationFormatter.format(value, this.durationFormat);\r\n\t\t\t}\r\n\t\t\telse if (this.isNumberField(field) && this.numberFormat) {\r\n\t\t\t\treturn this.numberFormatter.format(value, this.numberFormat);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (value instanceof Date) {\r\n\t\t\tif (options.useTimestamps) {\r\n\t\t\t\tvalue = value.getTime();\r\n\t\t\t}\r\n\t\t\telse if (options.useLocale) {\r\n\t\t\t\tif (!keepOriginal) {\r\n\t\t\t\t\tvalue = value.toLocaleString();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = this.dateFormatter.format(value, this.dateFormat);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($type.isString(value) && this.isDateField(field) && this.dateFormat) {\r\n\t\t\tvalue = this.dateFormatter.format(this.dateFormatter.parse(value), this.dateFormat);\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts empty value based on `emptyAs` option.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic convertEmptyValue<Key extends \"csv\" | \"xlsx\">(field: string, value: any, options?: IExportOptions[Key]): any {\r\n\t\treturn $type.hasValue(value) ? value : options.emptyAs;\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers download of the file.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param uri       Data URI with file content\r\n\t * @param fileName  File name\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async download(uri: string, fileName: string, addBOM: boolean = false): Promise<boolean> {\r\n\r\n\t\tif (this.msBlobDownloadSupport()) {\r\n\r\n\t\t\t/**\r\n\t\t\t * For all IEs 10 and up we use native method `msSaveBlob`\r\n\t\t\t */\r\n\r\n\t\t\t// Extract content type and get pure data without headers\r\n\t\t\tlet parts = uri.split(\";\");\r\n\t\t\tlet contentType = parts.shift().replace(/data:/, \"\");\r\n\t\t\turi = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\r\n\r\n\r\n\t\t\t// Check if we need to Base64-decode\r\n\t\t\tif ([\"image/svg+xml\", \"application/json\", \"text/csv\"].indexOf(contentType) == -1) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet decoded = atob(uri);\r\n\t\t\t\t\turi = decoded;\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t// Error occurred, meaning string was not Base64-encoded. Do nothing.\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet blob = new Blob([uri], { type: contentType });\r\n\t\t\t\twindow.navigator.msSaveBlob(blob, fileName);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Dissect uri into array\r\n\t\t\tlet chars = new Array(uri.length);\r\n\t\t\tfor (let i = 0; i < uri.length; ++i) {\r\n\t\t\t\tlet charCode = uri.charCodeAt(i);\r\n\t\t\t\tchars[i] = charCode;\r\n\t\t\t}\r\n\r\n\t\t\t// Prep Blob and force the download\r\n\t\t\tlet blob = new Blob([new Uint8Array(chars)], { type: contentType });\r\n\t\t\twindow.navigator.msSaveBlob(blob, fileName);\r\n\r\n\t\t}\r\n\r\n\t\telse if (this.blobDownloadSupport()) {\r\n\r\n\t\t\t/**\r\n\t\t\t * Supports Blob object.\r\n\t\t\t * Use it.\r\n\t\t\t */\r\n\t\t\tlet link = document.createElement(\"a\");\r\n\t\t\tlink.download = fileName;\r\n\t\t\tdocument.body.appendChild(link);\r\n\r\n\t\t\t// Extract content type and get pure data without headers\r\n\t\t\tlet parts = uri.split(\";\");\r\n\t\t\tlet contentType = parts.shift().replace(/data:/, \"\");\r\n\r\n\t\t\turi = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\r\n\r\n\t\t\tif ([\"image/svg+xml\", \"application/json\", \"text/csv\", \"text/html\"].indexOf(contentType) == -1) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet decoded = atob(uri);\r\n\t\t\t\t\turi = decoded;\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t// Error occurred, meaning string was not Base64-encoded. Do nothing.\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (addBOM) {\r\n\t\t\t\t\turi = \"\\ufeff\" + uri;\r\n\t\t\t\t}\r\n\t\t\t\tlet blob = new Blob([uri], { type: contentType });\r\n\t\t\t\tlet url = window.URL.createObjectURL(blob);\r\n\t\t\t\tlink.href = url;\r\n\t\t\t\tlink.download = fileName;\r\n\t\t\t\tlink.click();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tdocument.body.removeChild(link);\r\n\t\t\t\t\twindow.URL.revokeObjectURL(url);\r\n\t\t\t\t}, 100);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Dissect uri into array\r\n\t\t\tlet chars = new Array(uri.length);\r\n\t\t\tfor (let i = 0; i < uri.length; ++i) {\r\n\t\t\t\tlet charCode = uri.charCodeAt(i);\r\n\t\t\t\tchars[i] = charCode;\r\n\t\t\t}\r\n\r\n\t\t\tif (addBOM) {\r\n\t\t\t\tchars = [0xEF, 0xBB, 0xBF].concat(chars);\r\n\t\t\t}\r\n\t\t\tlet blob = new Blob([new Uint8Array(chars)], { type: contentType });\r\n\t\t\tlet url = window.URL.createObjectURL(blob);\r\n\t\t\tlink.href = url;\r\n\t\t\tlink.download = fileName;\r\n\t\t\tdocument.body.appendChild(link);\r\n\t\t\tlink.click();\r\n\t\t\tdocument.body.removeChild(link);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\twindow.URL.revokeObjectURL(url);\r\n\t\t\t}, 100);\r\n\r\n\t\t}\r\n\r\n\t\telse if (this.linkDownloadSupport()) {\r\n\r\n\t\t\t/**\r\n\t\t\t * For regular browsers, we create a link then simulate a click on it\r\n\t\t\t */\r\n\r\n\t\t\tlet link = document.createElement(\"a\");\r\n\t\t\tlink.download = fileName;\r\n\t\t\tlink.href = uri;\r\n\t\t\tdocument.body.appendChild(link);\r\n\t\t\tlink.click();\r\n\t\t\tdocument.body.removeChild(link);\r\n\r\n\t\t}\r\n\t\telse if (this.legacyIE()) {\r\n\r\n\t\t\t/**\r\n\t\t\t * Old IEs (9 and down) we will use an <iframe> trick\r\n\t\t\t */\r\n\r\n\t\t\tlet parts = uri.match(/^data:(.*);[ ]*([^,]*),(.*)$/);\r\n\r\n\t\t\tif (parts.length === 4) {\r\n\t\t\t\t// Base64-encoded or text-based stuff?\r\n\t\t\t\tif (parts[2] == \"base64\") {\r\n\r\n\t\t\t\t\t// Base64-encoded - probably an image\r\n\t\t\t\t\tif (parts[1].match(/^image\\//)) {\r\n\r\n\t\t\t\t\t\t// Yep, an image. Let's create a temporary image placeholder,\r\n\t\t\t\t\t\t// so that user can use do Save As.\r\n\t\t\t\t\t\tthis.showModal(\r\n\t\t\t\t\t\t\t\"<img src=\\\"\" + uri + \"\\\" style=\\\"float: left; max-width: 50%; max-height: 80%; margin: 0 1em 0.5em 0; border: 1px solid #eee;\\\" />\" +\r\n\t\t\t\t\t\t\t\"<p>\" + this.language.translate(\r\n\t\t\t\t\t\t\t\t\"To save the image, right-click thumbnail on the left and choose \\\"Save picture as...\\\"\"\r\n\t\t\t\t\t\t\t) +\r\n\t\t\t\t\t\t\t\"</p>\" +\r\n\t\t\t\t\t\t\t\"<p style=\\\"text-align: center;\\\"><small>\" + this.language.translate(\r\n\t\t\t\t\t\t\t\t\"(Press ESC to close this message)\"\r\n\t\t\t\t\t\t\t) + \"</small></p>\",\r\n\t\t\t\t\t\t\tthis.language.translate(\"Image Export Complete\")\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\t// Text-based\r\n\r\n\t\t\t\t\t// IE9 is trippy about saving files with filenames of the extensions it\r\n\t\t\t\t\t// does not know. Let's use .txt extension for all text-based export\r\n\t\t\t\t\t// formats, except SVG.\r\n\t\t\t\t\tlet contentType;\r\n\t\t\t\t\tif (fileName.match(/\\.svg$/)) {\r\n\t\t\t\t\t\tcontentType = \"image/svg+xml\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcontentType = \"text/plain\";\r\n\t\t\t\t\t\tfileName += \".txt\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Create temporary iframe\r\n\t\t\t\t\tlet iframe = document.createElement(\"iframe\");\r\n\t\t\t\t\tiframe.width = \"1px\";\r\n\t\t\t\t\tiframe.height = \"1px\"\r\n\t\t\t\t\tiframe.style.display = \"none\";\r\n\t\t\t\t\tdocument.body.appendChild(iframe);\r\n\r\n\t\t\t\t\t// Add our stuff to the document of the iframe and trigger save as\r\n\t\t\t\t\tlet idoc = iframe.contentDocument;\r\n\t\t\t\t\tidoc.open(contentType, \"replace\");\r\n\t\t\t\t\t// TODO test this with various encodings (e.g. UTF)\r\n\t\t\t\t\t//idoc.charset = parts[2].replace(/charset=/, \"\");\r\n\t\t\t\t\tidoc.write(decodeURIComponent(parts[3]));\r\n\t\t\t\t\tidoc.close();\r\n\t\t\t\t\tidoc.execCommand(\"SaveAs\", true, fileName);\r\n\r\n\t\t\t\t\t// Destroy the iframe\r\n\t\t\t\t\tdocument.body.removeChild(iframe);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t/**\r\n\t\t\t * Something else - perhaps a mobile.\r\n\t\t\t * Let's just display it in the same page.\r\n\t\t\t * (hey we don't like it either)\r\n\t\t\t */\r\n\t\t\twindow.location.href = uri;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if browser has any supported methods to trigger download\r\n\t * of a binary file.\r\n\t *\r\n\t * @return Supports downloads?\r\n\t */\r\n\tpublic downloadSupport(): boolean {\r\n\t\t//return !this.legacyIE();\r\n\t\treturn this.linkDownloadSupport() || this.msBlobDownloadSupport();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the browser supports \"download\" attribute on links.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Browser supports triggering downloads?\r\n\t */\r\n\tpublic linkDownloadSupport(): boolean {\r\n\t\t// Do we have this cached?\r\n\t\tlet cache = registry.getCache(\"linkDownloadSupport\");\r\n\t\tif (cache === false || cache === true) {\r\n\t\t\treturn cache;\r\n\t\t}\r\n\t\tlet a = document.createElement(\"a\");\r\n\t\tlet res = typeof a.download !== \"undefined\";\r\n\t\tregistry.setCache(\"linkDownloadSupport\", res);\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the browser supports download via `msBlob`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Browser supports triggering downloads?\r\n\t */\r\n\tpublic blobDownloadSupport(): boolean {\r\n\t\treturn $type.hasValue(window.Blob);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the browser supports download via `msBlob`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Browser supports triggering downloads?\r\n\t */\r\n\tpublic msBlobDownloadSupport(): boolean {\r\n\t\treturn $type.hasValue(window.navigator.msSaveOrOpenBlob);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this is a legacy version of IE.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return IE9 or less?\r\n\t */\r\n\tpublic legacyIE(): boolean {\r\n\t\t// Create a temporary <div> with conditional tags in it an an <i> tag.\r\n\t\t// Count <i>s. If there are some, we have IE9 or late on our hands.\r\n\t\tlet div = document.createElement(\"div\");\r\n\t\tdiv.innerHTML = \"<!--[if lt IE 10]><i></i><![endif]-->\";\r\n\t\treturn div.getElementsByTagName(\"i\").length == 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates print of the chart.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param data     Data URI for the image\r\n\t * @param options  Options\r\n\t * @param title    Optional title to use (uses window's title by default)\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async print(data: string, options?: IExportPrintOptions, title?: string): Promise<boolean> {\r\n\r\n\t\tif (options.printMethod == \"css\") {\r\n\t\t\treturn this.printViaCSS(data, options, title);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.printViaIframe(data, options, title);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected async printViaCSS(data: string, options?: IExportPrintOptions, title?: string): Promise<boolean> {\r\n\t\t// Save current scroll position\r\n\t\tlet scroll = document.documentElement.scrollTop || document.body.scrollTop;\r\n\r\n\t\t// Hide all current nodes of the document and save their current states\r\n\t\t// of `display` style\r\n\t\t/*let states: Array<string> = [];\r\n\t\tlet items = document.body.childNodes;\r\n\t\tfor (let len = items.length, i = 0; i < len; i++) {\r\n\t\t\tlet item = <HTMLElement>items[i];\r\n\t\t\tif ($dom.isElement(item)) {\r\n\t\t\t\tstates[i] = item.style.display;\r\n\t\t\t\titem.style.display = \"none\";\r\n\t\t\t}\r\n\t\t}*/\r\n\r\n\t\t// Hide all document nodes by applyin custom CSS\r\n\t\tlet rule = new StyleRule($dom.getShadowRoot(this.container), \"body > *\", {\r\n\t\t\t\"display\": \"none\",\r\n\t\t\t\"position\": \"fixed\",\r\n\t\t\t\"visibility\": \"hidden\",\r\n\t\t\t\"opacity\": \"0\",\r\n\t\t\t\"clipPath\": \"polygon(0px 0px,0px 0px,0px 0px,0px 0px);\"\r\n\t\t});\r\n\r\n\t\t// Replace title?\r\n\t\tlet originalTitle: string;\r\n\t\tif (title && document && document.title) {\r\n\t\t\toriginalTitle = document.title;\r\n\t\t\tdocument.title = title;\r\n\t\t}\r\n\r\n\t\t// Create and add exported image\r\n\t\tlet img = new Image();\r\n\t\timg.src = data;\r\n\t\timg.style.maxWidth = \"100%\";\r\n\t\timg.style.display = \"block\";\r\n\t\timg.style.position = \"relative\";\r\n\t\timg.style.visibility = \"visible\";\r\n\t\timg.style.opacity = \"1\";\r\n\t\timg.style.clipPath = \"none\";\r\n\t\tdocument.body.appendChild(img);\r\n\r\n\t\t// Print\r\n\t\tthis.setTimeout(() => {\r\n\t\t\t(<any>window).print();\r\n\t\t}, 50);\r\n\r\n\t\t// Delay needs to be at least a second for iOS devices\r\n\t\tlet isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !(<any>window).MSStream;\r\n\t\tif (isIOS && (options.delay < 1000)) {\r\n\t\t\toptions.delay = 1000;\r\n\t\t}\r\n\t\telse if (options.delay < 100) {\r\n\t\t\toptions.delay = 100;\r\n\t\t}\r\n\r\n\t\t// Delay function that resets back the document the way ot was before\r\n\t\tthis.setTimeout(() => {\r\n\r\n\t\t\t// Remove image\r\n\t\t\tdocument.body.removeChild(img);\r\n\r\n\t\t\t// Reset back all elements\r\n\t\t\t/*for (let len = items.length, i = 0; i < len; i++) {\r\n\t\t\t\tlet item = <HTMLElement>items[i];\r\n\t\t\t\tif ($dom.isElement(item)) {\r\n\t\t\t\t\titem.style.display = states[i];\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\trule.dispose();\r\n\r\n\t\t\t// Restore title\r\n\t\t\tif (originalTitle) {\r\n\t\t\t\tdocument.title = document.title;\r\n\t\t\t}\r\n\r\n\t\t\t// Scroll back the document the way it was before\r\n\t\t\tdocument.documentElement.scrollTop = document.body.scrollTop = scroll;\r\n\r\n\t\t}, options.delay || 500);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprotected async printViaIframe(data: string, options?: IExportPrintOptions, title?: string): Promise<boolean> {\r\n\r\n\t\t// Create an iframe\r\n\t\tlet iframe = document.createElement(\"iframe\");\r\n\t\tiframe.style.visibility = \"hidden\";\r\n\t\tdocument.body.appendChild(iframe);\r\n\r\n\t\t// This is needed for FireFox\r\n\t\tiframe.contentWindow.document.open();\r\n\t\tiframe.contentWindow.document.close();\r\n\r\n\t\t// Create and add exported image\r\n\t\tlet img = new Image();\r\n\t\timg.src = data;\r\n\t\timg.style.maxWidth = \"100%\";\r\n\t\timg.style.height = \"auto\";\r\n\t\tif (title) {\r\n\t\t\tiframe.contentWindow.document.title = title;\r\n\t\t}\r\n\t\tiframe.contentWindow.document.body.appendChild(img);\r\n\r\n\t\t(<any>iframe).load = function() {\r\n\t\t\tiframe.contentWindow.document.body.appendChild(img);\r\n\t\t};\r\n\r\n\t\t// Print\r\n\t\tthis.setTimeout(() => {\r\n\t\t\ttry {\r\n\t\t\t\tif (!(<any>iframe).contentWindow.document.execCommand(\"print\", false, null)) {\r\n\t\t\t\t\t(<any>iframe).contentWindow.print();\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\t(<any>iframe).contentWindow.print();\r\n\t\t\t}\r\n\t\t}, options.delay || 50);\r\n\r\n\t\t// Delay needs to be at least a second for iOS devices\r\n\t\tlet isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !(<any>window).MSStream;\r\n\t\tif (isIOS && (options.delay < 1000)) {\r\n\t\t\toptions.delay = 1000;\r\n\t\t}\r\n\t\telse if (options.delay < 100) {\r\n\t\t\toptions.delay = 100;\r\n\t\t}\r\n\r\n\t\t// Delay function that resets back the document the way ot was before\r\n\t\tthis.setTimeout(() => {\r\n\r\n\t\t\t// Remove image\r\n\t\t\tdocument.body.removeChild(iframe);\r\n\r\n\t\t}, options.delay + 50 || 100);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Finds a background color for the element. If element is transparent it goes\r\n\t * up the DOM hierarchy to find a parent element that does.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param element Element\r\n\t * @return Color code\r\n\t */\r\n\tpublic findBackgroundColor(element: Element): Color {\r\n\r\n\t\t// Check if element has styles set\r\n\t\tlet opacity = 1,\r\n\t\t\tcurrentColor = (<string>getComputedStyle(element, \"background-color\"));\r\n\r\n\t\t// Check opacity\r\n\t\tif (currentColor.match(/[^,]*,[^,]*,[^,]*,[ ]?0/) || currentColor == \"transparent\") {\r\n\t\t\topacity = 0;\r\n\t\t}\r\n\r\n\t\tif (opacity == 0) {\r\n\t\t\tlet parent = element.parentElement;// || <Element>element.parentNode;\r\n\r\n\t\t\t// Completely transparent. Look for a parent\r\n\t\t\tif (parent) {\r\n\t\t\t\treturn this.findBackgroundColor(parent);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn color(\"#fff\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn color(currentColor, opacity);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to a container to be used to place [[ExportMenu]] in.\r\n\t *\r\n\t * @param value Reference\r\n\t */\r\n\tpublic set container(value: HTMLElement) {\r\n\t\tthis._container = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Reference\r\n\t */\r\n\tpublic get container(): HTMLElement {\r\n\t\treturn this.adapter.apply(\"container\", {\r\n\t\t\tcontainer: this._container\r\n\t\t}).container;\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to [[Sprite]] to export. Can be any Sprite, including some\r\n\t * internal elements.\r\n\t *\r\n\t * @param value Sprite\r\n\t */\r\n\tpublic set sprite(value: Sprite) {\r\n\t\tthis._sprite = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Sprite\r\n\t */\r\n\tpublic get sprite(): Sprite {\r\n\t\treturn this.adapter.apply(\"sprite\", {\r\n\t\t\tsprite: this._sprite\r\n\t\t}).sprite;\r\n\t}\r\n\r\n\t/**\r\n\t * An array of extra [[Sprite]] elements to include in export.\r\n\t *\r\n\t * It can be used to export any external elements, or even other charts.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.exporting.extraSprites.push(chart2);\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.exporting.extraSprites.push(chart2);\r\n\t * ```\r\n\t *\r\n\t * IMPORTANT: This setting is ignored when exporting to SVG format.\r\n\t *\r\n\t * @since 4.2.0\r\n\t * @param value Sprite\r\n\t */\r\n\tpublic set extraSprites(value: Array<Sprite | IExportCanvas>) {\r\n\t\tthis._extraSprites = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Sprite\r\n\t */\r\n\tpublic get extraSprites(): Array<Sprite | IExportCanvas> {\r\n\t\treturn this.adapter.apply(\"extraSprites\", {\r\n\t\t\textraSprites: this._extraSprites\r\n\t\t}).extraSprites;\r\n\t}\r\n\r\n\t/**\r\n\t * An array of [[Sprite]] elements that need to be valid before export\r\n\t * commences.\r\n\t *\r\n\t * If any of those elements is not completely ready when export is triggered,\r\n\t * the export will wait until they are (their `validated` event triggers)\r\n\t * before going through with the export opertaion.\r\n\t *\r\n\t * This is useful if you need to modify chart appearance for the export.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Add watermark\r\n\t * let watermark = chart.createChild(am4core.Label);\r\n\t * watermark.text = \"Copyright (C) 2019\";\r\n\t * watermark.disabled = true;\r\n\t *\r\n\t * // Add watermark to validated sprites\r\n\t * chart.exporting.validateSprites.push(watermark);\r\n\t *\r\n\t * // Enable watermark on export\r\n\t * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n\t *   watermark.disabled = false;\r\n\t * });\r\n\t *\r\n\t * // Disable watermark when export finishes\r\n\t * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n\t *   watermark.disabled = true;\r\n\t * });\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Add watermark\r\n\t * var watermark = chart.createChild(am4core.Label);\r\n\t * watermark.text = \"Copyright (C) 2019\";\r\n\t * watermark.disabled = true;\r\n\t *\r\n\t * // Add watermark to validated sprites\r\n\t * chart.exporting.validateSprites.push(watermark);\r\n\t *\r\n\t * // Enable watermark on export\r\n\t * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n\t *   watermark.disabled = false;\r\n\t * });\r\n\t *\r\n\t * // Disable watermark when export finishes\r\n\t * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n\t *   watermark.disabled = true;\r\n\t * });\r\n\t * ```\r\n\t *\r\n\t * @since 4.6.8\r\n\t * @param value Sprite\r\n\t */\r\n\tpublic set validateSprites(value: Array<Sprite>) {\r\n\t\tthis._validateSprites = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Sprite\r\n\t */\r\n\tpublic get validateSprites(): Array<Sprite> {\r\n\t\treturn this.adapter.apply(\"validateSprites\", {\r\n\t\t\tvalidateSprites: this._validateSprites\r\n\t\t}).validateSprites;\r\n\t}\r\n\r\n\t/**\r\n\t * Data to export.\r\n\t *\r\n\t * @param value Data\r\n\t */\r\n\tpublic set data(value: any) {\r\n\t\tthis._data = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Data\r\n\t */\r\n\tpublic get data(): any {\r\n\t\treturn this.adapter.apply(\"data\", {\r\n\t\t\tdata: this._data\r\n\t\t}).data;\r\n\t}\r\n\r\n\t/**\r\n\t * Data fields in `{ field: fieldName }` format. Those are used for\r\n\t * exporting in data formats to name the columns.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/exporting/#Changing_order_and_names_of_columns} for examples and details\r\n\t * @param value Field names\r\n\t */\r\n\tpublic set dataFields(value: any) {\r\n\t\tthis._dataFields = value;\r\n\t\tthis._dynamicDataFields = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Field names `{ field: fieldName }`\r\n\t */\r\n\tpublic get dataFields(): any {\r\n\t\tif (!this._dataFields) {\r\n\t\t\tthis.generateDataFields();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"dataFields\", {\r\n\t\t\tdataFields: this._dataFields\r\n\t\t}).dataFields;\r\n\t}\r\n\r\n\t/**\r\n\t * Called after target chart's data updates.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic handleDataUpdated(): void {\r\n\t\tif (this._dynamicDataFields) {\r\n\t\t\tthis._dataFields = undefined;\r\n\t\t}\r\n\t\tconst hasData = this.data.length > 0;\r\n\t\tif (this._prevHasData != hasData) {\r\n\t\t\tthis._prevHasData = hasData;\r\n\t\t\tif (this.menu) {\r\n\t\t\t\tthis.menu.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[DateFormatter]] to use when formatting dates when exporting data.\r\n\t *\r\n\t * @param value DateFormatter instance\r\n\t */\r\n\tpublic set dateFormatter(value: DateFormatter) {\r\n\t\tthis._dateFormatter = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return A DateFormatter instance\r\n\t */\r\n\tpublic get dateFormatter(): DateFormatter {\r\n\t\tif (!this._dateFormatter) {\r\n\t\t\tthis._dateFormatter = new DateFormatter();\r\n\t\t\tthis._dateFormatter.language = this.language;\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"dateFormatter\", {\r\n\t\t\tdateFormatter: this._dateFormatter\r\n\t\t}).dateFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * A date format to use for exporting dates. Will use [[DateFormatter]]\r\n\t * format if not set.\r\n\t *\r\n\t * @param value Date format\r\n\t */\r\n\tpublic set dateFormat(value: $type.Optional<string | Intl.DateTimeFormatOptions>) {\r\n\t\tthis._dateFormat = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date format\r\n\t */\r\n\tpublic get dateFormat(): $type.Optional<string | Intl.DateTimeFormatOptions> {\r\n\t\treturn this.adapter.apply(\"dateFormat\", {\r\n\t\t\tdateFormat: this._dateFormat\r\n\t\t}).dateFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of fields that hold date values.\r\n\t *\r\n\t * @param value Date field list\r\n\t */\r\n\tpublic set dateFields(value: List<string>) {\r\n\t\tthis._dateFields = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date field list\r\n\t */\r\n\tpublic get dateFields(): List<string> {\r\n\t\tif (!this._dateFields) {\r\n\t\t\tthis._dateFields = new List<string>();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"dateFields\", {\r\n\t\t\tdateFields: this._dateFields\r\n\t\t}).dateFields;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[NumberFormatter]] to use when formatting dates when exporting data.\r\n\t *\r\n\t * @since 4.5.15\r\n\t * @param value NumberFormatter instance\r\n\t */\r\n\tpublic set numberFormatter(value: NumberFormatter) {\r\n\t\tthis._numberFormatter = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return A NumberFormatter instance\r\n\t */\r\n\tpublic get numberFormatter(): NumberFormatter {\r\n\t\tif (!this._numberFormatter) {\r\n\t\t\tthis._numberFormatter = new NumberFormatter();\r\n\t\t\tthis._numberFormatter.language = this.language;\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"numberFormatter\", {\r\n\t\t\tnumberFormatter: this._numberFormatter\r\n\t\t}).numberFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * A number format to use for exporting dates. Will use [[NumberFormatter]]\r\n\t * format if not set.\r\n\t *\r\n\t * @since 4.5.15\r\n\t * @param value Number format\r\n\t */\r\n\tpublic set numberFormat(value: $type.Optional<string>) {\r\n\t\tthis._numberFormat = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Number format\r\n\t */\r\n\tpublic get numberFormat(): $type.Optional<string> {\r\n\t\treturn this.adapter.apply(\"numberFormat\", {\r\n\t\t\tnumberFormat: this._numberFormat\r\n\t\t}).numberFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of fields that hold number values.\r\n\t *\r\n\t * @since 4.5.15\r\n\t * @param value Number field list\r\n\t */\r\n\tpublic set numberFields(value: List<string>) {\r\n\t\tthis._numberFields = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Number field list\r\n\t */\r\n\tpublic get numberFields(): List<string> {\r\n\t\tif (!this._numberFields) {\r\n\t\t\tthis._numberFields = new List<string>();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"numberFields\", {\r\n\t\t\tnumberFields: this._numberFields\r\n\t\t}).numberFields;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[DurationFormatter]] to use when formatting duration values when\r\n\t * exporting data.\r\n\t *\r\n\t * @param value  DurationFormatter instance\r\n\t */\r\n\tpublic set durationFormatter(value: DurationFormatter) {\r\n\t\tthis._durationFormatter = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return A DurationFormatter instance\r\n\t */\r\n\tpublic get durationFormatter(): DurationFormatter {\r\n\t\tif (!this._durationFormatter) {\r\n\t\t\tthis._durationFormatter = new DurationFormatter();\r\n\t\t\tthis._durationFormatter.language = this.language;\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"durationFormatter\", {\r\n\t\t\tdurationFormatter: this._durationFormatter\r\n\t\t}).durationFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * A format to use when formatting values from `durationFields`.\r\n\t * Will use [[DurationFormatter]] format if not set.\r\n\t *\r\n\t * @param value Duration format\r\n\t */\r\n\tpublic set durationFormat(value: $type.Optional<string>) {\r\n\t\tthis._durationFormat = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Duration format\r\n\t */\r\n\tpublic get durationFormat(): $type.Optional<string> {\r\n\t\treturn this.adapter.apply(\"durationFormat\", {\r\n\t\t\tdurationFormat: this._durationFormat\r\n\t\t}).durationFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of fields that hold duration values.\r\n\t *\r\n\t * @param value Duration field list\r\n\t */\r\n\tpublic set durationFields(value: List<string>) {\r\n\t\tthis._durationFields = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Duration field list\r\n\t */\r\n\tpublic get durationFields(): List<string> {\r\n\t\tif (!this._durationFields) {\r\n\t\t\tthis._durationFields = new List<string>();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"durationFields\", {\r\n\t\t\tdurationFields: this._durationFields\r\n\t\t}).durationFields;\r\n\t}\r\n\r\n\t/**\r\n\t * Generates data fields out of the first row of data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic generateDataFields(): void {\r\n\t\tthis._dataFields = {};\r\n\t\tif (this.data.length) {\r\n\t\t\t$array.each(this.data, (row) => {\r\n\t\t\t\t$object.each(row, (key, value) => {\r\n\t\t\t\t\tif (!$type.hasValue(this._dataFields[key])) {\r\n\t\t\t\t\t\tthis._dataFields[key] = this.adapter.apply(\"dataFieldName\", {\r\n\t\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\t\tfield: key\r\n\t\t\t\t\t\t}).name;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Cheks against `dateFields` property to determine if this field holds\r\n\t * dates.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param field   Field name\r\n\t * @param options Options\r\n\t * @return `true` if it's a date field\r\n\t */\r\n\tpublic isDateField(field: string): boolean {\r\n\t\treturn this.adapter.apply(\"isDateField\", {\r\n\t\t\tisDateField: this.dateFields.contains(field),\r\n\t\t\tfield: field\r\n\t\t}).isDateField;\r\n\t}\r\n\r\n\t/**\r\n\t * Cheks against `numberFields` property to determine if this field holds\r\n\t * numbers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param field   Field name\r\n\t * @param options Options\r\n\t * @return `true` if it's a number field\r\n\t */\r\n\tpublic isNumberField(field: string): boolean {\r\n\t\treturn this.adapter.apply(\"isNumberField\", {\r\n\t\t\tisNumberField: this.numberFields.contains(field),\r\n\t\t\tfield: field\r\n\t\t}).isNumberField;\r\n\t}\r\n\r\n\t/**\r\n\t * Cheks against `durationFields` property to determine if this field holds\r\n\t * durations.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param field   Field name\r\n\t * @param options Options\r\n\t * @return `true` if it's a date field\r\n\t */\r\n\tpublic isDurationField(field: string): boolean {\r\n\t\treturn this.adapter.apply(\"isDurationField\", {\r\n\t\t\tisDurationField: this.durationFields.contains(field),\r\n\t\t\tfield: field\r\n\t\t}).isDurationField;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns proper content type for the export type.\r\n\t *\r\n\t * @param type  Export format/type\r\n\t * @return Proper content type, i.e. \"image/jpeg\"\r\n\t */\r\n\tpublic getContentType<Key extends keyof IExportOptions>(type: Key): string {\r\n\r\n\t\tlet contentType = \"\";\r\n\t\tswitch (type) {\r\n\t\t\tcase \"png\":\r\n\t\t\tcase \"gif\":\r\n\t\t\t\tcontentType = \"image/\" + type;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"jpg\":\r\n\t\t\t\tcontentType = \"image/jpeg\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"svg\":\r\n\t\t\t\tcontentType = \"image/svg+xml\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"csv\":\r\n\t\t\t\tcontentType = \"text/csv\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"json\":\r\n\t\t\t\tcontentType = \"application/json\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"html\":\r\n\t\t\t\tcontentType = \"text/html\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pdf\":\r\n\t\t\tcase \"pdfdata\":\r\n\t\t\t\tcontentType = \"application/pdf\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"xlsx\":\r\n\t\t\t\tcontentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"contentType\", {\r\n\t\t\tcontentType: contentType,\r\n\t\t\ttype: type\r\n\t\t}).contentType;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A file prefix to be used for all exported formats.\r\n\t *\r\n\t * Export will apply format-related extension to it. E.g. if this is set to\r\n\t * \"myExport\", the file name of the PNG exported image will be \"myExport.png\".\r\n\t *\r\n\t * @param value File prefix\r\n\t */\r\n\tpublic set filePrefix(value: string) {\r\n\t\tthis._filePrefix = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return File prefix\r\n\t */\r\n\tpublic get filePrefix(): string {\r\n\t\treturn this.adapter.apply(\"filePrefix\", {\r\n\t\t\tfilePrefix: this._filePrefix\r\n\t\t}).filePrefix;\r\n\t}\r\n\r\n\t/**\r\n\t * A background color to be used for exported images. If set, this will\r\n\t * override the automatically acquired background color.\r\n\t *\r\n\t * @param value Color\r\n\t */\r\n\tpublic set backgroundColor(value: $type.Optional<Color>) {\r\n\t\tthis._backgroundColor = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Background color\r\n\t */\r\n\tpublic get backgroundColor(): $type.Optional<Color> {\r\n\t\treturn this.adapter.apply(\"backgroundColor\", {\r\n\t\t\tbackgroundColor: this._backgroundColor\r\n\t\t}).backgroundColor;\r\n\t}\r\n\r\n\t/**\r\n\t * A title to be used when printing.\r\n\t *\r\n\t * @param value Title\r\n\t */\r\n\tpublic set title(value: $type.Optional<string>) {\r\n\t\tthis._title = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Title\r\n\t */\r\n\tpublic get title(): $type.Optional<string> {\r\n\t\treturn this.adapter.apply(\"title\", {\r\n\t\t\ttitle: this._title\r\n\t\t}).title;\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a preloader/exporting indicator.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Add ability to change text\r\n\t */\r\n\tpublic showPreloader(): void {\r\n\t\tlet preloader = this.preloader;\r\n\t\tif (preloader) {\r\n\t\t\tpreloader.progress = 0.5;\r\n\t\t\tpreloader.label.text = \"...\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides preloader/exporting indicator\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hidePreloader(): void {\r\n\t\tlet preloader = this.preloader;\r\n\t\tif (preloader) {\r\n\t\t\tpreloader.progress = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a an instance of [[Preloader]] associated with the Sprite being\r\n\t * exported.\r\n\t *\r\n\t * @return Preloader\r\n\t */\r\n\tpublic get preloader(): Preloader {\r\n\t\treturn this._sprite && this._sprite.parent && this._sprite.parent.preloader ?\r\n\t\t\tthis._sprite.parent.preloader :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a modal saying export is taking longer than expected.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic showTimeout(): void {\r\n\t\tthis.showModal(\r\n\t\t\tthis.adapter.apply(\"timeoutMessage\", {\r\n\t\t\t\tmessage: this.language.translate(\"Export operation took longer than expected. Something might have gone wrong.\")\r\n\t\t\t}).message\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Hides preloader/exporting indicator.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hideTimeout(): void {\r\n\t\tif (this._timeoutTimeout) {\r\n\t\t\tthis.removeDispose(this._timeoutTimeout);\r\n\t\t\tthis._timeoutTimeout = null;\r\n\t\t}\r\n\t\tthis.hideModal();\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Language]] instance to be used for translations.\r\n\t *\r\n\t * @param value An instance of [[Language]]\r\n\t */\r\n\tpublic set language(value: Language) {\r\n\t\tthis._language = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return A [[Language]] instance to be used\r\n\t */\r\n\tpublic get language(): Language {\r\n\t\tif (!this._language) {\r\n\t\t\tthis._language = new Language();\r\n\t\t}\r\n\r\n\t\treturn this._language;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns (and creates) [[Modal]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Modal instance\r\n\t */\r\n\tpublic get modal(): Modal {\r\n\t\tif (!this._modal) {\r\n\t\t\tthis._modal = new Modal();\r\n\r\n\t\t\t// Prefix with Sprite's class name\r\n\t\t\tthis._modal.adapter.add(\"classPrefix\", (value) => {\r\n\t\t\t\tvalue = options.classNamePrefix + value;\r\n\t\t\t\treturn value;\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this._modal;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows [[Modal]] with specific text.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param text Modal contents\r\n\t */\r\n\tpublic showModal(text: string, title?: string): void {\r\n\r\n\t\t// Hide previous modal and preloader\r\n\t\tthis.hideModal();\r\n\t\tthis.hidePreloader();\r\n\r\n\t\t// Create modal\r\n\t\tlet modal = this.modal;\r\n\t\tmodal.container = this.sprite.svgContainer.SVGContainer;\r\n\t\tmodal.content = text;\r\n\t\tmodal.readerTitle = title;\r\n\t\tmodal.open();\r\n\t}\r\n\r\n\t/**\r\n\t * Hides modal window if one's currently open.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hideModal(): void {\r\n\t\tif (this._modal) {\r\n\t\t\tthis.modal.close();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Loads canvg dynamic module.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Instance of canvg\r\n\t * @async\r\n\t */\r\n\tprivate async _canvg(): Promise<typeof import(\"../../canvg/index.js\")[\"default\"]> {\r\n\t\tconst canvg = (await import(/* webpackChunkName: \"canvg\" */ \"../../canvg/index.js\")) as any;\r\n\r\n\t\tif (canvg.default != null) {\r\n\t\t\treturn canvg.default;\r\n\r\n\t\t} else {\r\n\t\t\treturn canvg;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns canvg instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Instance of canvg\r\n\t */\r\n\tpublic get canvg(): Promise<typeof import(\"../../canvg/index.js\")[\"default\"]> {\r\n\t\treturn this._canvg();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pdfmake instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Instance of pdfmake\r\n\t */\r\n\tpublic get pdfmake(): Promise<any> {\r\n\t\tif (pdfmakePromise == null) {\r\n\t\t\tpdfmakePromise = _pdfmake();\r\n\t\t}\r\n\r\n\t\treturn pdfmakePromise;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads xlsx dynamic module.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Instance of pdfmake\r\n\t * @async\r\n\t */\r\n\tprivate async _xlsx(): Promise<any> {\r\n\t\treturn await import(/* webpackChunkName: \"xlsx\" */ \"../../bundled/xlsx\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns xlsx instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Instance of pdfmake\r\n\t */\r\n\tpublic get xlsx(): Promise<any> {\r\n\t\treturn this._xlsx();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets options for a format.\r\n\t */\r\n\tpublic setFormatOptions<Key extends keyof IExportOptions>(type: Key, options: IExportOptions[Key]): void {\r\n\t\tthis._formatOptions.setKey(type, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current options for a format.\r\n\t */\r\n\tpublic getFormatOptions<Key extends keyof IExportOptions>(type: Key): IExportOptions[Key] {\r\n\t\treturn this._formatOptions.getKey(type);\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Dictionary]] object containing format-specific options.\r\n\t *\r\n\t * May be used to change specific option for the format:\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"exporting\": {\r\n\t *     // ...\r\n\t *     \"formatOptions\": {\r\n\t *       \"csv\": {\r\n\t *         \"disabled\": true\r\n\t *       }\r\n\t *     }\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.9.12\r\n\t * @return  Options\r\n\t */\r\n\tpublic get formatOptions(): Dictionary<string, ExportOptions> {\r\n\t\treturn this._formatOptions;\r\n\t}\r\n\r\n\t/**\r\n\t * Disables interactivity on parent chart.\r\n\t */\r\n\tprotected _disablePointers(): void {\r\n\t\tif (!$type.hasValue(this._spriteInteractionsEnabled)) {\r\n\t\t\tthis._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\r\n\t\t}\r\n\t\tthis.sprite.interactionsEnabled = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Releases temporarily disabled pointers on parent chart.\r\n\t */\r\n\tprotected _releasePointers(): void {\r\n\t\tif ($type.hasValue(this._spriteInteractionsEnabled) && !this._exportRunning) {\r\n\t\t\tthis.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides all elements that should not be included in the exported image.\r\n\t */\r\n\tprivate hideNonExportableSprites(): void {\r\n\t\tif (this._objectsAlreadyHidden) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst svgContainer = this.sprite.svgContainer;\r\n\t\tif (svgContainer) {\r\n\t\t\t$array.each(svgContainer.nonExportableSprites, (item) => {\r\n\t\t\t\tif (!item.isHidden && !item.isHiding && item.visible) {\r\n\t\t\t\t\tthis._hiddenObjects.push(item);\r\n\t\t\t\t}\r\n\t\t\t\titem.hide(0);\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis._objectsAlreadyHidden = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Respores elements that were hidden before export.\r\n\t */\r\n\tprivate restoreNonExportableSprites(): void {\r\n\t\tif (!this._objectsAlreadyHidden) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t$array.each(this._hiddenObjects, (item) => {\r\n\t\t\titem.show(0);\r\n\t\t});\r\n\t\tthis._hiddenObjects = [];\r\n\t\tthis._objectsAlreadyHidden = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there are elements that absolutely need to be validated before\r\n\t * export.\r\n\t *\r\n\t * If there are invalid elements, it will await for them to be validated.\r\n\t *\r\n\t * @return Promise\r\n\t */\r\n\tprivate async awaitValidSprites(): Promise<void> {\r\n\t\tlet promises: Promise<any>[] = [];\r\n\r\n\t\tif (this.validateSprites.length) {\r\n\t\t\t$array.each(this.validateSprites, (sprite, index) => {\r\n\t\t\t\tif (sprite.invalid) {\r\n\t\t\t\t\tpromises.push(new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tsprite.events.once(\"validated\", (ev) => {\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (promises.length) {\r\n\t\t\tawait Promise.all(promises);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tregistry.registeredClasses[\"ExportMenu\"] = ExportMenu;\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up menu\r\n\t\t\tif ($type.hasValue(config.menu) && !$type.hasValue(config.menu.type)) {\r\n\t\t\t\tconfig.menu.type = \"ExportMenu\";\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.hasValue(config.dataFields) && $type.isObject(config.dataFields)) {\r\n\t\t\t\tthis.dataFields = config.dataFields;\r\n\t\t\t\tdelete config.dataFields;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}