{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\r\n * Creates a 3D rectangle.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Container } from \"../../Container\";\nimport { Sprite } from \"../../Sprite\";\nimport * as $math from \"../../utils/Math\";\nimport * as $path from \"../../rendering/Path\";\nimport { Color, color, toColor } from \"../../utils/Color\";\nimport { RadialGradient } from \"../../rendering/fills/RadialGradient\";\nimport { LinearGradient } from \"../../rendering/fills/LinearGradient\";\nimport { LightenFilter } from \"../../rendering/filters/LightenFilter\";\nimport * as $type from \"../../utils/Type\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Builds a 3D rectangle\r\n * @see {@link IRectangle3DEvents} for a list of available events\r\n * @see {@link IRectangle3DAdapters} for a list of available Adapters\r\n */\nvar Rectangle3D = /** @class */function (_super) {\n  __extends(Rectangle3D, _super);\n  /**\r\n   * Constructor\r\n   */\n  function Rectangle3D() {\n    var _this = _super.call(this) || this;\n    _this.angle = 30;\n    _this.depth = 30;\n    _this.className = \"Rectangle3D\";\n    _this.layout = \"none\";\n    var sideBack = _this.createChild(Sprite);\n    sideBack.shouldClone = false;\n    sideBack.setElement(_this.paper.add(\"path\"));\n    sideBack.isMeasured = false;\n    _this.sideBack = sideBack;\n    _this._disposers.push(_this.sideBack);\n    var sideBottom = _this.createChild(Sprite);\n    sideBottom.shouldClone = false;\n    sideBottom.setElement(_this.paper.add(\"path\"));\n    sideBottom.isMeasured = false;\n    _this.sideBottom = sideBottom;\n    _this._disposers.push(_this.sideBottom);\n    var sideLeft = _this.createChild(Sprite);\n    sideLeft.shouldClone = false;\n    sideLeft.setElement(_this.paper.add(\"path\"));\n    sideLeft.isMeasured = false;\n    _this.sideLeft = sideLeft;\n    _this._disposers.push(_this.sideLeft);\n    var sideRight = _this.createChild(Sprite);\n    sideRight.shouldClone = false;\n    sideRight.setElement(_this.paper.add(\"path\"));\n    sideRight.isMeasured = false;\n    _this.sideRight = sideRight;\n    _this._disposers.push(_this.sideRight);\n    var sideTop = _this.createChild(Sprite);\n    sideTop.shouldClone = false;\n    sideTop.setElement(_this.paper.add(\"path\"));\n    sideTop.isMeasured = false;\n    _this.sideTop = sideTop;\n    _this._disposers.push(_this.sideTop);\n    var sideFront = _this.createChild(Sprite);\n    sideFront.shouldClone = false;\n    sideFront.setElement(_this.paper.add(\"path\"));\n    sideFront.isMeasured = false;\n    _this.sideFront = sideFront;\n    _this._disposers.push(_this.sideFront);\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Draws the element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Rectangle3D.prototype.draw = function () {\n    _super.prototype.draw.call(this);\n    var w = this.innerWidth;\n    var h = this.innerHeight;\n    var depth = this.depth;\n    var angle = this.angle;\n    var sin = $math.sin(angle);\n    var cos = $math.cos(angle);\n    var a = {\n      x: 0,\n      y: 0\n    };\n    var b = {\n      x: w,\n      y: 0\n    };\n    var c = {\n      x: w,\n      y: h\n    };\n    var d = {\n      x: 0,\n      y: h\n    };\n    var ah = {\n      x: depth * cos,\n      y: -depth * sin\n    };\n    var bh = {\n      x: depth * cos + w,\n      y: -depth * sin\n    };\n    var ch = {\n      x: depth * cos + w,\n      y: -depth * sin + h\n    };\n    var dh = {\n      x: depth * cos,\n      y: -depth * sin + h\n    };\n    this.sideFront.path = $path.moveTo(a) + $path.lineTo(b) + $path.lineTo(c) + $path.lineTo(d) + $path.closePath();\n    this.sideBack.path = $path.moveTo(ah) + $path.lineTo(bh) + $path.lineTo(ch) + $path.lineTo(dh) + $path.closePath();\n    this.sideLeft.path = $path.moveTo(a) + $path.lineTo(ah) + $path.lineTo(dh) + $path.lineTo(d) + $path.closePath();\n    this.sideRight.path = $path.moveTo(b) + $path.lineTo(bh) + $path.lineTo(ch) + $path.lineTo(c) + $path.closePath();\n    this.sideBottom.path = $path.moveTo(d) + $path.lineTo(dh) + $path.lineTo(ch) + $path.lineTo(c) + $path.closePath();\n    this.sideTop.path = $path.moveTo(a) + $path.lineTo(ah) + $path.lineTo(bh) + $path.lineTo(b) + $path.closePath();\n  };\n  Object.defineProperty(Rectangle3D.prototype, \"depth\", {\n    /**\r\n     * @return Depth (px)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"depth\");\n    },\n    /**\r\n     * Depth (Z dimension) of the 3D rectangle in pixels.\r\n     *\r\n     * @default 30\r\n     * @param value  Depth (px)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"depth\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Rectangle3D.prototype, \"angle\", {\n    /**\r\n     * @return Angle\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"angle\");\n    },\n    /**\r\n     * Angle of the point of view to the 3D element. (0-360)\r\n     *\r\n     * @default 30\r\n     * @param value  Angle\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"angle\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Sets actual `fill` property on the SVG element, including applicable color\r\n   * modifiers.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param value  Fill\r\n   */\n  Rectangle3D.prototype.setFill = function (value) {\n    _super.prototype.setFill.call(this, value);\n    if (!$type.isObject(value) || \"r\" in value) {\n      value = toColor(value);\n    }\n    var colorStr;\n    if (value instanceof Color) {\n      colorStr = value.hex;\n    } else if (value instanceof LinearGradient || value instanceof RadialGradient) {\n      colorStr = value.stops.getIndex(0).color.hex;\n    } else {\n      var filter = new LightenFilter();\n      filter.lightness = -0.2;\n      this.sideBack.filters.push(filter);\n      var filter2 = filter.clone();\n      filter2.lightness = -0.4;\n      this.sideLeft.filters.push(filter2);\n      var filter3 = filter.clone();\n      filter3.lightness = -0.2;\n      this.sideRight.filters.push(filter3);\n      var filter4 = filter.clone();\n      filter4.lightness = -0.1;\n      this.sideTop.filters.push(filter4);\n      var filter5 = filter.clone();\n      filter5.lightness = -0.5;\n      this.sideBottom.filters.push(filter5);\n    }\n    if (colorStr) {\n      this.sideBack.fill = color(colorStr).lighten(-0.2);\n      this.sideLeft.fill = color(colorStr).lighten(-0.4);\n      this.sideRight.fill = color(colorStr).lighten(-0.2);\n      this.sideTop.fill = color(colorStr).lighten(-0.1);\n      this.sideBottom.fill = color(colorStr).lighten(-0.5);\n    }\n  };\n  /**\r\n   * Copies all properties and related data from a different instance of Rectangle3D.\r\n   *\r\n   * @param source Source Rectangle3D\r\n   */\n  Rectangle3D.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n    this.sideBack.copyFrom(source.sideBack);\n    this.sideLeft.copyFrom(source.sideLeft);\n    this.sideRight.copyFrom(source.sideRight);\n    this.sideTop.copyFrom(source.sideTop);\n    this.sideBottom.copyFrom(source.sideBottom);\n  };\n  return Rectangle3D;\n}(Container);\nexport { Rectangle3D };","map":{"version":3,"names":["Container","Sprite","$math","$path","Color","color","toColor","RadialGradient","LinearGradient","LightenFilter","$type","Rectangle3D","_super","__extends","_this","call","angle","depth","className","layout","sideBack","createChild","shouldClone","setElement","paper","add","isMeasured","_disposers","push","sideBottom","sideLeft","sideRight","sideTop","sideFront","applyTheme","prototype","draw","w","innerWidth","h","innerHeight","sin","cos","a","x","y","b","c","d","ah","bh","ch","dh","path","moveTo","lineTo","closePath","Object","defineProperty","get","getPropertyValue","set","value","setPropertyValue","setFill","isObject","colorStr","hex","stops","getIndex","filter","lightness","filters","filter2","clone","filter3","filter4","filter5","fill","lighten","copyFrom","source"],"sources":["../../../../../../src/.internal/core/elements/3d/Rectangle3D.ts"],"sourcesContent":["/**\r\n * Creates a 3D rectangle.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../Container\";\r\nimport { Sprite } from \"../../Sprite\";\r\nimport { IPoint } from \"../../defs/IPoint\";\r\nimport * as $math from \"../../utils/Math\";\r\nimport * as $path from \"../../rendering/Path\";\r\nimport { Color, color, toColor } from \"../../utils/Color\";\r\nimport { RadialGradient } from \"../../rendering/fills/RadialGradient\";\r\nimport { LinearGradient } from \"../../rendering/fills/LinearGradient\";\r\nimport { Pattern } from \"../../rendering/fills/Pattern\";\r\nimport { LightenFilter } from \"../../rendering/filters/LightenFilter\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Rectangle3D]].\r\n */\r\nexport interface Rectangle3DProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Depth (Z dimension) of the 3D rectangle in pixels.\r\n\t *\r\n\t * @default 30\r\n\t */\r\n\tdepth?: number;\r\n\r\n\t/**\r\n\t * Angle of the point of view to the 3D element. (0-360)\r\n\t *\r\n\t * @default 30\r\n\t */\r\n\tangle?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Rectangle3D]]\r\n */\r\nexport interface Rectangle3DEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Rectangle3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface Rectangle3DAdapters extends IContainerAdapters, Rectangle3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Builds a 3D rectangle\r\n * @see {@link IRectangle3DEvents} for a list of available events\r\n * @see {@link IRectangle3DAdapters} for a list of available Adapters\r\n */\r\nexport class Rectangle3D extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: Rectangle3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: Rectangle3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: Rectangle3DEvents;\r\n\r\n\t/**\r\n\t * Left side element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideLeft: Sprite;\r\n\r\n\t/**\r\n\t * Right side element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideRight: Sprite;\r\n\r\n\t/**\r\n\t * Top element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideTop: Sprite;\r\n\r\n\t/**\r\n\t * Bottom element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideBottom: Sprite;\r\n\r\n\t/**\r\n\t * Back element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideBack: Sprite;\r\n\r\n\t/**\r\n\t * Front element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideFront: Sprite;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.angle = 30;\r\n\t\tthis.depth = 30;\r\n\t\tthis.className = \"Rectangle3D\";\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tlet sideBack: Sprite = this.createChild(Sprite);\r\n\t\tsideBack.shouldClone = false;\r\n\t\tsideBack.setElement(this.paper.add(\"path\"));\r\n\t\tsideBack.isMeasured = false;\r\n\r\n\t\tthis.sideBack = sideBack;\r\n\t\tthis._disposers.push(this.sideBack);\r\n\r\n\t\tlet sideBottom: Sprite = this.createChild(Sprite);\r\n\t\tsideBottom.shouldClone = false;\r\n\t\tsideBottom.setElement(this.paper.add(\"path\"));\r\n\t\tsideBottom.isMeasured = false;\r\n\t\tthis.sideBottom = sideBottom;\r\n\t\tthis._disposers.push(this.sideBottom);\r\n\r\n\t\tlet sideLeft: Sprite = this.createChild(Sprite);\r\n\t\tsideLeft.shouldClone = false;\r\n\t\tsideLeft.setElement(this.paper.add(\"path\"));\r\n\t\tsideLeft.isMeasured = false;\r\n\t\tthis.sideLeft = sideLeft;\r\n\t\tthis._disposers.push(this.sideLeft);\r\n\r\n\t\tlet sideRight: Sprite = this.createChild(Sprite);\r\n\t\tsideRight.shouldClone = false;\r\n\t\tsideRight.setElement(this.paper.add(\"path\"));\r\n\t\tsideRight.isMeasured = false;\r\n\t\tthis.sideRight = sideRight;\r\n\t\tthis._disposers.push(this.sideRight);\r\n\r\n\t\tlet sideTop: Sprite = this.createChild(Sprite);\r\n\t\tsideTop.shouldClone = false;\r\n\t\tsideTop.setElement(this.paper.add(\"path\"));\r\n\t\tsideTop.isMeasured = false;\r\n\t\tthis.sideTop = sideTop;\r\n\t\tthis._disposers.push(this.sideTop);\r\n\r\n\t\tlet sideFront: Sprite = this.createChild(Sprite);\r\n\t\tsideFront.shouldClone = false;\r\n\t\tsideFront.setElement(this.paper.add(\"path\"));\r\n\t\tsideFront.isMeasured = false;\r\n\t\tthis.sideFront = sideFront;\r\n\t\tthis._disposers.push(this.sideFront);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet w: number = this.innerWidth;\r\n\t\tlet h: number = this.innerHeight;\r\n\r\n\t\tlet depth: number = this.depth;\r\n\t\tlet angle: number = this.angle;\r\n\t\tlet sin: number = $math.sin(angle);\r\n\t\tlet cos: number = $math.cos(angle);\r\n\r\n\t\tlet a: IPoint = { x: 0, y: 0 };\r\n\t\tlet b: IPoint = { x: w, y: 0 };\r\n\t\tlet c: IPoint = { x: w, y: h };\r\n\t\tlet d: IPoint = { x: 0, y: h };\r\n\r\n\t\tlet ah: IPoint = { x: depth * cos, y: -depth * sin };\r\n\t\tlet bh: IPoint = { x: depth * cos + w, y: -depth * sin };\r\n\t\tlet ch: IPoint = { x: depth * cos + w, y: -depth * sin + h };\r\n\t\tlet dh: IPoint = { x: depth * cos, y: -depth * sin + h };\r\n\r\n\t\tthis.sideFront.path = $path.moveTo(a) + $path.lineTo(b) + $path.lineTo(c) + $path.lineTo(d) + $path.closePath();\r\n\t\tthis.sideBack.path = $path.moveTo(ah) + $path.lineTo(bh) + $path.lineTo(ch) + $path.lineTo(dh) + $path.closePath();\r\n\t\tthis.sideLeft.path = $path.moveTo(a) + $path.lineTo(ah) + $path.lineTo(dh) + $path.lineTo(d) + $path.closePath();\r\n\t\tthis.sideRight.path = $path.moveTo(b) + $path.lineTo(bh) + $path.lineTo(ch) + $path.lineTo(c) + $path.closePath();\r\n\t\tthis.sideBottom.path = $path.moveTo(d) + $path.lineTo(dh) + $path.lineTo(ch) + $path.lineTo(c) + $path.closePath();\r\n\t\tthis.sideTop.path = $path.moveTo(a) + $path.lineTo(ah) + $path.lineTo(bh) + $path.lineTo(b) + $path.closePath();\r\n\t}\r\n\r\n\t/**\r\n\t * Depth (Z dimension) of the 3D rectangle in pixels.\r\n\t *\r\n\t * @default 30\r\n\t * @param value  Depth (px)\r\n\t */\r\n\tpublic set depth(value: number) {\r\n\t\tthis.setPropertyValue(\"depth\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Depth (px)\r\n\t */\r\n\tpublic get depth(): number {\r\n\t\treturn this.getPropertyValue(\"depth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Angle of the point of view to the 3D element. (0-360)\r\n\t *\r\n\t * @default 30\r\n\t * @param value  Angle\r\n\t */\r\n\tpublic set angle(value: number) {\r\n\t\tthis.setPropertyValue(\"angle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angle\r\n\t */\r\n\tpublic get angle(): number {\r\n\t\treturn this.getPropertyValue(\"angle\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets actual `fill` property on the SVG element, including applicable color\r\n\t * modifiers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Fill\r\n\t */\r\n\tprotected setFill(value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>): void {\r\n\t\tsuper.setFill(value);\r\n\r\n\t\tif (!$type.isObject(value) || \"r\" in value) {\r\n\t\t\tvalue = toColor(value);\r\n\t\t}\r\n\r\n\t\tlet colorStr: string;\r\n\t\tif (value instanceof Color) {\r\n\t\t\tcolorStr = value.hex;\r\n\t\t}\r\n\t\telse if (value instanceof LinearGradient || value instanceof RadialGradient) {\r\n\t\t\tcolorStr = value.stops.getIndex(0).color.hex;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet filter = new LightenFilter();\r\n\t\t\tfilter.lightness = -0.2;\r\n\t\t\tthis.sideBack.filters.push(filter);\r\n\r\n\t\t\tlet filter2 = filter.clone()\r\n\t\t\tfilter2.lightness = -0.4;\r\n\t\t\tthis.sideLeft.filters.push(filter2);\r\n\r\n\t\t\tlet filter3 = filter.clone()\r\n\t\t\tfilter3.lightness = -0.2;\r\n\t\t\tthis.sideRight.filters.push(filter3);\r\n\r\n\t\t\tlet filter4 = filter.clone()\r\n\t\t\tfilter4.lightness = -0.1;\r\n\t\t\tthis.sideTop.filters.push(filter4);\r\n\r\n\t\t\tlet filter5 = filter.clone()\r\n\t\t\tfilter5.lightness = -0.5;\r\n\t\t\tthis.sideBottom.filters.push(filter5);\r\n\t\t}\r\n\r\n\t\tif (colorStr) {\r\n\t\t\tthis.sideBack.fill = color(colorStr).lighten(-0.2);\r\n\t\t\tthis.sideLeft.fill = color(colorStr).lighten(-0.4);\r\n\t\t\tthis.sideRight.fill = color(colorStr).lighten(-0.2);\r\n\t\t\tthis.sideTop.fill = color(colorStr).lighten(-0.1);\r\n\t\t\tthis.sideBottom.fill = color(colorStr).lighten(-0.5);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Rectangle3D.\r\n\t *\r\n\t * @param source Source Rectangle3D\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.sideBack.copyFrom(source.sideBack);\r\n\t\tthis.sideLeft.copyFrom(source.sideLeft);\r\n\t\tthis.sideRight.copyFrom(source.sideRight);\r\n\t\tthis.sideTop.copyFrom(source.sideTop);\r\n\t\tthis.sideBottom.copyFrom(source.sideBottom);\r\n\t}\r\n\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}