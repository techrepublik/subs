{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { abs, acos, cos, epsilon, halfPi, sin, pi, sqrt, sqrt2 } from \"./math.js\";\nvar pi_sqrt2 = pi / sqrt2;\nexport function larriveeRaw(lambda, phi) {\n  return [lambda * (1 + sqrt(cos(phi))) / 2, phi / (cos(phi / 2) * cos(lambda / 6))];\n}\nlarriveeRaw.invert = function (x, y) {\n  var x0 = abs(x),\n    y0 = abs(y),\n    lambda = epsilon,\n    phi = halfPi;\n  if (y0 < pi_sqrt2) phi *= y0 / pi_sqrt2;else lambda += 6 * acos(pi_sqrt2 / y0);\n  for (var i = 0; i < 25; i++) {\n    var sinPhi = sin(phi),\n      sqrtcosPhi = sqrt(cos(phi)),\n      sinPhi_2 = sin(phi / 2),\n      cosPhi_2 = cos(phi / 2),\n      sinLambda_6 = sin(lambda / 6),\n      cosLambda_6 = cos(lambda / 6),\n      f0 = 0.5 * lambda * (1 + sqrtcosPhi) - x0,\n      f1 = phi / (cosPhi_2 * cosLambda_6) - y0,\n      df0dPhi = sqrtcosPhi ? -0.25 * lambda * sinPhi / sqrtcosPhi : 0,\n      df0dLambda = 0.5 * (1 + sqrtcosPhi),\n      df1dPhi = (1 + 0.5 * phi * sinPhi_2 / cosPhi_2) / (cosPhi_2 * cosLambda_6),\n      df1dLambda = phi / cosPhi_2 * (sinLambda_6 / 6) / (cosLambda_6 * cosLambda_6),\n      denom = df0dPhi * df1dLambda - df1dPhi * df0dLambda,\n      dPhi = (f0 * df1dLambda - f1 * df0dLambda) / denom,\n      dLambda = (f1 * df0dPhi - f0 * df1dPhi) / denom;\n    phi -= dPhi;\n    lambda -= dLambda;\n    if (abs(dPhi) < epsilon && abs(dLambda) < epsilon) break;\n  }\n  return [x < 0 ? -lambda : lambda, y < 0 ? -phi : phi];\n};\nexport default function () {\n  return projection(larriveeRaw).scale(97.2672);\n}","map":{"version":3,"names":["geoProjection","projection","abs","acos","cos","epsilon","halfPi","sin","pi","sqrt","sqrt2","pi_sqrt2","larriveeRaw","lambda","phi","invert","x","y","x0","y0","i","sinPhi","sqrtcosPhi","sinPhi_2","cosPhi_2","sinLambda_6","cosLambda_6","f0","f1","df0dPhi","df0dLambda","df1dPhi","df1dLambda","denom","dPhi","dLambda","scale"],"sources":["/Users/admin/Desktop/techrepublik/pro/subs/vue_subs/node_modules/d3-geo-projection/src/larrivee.js"],"sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, cos, epsilon, halfPi, sin, pi, sqrt, sqrt2} from \"./math.js\";\n\nvar pi_sqrt2 = pi / sqrt2;\n\nexport function larriveeRaw(lambda, phi) {\n  return [\n    lambda * (1 + sqrt(cos(phi))) / 2,\n    phi / (cos(phi / 2) * cos(lambda / 6))\n  ];\n}\n\nlarriveeRaw.invert = function(x, y) {\n  var x0 = abs(x),\n      y0 = abs(y),\n      lambda = epsilon,\n      phi = halfPi;\n  if (y0 < pi_sqrt2) phi *= y0 / pi_sqrt2;\n  else lambda += 6 * acos(pi_sqrt2 / y0);\n  for (var i = 0; i < 25; i++) {\n    var sinPhi = sin(phi),\n        sqrtcosPhi = sqrt(cos(phi)),\n        sinPhi_2 = sin(phi / 2),\n        cosPhi_2 = cos(phi / 2),\n        sinLambda_6 = sin(lambda / 6),\n        cosLambda_6 = cos(lambda / 6),\n        f0 = 0.5 * lambda * (1 + sqrtcosPhi) - x0,\n        f1 = phi / (cosPhi_2 * cosLambda_6) - y0,\n        df0dPhi = sqrtcosPhi ? -0.25 * lambda * sinPhi / sqrtcosPhi : 0,\n        df0dLambda = 0.5 * (1 + sqrtcosPhi),\n        df1dPhi = (1 + 0.5 * phi * sinPhi_2 / cosPhi_2) / (cosPhi_2 * cosLambda_6),\n        df1dLambda = (phi / cosPhi_2) * (sinLambda_6 / 6) / (cosLambda_6 * cosLambda_6),\n        denom = df0dPhi * df1dLambda - df1dPhi * df0dLambda,\n        dPhi = (f0 * df1dLambda - f1 * df0dLambda) / denom,\n        dLambda = (f1 * df0dPhi - f0 * df1dPhi) / denom;\n    phi -= dPhi;\n    lambda -= dLambda;\n    if (abs(dPhi) < epsilon && abs(dLambda) < epsilon) break;\n  }\n  return [x < 0 ? -lambda : lambda, y < 0 ? -phi : phi];\n};\n\nexport default function() {\n  return projection(larriveeRaw)\n      .scale(97.2672);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}