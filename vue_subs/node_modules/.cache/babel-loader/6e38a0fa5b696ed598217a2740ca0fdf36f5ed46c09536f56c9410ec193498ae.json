{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __read, __spread } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { system } from \"../System\";\nimport { registry } from \"../Registry\";\nimport { Container } from \"../Container\";\nimport { Component } from \"../Component\";\nimport { Paper } from \"../rendering/Paper\";\nimport { SVGContainer, svgContainers } from \"../rendering/SVGContainer\";\nimport { FocusFilter } from \"../rendering/filters/FocusFilter\";\nimport { Preloader } from \"../elements/Preloader\";\nimport { AmChartsLogo } from \"../elements/AmChartsLogo\";\nimport { Tooltip } from \"../elements/Tooltip\";\nimport { Disposer, MultiDisposer } from \"../utils/Disposer\";\nimport { percent } from \"./Percent\";\nimport { options } from \"../Options\";\nimport * as $array from \"./Array\";\nimport * as $type from \"./Type\";\nimport * as $dom from \"./DOM\";\nimport * as $utils from \"./Utils\";\nimport * as $log from \"./Log\";\n/**\r\n * ============================================================================\r\n * INSTANTIATION FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates all HTML and SVG containers needed for the chart instance, as well\r\n * as the new [[Sprite]] (as specified in `classType` parameter).\r\n *\r\n * @param htmlElement  A container to creat elements in\r\n * @param classType    A class definition of the new element to create\r\n * @return Newly-created Sprite object\r\n */\nfunction createChild(htmlElement, classType) {\n  var htmlContainer = $dom.getElement(htmlElement);\n  // If there's no container available yet, we create a fake one\n  var tmpContainer = false;\n  if (!htmlContainer) {\n    htmlContainer = document.createElement(\"div\");\n    htmlContainer.style.width = \"200px\";\n    htmlContainer.style.height = \"200px\";\n    htmlContainer.style.top = \"0\";\n    htmlContainer.style.left = \"0\";\n    htmlContainer.style.visibility = \"hidden\";\n    htmlContainer.style.position = \"absolute\";\n    document.body.appendChild(htmlContainer);\n    tmpContainer = true;\n  }\n  if (htmlContainer) {\n    htmlContainer.innerHTML = \"\";\n    //htmlContainer.style.overflow = \"hidden\";\n    var svgDiv_1 = new SVGContainer(htmlContainer);\n    var paper = new Paper(svgDiv_1.SVGContainer, \"svg-\" + (svgContainers.length - 1));\n    // the approach with masks is chosen because overflow:visible is set on SVG element in order tooltips could go outside\n    // svg area - this is often needed when working with small charts.\n    // main container which holds content container and tooltips container\n    var container_1 = new Container();\n    container_1.htmlContainer = htmlContainer;\n    container_1.svgContainer = svgDiv_1;\n    container_1.width = percent(100);\n    container_1.height = percent(100);\n    container_1.background.fillOpacity = 0;\n    container_1.paper = paper;\n    paper.append(container_1.group);\n    // Set up moving to proper element container if it's not yet ready at call time\n    if (tmpContainer) {\n      $dom.ready(function () {\n        container_1.moveHtmlContainer(htmlElement);\n      });\n    }\n    // this is set from parent container, but this one doesn't have, so do it manually.\n    container_1.relativeWidth = 1;\n    container_1.relativeHeight = 1;\n    svgDiv_1.container = container_1;\n    // creating classType instance\n    var sprite_1 = container_1.createChild(classType);\n    sprite_1.topParent = container_1;\n    var uid = sprite_1.uid;\n    registry.invalidSprites[uid] = [];\n    registry.invalidDatas[uid] = [];\n    registry.invalidPositions[uid] = [];\n    registry.invalidLayouts[uid] = [];\n    container_1.baseId = uid;\n    sprite_1.isBaseSprite = true;\n    sprite_1.focusFilter = new FocusFilter();\n    registry.baseSprites.push(sprite_1);\n    registry.baseSpritesByUid[uid] = sprite_1;\n    sprite_1.maskRectangle = {\n      x: 0,\n      y: 0,\n      width: Math.max(svgDiv_1.width || 0, 0),\n      height: Math.max(svgDiv_1.height || 0, 0)\n    };\n    // this solves issues with display:none, as all children are measured as 0x0\n    container_1.events.on(\"maxsizechanged\", function (event) {\n      if (event.previousWidth == 0 || event.previousHeight == 0) {\n        container_1.deepInvalidate();\n      }\n      if (sprite_1.maskRectangle) {\n        sprite_1.maskRectangle = {\n          x: 0,\n          y: 0,\n          width: Math.max(svgDiv_1.width || 0, 0),\n          height: Math.max(svgDiv_1.height || 0, 0)\n        };\n      }\n    });\n    var loopTimer_1 = null;\n    // Checks to see whether the chart was properly disposed or not\n    var loop_1 = function () {\n      if (!sprite_1.isDisposed()) {\n        if ($dom.getRoot(sprite_1.dom) == null) {\n          if (options.autoDispose) {\n            container_1.htmlContainer = undefined;\n            svgDiv_1.htmlElement = undefined;\n            sprite_1.dispose();\n          } else {\n            $log.warn(\"Chart was not disposed\", sprite_1.uid);\n          }\n          loopTimer_1 = null;\n        } else {\n          loopTimer_1 = window.setTimeout(loop_1, 1000);\n        }\n      } else {\n        loopTimer_1 = null;\n      }\n    };\n    loop_1();\n    sprite_1.addDisposer(new Disposer(function () {\n      if (loopTimer_1 !== null) {\n        clearTimeout(loopTimer_1);\n      }\n      $array.remove(registry.baseSprites, sprite_1);\n      registry.baseSpritesByUid[sprite_1.uid] = undefined;\n    }));\n    // TODO figure out a better way of doing this\n    sprite_1.addDisposer(container_1);\n    // tooltip container\n    var tooltipContainer_1 = container_1.createChild(Container);\n    tooltipContainer_1.topParent = container_1;\n    tooltipContainer_1.width = percent(100);\n    tooltipContainer_1.height = percent(100);\n    tooltipContainer_1.isMeasured = false;\n    container_1.tooltipContainer = tooltipContainer_1;\n    sprite_1.tooltip = new Tooltip();\n    sprite_1.tooltip.hide(0);\n    sprite_1.tooltip.setBounds({\n      x: 0,\n      y: 0,\n      width: tooltipContainer_1.maxWidth,\n      height: tooltipContainer_1.maxHeight\n    });\n    tooltipContainer_1.events.on(\"maxsizechanged\", function () {\n      $type.getValue(sprite_1.tooltip).setBounds({\n        x: 0,\n        y: 0,\n        width: tooltipContainer_1.maxWidth,\n        height: tooltipContainer_1.maxHeight\n      });\n    }, undefined, false);\n    //@todo: maybe we don't need to create one by default but only on request?\n    var preloader_1 = new Preloader();\n    preloader_1.events.on(\"inited\", function () {\n      preloader_1.__disabled = true;\n    }, undefined, false);\n    container_1.preloader = preloader_1;\n    //if (!options.commercialLicense) {\n    if (sprite_1 instanceof Container && !sprite_1.hasLicense()) {\n      var logo_1 = tooltipContainer_1.createChild(AmChartsLogo);\n      tooltipContainer_1.events.on(\"maxsizechanged\", function (ev) {\n        if (tooltipContainer_1.maxWidth <= 100 || tooltipContainer_1.maxHeight <= 50) {\n          logo_1.hide();\n        } else if (logo_1.isHidden || logo_1.isHiding) {\n          logo_1.show();\n        }\n      }, undefined, false);\n      sprite_1.logo = logo_1;\n      logo_1.align = \"left\";\n      logo_1.valign = \"bottom\";\n    }\n    $utils.used(sprite_1.numberFormatter); // need to create one.\n    // Set this as an autonomouse instance\n    // Controls like Preloader, Export will use this.\n    container_1.isStandaloneInstance = true;\n    if (options.onlyShowOnViewport) {\n      if (!$dom.isElementInViewport(htmlContainer, options.viewportTarget)) {\n        sprite_1.__disabled = true;\n        sprite_1.tooltipContainer.__disabled = true;\n        var disposers = [$dom.addEventListener(window, \"DOMContentLoaded\", function () {\n          viewPortHandler(sprite_1);\n        }), $dom.addEventListener(window, \"load\", function () {\n          viewPortHandler(sprite_1);\n        }), $dom.addEventListener(window, \"resize\", function () {\n          viewPortHandler(sprite_1);\n        }), $dom.addEventListener(window, \"scroll\", function () {\n          viewPortHandler(sprite_1);\n        })];\n        if (options.viewportTarget) {\n          var targets = $type.isArray(options.viewportTarget) ? options.viewportTarget : options.viewportTarget ? [options.viewportTarget] : [];\n          for (var i = 0; i < targets.length; i++) {\n            var target = targets[i];\n            disposers.push($dom.addEventListener(target, \"resize\", function () {\n              viewPortHandler(sprite_1);\n            }));\n            disposers.push($dom.addEventListener(target, \"scroll\", function () {\n              viewPortHandler(sprite_1);\n            }));\n          }\n        }\n        var disposer = new MultiDisposer(disposers);\n        sprite_1.addDisposer(disposer);\n        sprite_1.vpDisposer = disposer;\n      } else if (options.queue) {\n        addToQueue(sprite_1);\n      }\n    } else if (options.queue) {\n      addToQueue(sprite_1);\n    }\n    return sprite_1;\n  } else {\n    system.log(\"html container not found\");\n    throw new Error(\"html container not found\");\n  }\n}\n/**\r\n * Disposes all of the currently active charts.\r\n */\nexport function disposeAllCharts() {\n  while (registry.baseSprites.length !== 0) {\n    registry.baseSprites.pop().dispose();\n  }\n}\nexport function addToQueue(sprite) {\n  if (registry.queue.indexOf(sprite) == -1) {\n    sprite.__disabled = true;\n    sprite.tooltipContainer.__disabled = true;\n    sprite.events.disableType(\"appeared\");\n    if (registry.queue.length == 0) {\n      registry.events.once(\"exitframe\", function () {\n        queueHandler(sprite);\n      });\n      system.requestFrame();\n    }\n    sprite.addDisposer(new Disposer(function () {\n      removeFromQueue(sprite);\n    }));\n    registry.queue.push(sprite);\n  }\n}\nexport function removeFromQueue(sprite) {\n  var index = registry.queue.indexOf(sprite);\n  if (index >= 0) {\n    registry.queue.splice(registry.queue.indexOf(sprite), 1);\n    var nextSprite = registry.queue[index];\n    if (nextSprite) {\n      queueHandler(nextSprite);\n    }\n  }\n}\n/**\r\n * Checks whether the chart was not initialized fully due to setting\r\n * of `onlyShowOnViewport`. If it hasn't and is now in the viewport\r\n * the chart will be initialized.\r\n *\r\n * @since 4.9.12\r\n * @param  sprite  Top-level chart object\r\n */\nexport function viewPortHandler(sprite) {\n  if (sprite.__disabled && $dom.isElementInViewport(sprite.htmlContainer, options.viewportTarget)) {\n    if (sprite.vpDisposer) {\n      sprite.vpDisposer.dispose();\n    }\n    addToQueue(sprite);\n  }\n}\nexport function queueHandler(sprite) {\n  if (sprite && sprite.tooltipContainer) {\n    sprite.__disabled = false;\n    sprite.tooltipContainer.__disabled = false;\n    sprite.events.enableType(\"appeared\");\n    sprite.dispatch(\"removedfromqueue\");\n    if (sprite.showOnInit) {\n      sprite.events.on(\"appeared\", function () {\n        removeFromQueue(sprite);\n      });\n    }\n    if (sprite.vpDisposer) {\n      sprite.vpDisposer.dispose();\n    }\n    if (sprite instanceof Container) {\n      sprite.invalidateLabels();\n    }\n    if (sprite.tooltipContainer) {\n      sprite.tooltipContainer.invalidateLayout();\n    }\n    if (sprite instanceof Component) {\n      sprite.invalidateData();\n      sprite.reinit();\n      sprite.events.once(\"datavalidated\", function () {\n        if (sprite.showOnInit) {\n          sprite.appear();\n        } else {\n          removeFromQueue(sprite);\n        }\n      });\n    } else {\n      sprite.reinit();\n      sprite.events.once(\"inited\", function () {\n        removeFromQueue(sprite);\n      });\n      if (sprite.showOnInit) {\n        sprite.appear();\n      }\n    }\n  }\n}\n/**\r\n * A shortcut to creating a chart instance.\r\n *\r\n * The first argument is either a reference to or an id of a DOM element to be\r\n * used as a container for the chart.\r\n *\r\n * The second argument is the type reference of the chart type. (for plain\r\n * JavaScript users this can also be a string indicating chart type)\r\n *\r\n * ```TypeScript\r\n * let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n * ```\r\n * ```JavaScript\r\n * // Can pass in chart type reference like this:\r\n * var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // ... or chart class type as a string:\r\n * var chart = am4core.create(\"chartdiv\", \"PieChart\");\r\n * ```\r\n *\r\n * @param htmlElement  Reference or id of the target container element\r\n * @param classType    Class type of the target chart type\r\n * @return Chart instance\r\n */\nexport function create(htmlElement, classType) {\n  // This is a nasty hack for the benefit of vanilla JS users, who do not\n  // enjoy benefits of type-check anyway.\n  // We're allowing passing in a name of the class rather than type reference\n  // itself.\n  var classError;\n  if ($type.isString(classType)) {\n    if ($type.hasValue(registry.registeredClasses[classType])) {\n      classType = registry.registeredClasses[classType];\n    } else {\n      classType = registry.registeredClasses[\"Container\"];\n      classError = new Error(\"Class [\" + classType + \"] is not loaded.\");\n    }\n  }\n  // Create the chart\n  var chart = createChild(htmlElement, classType);\n  // Error?\n  if (classError) {\n    chart.raiseCriticalError(classError);\n  }\n  return chart;\n}\n/**\r\n * A shortcut to creating a chart from a config object.\r\n *\r\n * Example:\r\n *\r\n * ```TypeScript\r\n * let chart am4core.createFromConfig({ ... }, \"chartdiv\", am4charts.XYChart );\r\n * ```\r\n * ```JavaScript\r\n * var chart am4core.createFromConfig({ ... }, \"chartdiv\", \"XYChart\" );\r\n * ```\r\n *\r\n * If `chartType` parameter is not supplied it must be set in a config object,\r\n * via reference to chart type, e.g.:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * Or via string: (if you are using JavaScript)\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * A `container` can either be a reference to an HTML container to put chart\r\n * in, or it's unique id.\r\n *\r\n * If `container` is not specified, it must be included in the config object:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * @param config       Config object in property/value pairs\r\n * @param htmlElement  Container reference or ID\r\n * @param objectType   Chart type\r\n * @return A newly created chart instance\r\n * @todo Throw exception if type is not correct\r\n */\nexport function createFromConfig(config, htmlElement, classType) {\n  // Extract chart type from config if necessary\n  if (!$type.hasValue(classType)) {\n    classType = config.type;\n    delete config.type;\n  }\n  // Extract element from config if necessary\n  if (!$type.hasValue(htmlElement)) {\n    htmlElement = config.container;\n    delete config.container;\n  }\n  // Check if we need to extract actual type reference\n  var finalType;\n  var classError;\n  if ($type.isString(classType) && $type.hasValue(registry.registeredClasses[classType])) {\n    finalType = registry.registeredClasses[classType];\n  } else if (typeof classType !== \"function\") {\n    finalType = Container;\n    classError = new Error(\"Class [\" + classType + \"] is not loaded.\");\n  } else {\n    finalType = classType;\n  }\n  // Create the chart\n  var chart = createChild(htmlElement, finalType);\n  // Set config\n  if (classError) {\n    chart.raiseCriticalError(classError);\n  } else {\n    chart.config = config;\n  }\n  return chart;\n}\n/**\r\n * Useful in creating real queues form mult-chart creation.\r\n *\r\n * Accepts a reference to a function which crates and returns actual chart\r\n * object.\r\n *\r\n * It returns a `Promise` which you can use to catch chart instance once it's\r\n * created.\r\n *\r\n * ```TypeScript\r\n * am4core.createDeferred(function(div) {\r\n *   // Create first chart\r\n *   let chart = am4core.create(div, am4charts.XYChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv1\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n *\r\n * am4core.createDeferred(function(div) {\r\n *   // Create second chart\r\n *   let chart = am4core.create(div, am4charts.PieChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv2\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * am4core.createDeferred(function(div) {\r\n *   // Create first chart\r\n *   var chart = am4core.create(div, am4charts.XYChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv1\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n *\r\n * am4core.createDeferred(function(div) {\r\n *   // Create second chart\r\n *   var chart = am4core.create(div, am4charts.PieChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv2\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n * ```\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/performance/#Deferred_daisy_chained_instantiation} for more information\r\n * @since 4.10.0\r\n * @param  callback  Callback function that creates chart\r\n * @param  scope     Scope to call callback in\r\n * @param  ...rest   Parameters to pass into callback\r\n * @return           Promise with chart instance\r\n */\nexport function createDeferred(callback, scope) {\n  var rest = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    rest[_i - 2] = arguments[_i];\n  }\n  return new Promise(function (resolve, reject) {\n    registry.deferred.push({\n      scope: scope,\n      callback: callback,\n      args: rest,\n      resolve: resolve\n    });\n    if (registry.deferred.length == 1) {\n      processNextDeferred();\n    }\n  });\n}\nfunction processNextDeferred() {\n  var _a;\n  var next = registry.deferred[0];\n  if (next) {\n    var sprite_2 = (_a = next.callback).call.apply(_a, __spread([next.scope], next.args));\n    sprite_2.events.on(\"ready\", function () {\n      next.resolve(sprite_2);\n      registry.deferred.shift();\n      if (options.deferredDelay) {\n        setTimeout(processNextDeferred, options.deferredDelay);\n      } else {\n        processNextDeferred();\n      }\n    });\n  }\n}\n/**\r\n * Applies a theme to System, and subsequently all chart instances created\r\n * from that point forward.\r\n *\r\n * amCharts supports multiple themes. Calling `useTheme` multiple times will\r\n * make the System apply multiple themes, rather than overwrite previously\r\n * set one.\r\n *\r\n * This enables combining features from multiple themes on the same chart.\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n * ```JavaScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n *\r\n * The above will apply both the Material color and animation options to all\r\n * charts created.\r\n *\r\n * @param value  A reference to a theme\r\n */\nexport function useTheme(value) {\n  if (registry.themes.indexOf(value) === -1) {\n    registry.themes.push(value);\n  }\n}\n/**\r\n * Removes a theme from \"active themes\" list, so it won't get applied to any\r\n * charts created subsequently.\r\n *\r\n * @param value  A reference to a theme\r\n */\nexport function unuseTheme(value) {\n  $array.remove(registry.themes, value);\n}\n/**\r\n * Removes all \"active\" themes. Any charts created subsequently will not have\r\n * any theme applied to them.\r\n */\nexport function unuseAllThemes() {\n  registry.themes = [];\n}\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @since 4.5.16\r\n * @param  license  License key\r\n */\nexport function addLicense(license) {\n  options.licenses.push(license);\n}","map":{"version":3,"names":["system","registry","Container","Component","Paper","SVGContainer","svgContainers","FocusFilter","Preloader","AmChartsLogo","Tooltip","Disposer","MultiDisposer","percent","options","$array","$type","$dom","$utils","$log","createChild","htmlElement","classType","htmlContainer","getElement","tmpContainer","document","createElement","style","width","height","top","left","visibility","position","body","appendChild","innerHTML","svgDiv_1","paper","length","container_1","svgContainer","background","fillOpacity","append","group","ready","moveHtmlContainer","relativeWidth","relativeHeight","container","sprite_1","topParent","uid","invalidSprites","invalidDatas","invalidPositions","invalidLayouts","baseId","isBaseSprite","focusFilter","baseSprites","push","baseSpritesByUid","maskRectangle","x","y","Math","max","events","on","event","previousWidth","previousHeight","deepInvalidate","loopTimer_1","loop_1","isDisposed","getRoot","dom","autoDispose","undefined","dispose","warn","window","setTimeout","addDisposer","clearTimeout","remove","tooltipContainer_1","isMeasured","tooltipContainer","tooltip","hide","setBounds","maxWidth","maxHeight","getValue","preloader_1","__disabled","preloader","hasLicense","logo_1","ev","isHidden","isHiding","show","logo","align","valign","used","numberFormatter","isStandaloneInstance","onlyShowOnViewport","isElementInViewport","viewportTarget","disposers","addEventListener","viewPortHandler","targets","isArray","i","target","disposer","vpDisposer","queue","addToQueue","log","Error","disposeAllCharts","pop","sprite","indexOf","disableType","once","queueHandler","requestFrame","removeFromQueue","index","splice","nextSprite","enableType","dispatch","showOnInit","invalidateLabels","invalidateLayout","invalidateData","reinit","appear","create","classError","isString","hasValue","registeredClasses","chart","raiseCriticalError","createFromConfig","config","type","finalType","createDeferred","callback","scope","rest","_i","arguments","Promise","resolve","reject","deferred","args","processNextDeferred","next","sprite_2","_a","call","apply","__spread","shift","deferredDelay","useTheme","value","themes","unuseTheme","unuseAllThemes","addLicense","license","licenses"],"sources":["../../../../../src/.internal/core/utils/Instance.ts"],"sourcesContent":["/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { system } from \"../System\";\r\nimport { registry } from \"../Registry\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Container } from \"../Container\";\r\nimport { Component } from \"../Component\";\r\nimport { Paper } from \"../rendering/Paper\";\r\nimport { SVGContainer, svgContainers } from \"../rendering/SVGContainer\";\r\nimport { FocusFilter } from \"../rendering/filters/FocusFilter\";\r\nimport { Preloader } from \"../elements/Preloader\";\r\nimport { AmChartsLogo } from \"../elements/AmChartsLogo\";\r\nimport { ITheme } from \"../../themes/ITheme\";\r\nimport { Tooltip } from \"../elements/Tooltip\";\r\nimport { Disposer, MultiDisposer } from \"../utils/Disposer\";\r\nimport { percent } from \"./Percent\";\r\nimport { options } from \"../Options\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\nimport * as $dom from \"./DOM\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $log from \"./Log\";\r\n\r\n/**\r\n * ============================================================================\r\n * INSTANTIATION FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates all HTML and SVG containers needed for the chart instance, as well\r\n * as the new [[Sprite]] (as specified in `classType` parameter).\r\n *\r\n * @param htmlElement  A container to creat elements in\r\n * @param classType    A class definition of the new element to create\r\n * @return Newly-created Sprite object\r\n */\r\nfunction createChild<T extends Sprite>(htmlElement: $type.Optional<HTMLElement | string>, classType: { new(): T; }): T {\r\n\tlet htmlContainer = $dom.getElement(htmlElement);\r\n\r\n\t// If there's no container available yet, we create a fake one\r\n\tlet tmpContainer = false;\r\n\tif (!htmlContainer) {\r\n\t\thtmlContainer = document.createElement(\"div\");\r\n\t\thtmlContainer.style.width = \"200px\";\r\n\t\thtmlContainer.style.height = \"200px\";\r\n\t\thtmlContainer.style.top = \"0\";\r\n\t\thtmlContainer.style.left = \"0\";\r\n\t\thtmlContainer.style.visibility = \"hidden\";\r\n\t\thtmlContainer.style.position = \"absolute\";\r\n\t\tdocument.body.appendChild(htmlContainer);\r\n\t\ttmpContainer = true;\r\n\t}\r\n\r\n\tif (htmlContainer) {\r\n\r\n\t\thtmlContainer.innerHTML = \"\";\r\n\t\t//htmlContainer.style.overflow = \"hidden\";\r\n\r\n\t\tlet svgDiv = new SVGContainer(htmlContainer);\r\n\t\tlet paper = new Paper(svgDiv.SVGContainer, \"svg-\" + (svgContainers.length - 1));\r\n\r\n\t\t// the approach with masks is chosen because overflow:visible is set on SVG element in order tooltips could go outside\r\n\t\t// svg area - this is often needed when working with small charts.\r\n\r\n\t\t// main container which holds content container and tooltips container\r\n\t\tlet container = new Container();\r\n\t\tcontainer.htmlContainer = htmlContainer;\r\n\t\tcontainer.svgContainer = svgDiv;\r\n\t\tcontainer.width = percent(100);\r\n\t\tcontainer.height = percent(100);\r\n\t\tcontainer.background.fillOpacity = 0;\r\n\t\tcontainer.paper = paper;\r\n\t\tpaper.append(container.group);\r\n\r\n\t\t// Set up moving to proper element container if it's not yet ready at call time\r\n\t\tif (tmpContainer) {\r\n\t\t\t$dom.ready(() => {\r\n\t\t\t\tcontainer.moveHtmlContainer(htmlElement);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// this is set from parent container, but this one doesn't have, so do it manually.\r\n\t\tcontainer.relativeWidth = 1;\r\n\t\tcontainer.relativeHeight = 1;\r\n\r\n\t\tsvgDiv.container = container;\r\n\r\n\t\t// creating classType instance\r\n\t\tlet sprite = container.createChild(classType);\r\n\t\tsprite.topParent = container;\r\n\t\tlet uid = sprite.uid;\r\n\r\n\t\tregistry.invalidSprites[uid] = [];\r\n\t\tregistry.invalidDatas[uid] = [];\r\n\t\tregistry.invalidPositions[uid] = [];\r\n\t\tregistry.invalidLayouts[uid] = [];\r\n\r\n\t\tcontainer.baseId = uid;\r\n\r\n\t\tsprite.isBaseSprite = true;\r\n\t\tsprite.focusFilter = new FocusFilter();\r\n\t\tregistry.baseSprites.push(sprite);\r\n\t\tregistry.baseSpritesByUid[uid] = sprite;\r\n\r\n\t\tsprite.maskRectangle = { x: 0, y: 0, width: Math.max(svgDiv.width || 0, 0), height: Math.max(svgDiv.height || 0, 0) };\r\n\r\n\t\t// this solves issues with display:none, as all children are measured as 0x0\r\n\t\tcontainer.events.on(\"maxsizechanged\", (event) => {\r\n\t\t\tif (event.previousWidth == 0 || event.previousHeight == 0) {\r\n\t\t\t\tcontainer.deepInvalidate();\r\n\t\t\t}\r\n\t\t\tif (sprite.maskRectangle) {\r\n\t\t\t\tsprite.maskRectangle = { x: 0, y: 0, width: Math.max(svgDiv.width || 0, 0), height: Math.max(svgDiv.height || 0, 0) };\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet loopTimer: number | null = null;\r\n\r\n\t\t// Checks to see whether the chart was properly disposed or not\r\n\t\tconst loop = () => {\r\n\t\t\tif (!sprite.isDisposed()) {\r\n\t\t\t\tif ($dom.getRoot(sprite.dom) == null) {\r\n\t\t\t\t\tif (options.autoDispose) {\r\n\t\t\t\t\t\tcontainer.htmlContainer = undefined;\r\n\t\t\t\t\t\tsvgDiv.htmlElement = undefined;\r\n\t\t\t\t\t\tsprite.dispose();\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$log.warn(\"Chart was not disposed\", sprite.uid);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tloopTimer = null;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tloopTimer = window.setTimeout(loop, 1000);\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tloopTimer = null;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tloop();\r\n\r\n\t\tsprite.addDisposer(new Disposer(() => {\r\n\t\t\tif (loopTimer !== null) {\r\n\t\t\t\tclearTimeout(loopTimer);\r\n\t\t\t}\r\n\t\t\t$array.remove(registry.baseSprites, sprite);\r\n\t\t\tregistry.baseSpritesByUid[sprite.uid] = undefined;\r\n\t\t}));\r\n\r\n\t\t// TODO figure out a better way of doing this\r\n\t\tsprite.addDisposer(container);\r\n\r\n\t\t// tooltip container\r\n\t\tlet tooltipContainer: Container = container.createChild(Container);\r\n\t\ttooltipContainer.topParent = container;\r\n\t\ttooltipContainer.width = percent(100);\r\n\t\ttooltipContainer.height = percent(100);\r\n\t\ttooltipContainer.isMeasured = false;\r\n\t\tcontainer.tooltipContainer = tooltipContainer;\r\n\r\n\t\tsprite.tooltip = new Tooltip();\r\n\t\tsprite.tooltip.hide(0);\r\n\t\tsprite.tooltip.setBounds({ x: 0, y: 0, width: tooltipContainer.maxWidth, height: tooltipContainer.maxHeight });\r\n\r\n\t\ttooltipContainer.events.on(\"maxsizechanged\", () => {\r\n\t\t\t$type.getValue(sprite.tooltip).setBounds({ x: 0, y: 0, width: tooltipContainer.maxWidth, height: tooltipContainer.maxHeight });\r\n\t\t}, undefined, false)\r\n\r\n\t\t//@todo: maybe we don't need to create one by default but only on request?\r\n\r\n\t\tlet preloader = new Preloader();\r\n\t\tpreloader.events.on(\"inited\", () => {\r\n\t\t\tpreloader.__disabled = true;\r\n\t\t}, undefined, false);\r\n\t\tcontainer.preloader = preloader;\r\n\r\n\t\t//if (!options.commercialLicense) {\r\n\t\tif (sprite instanceof Container && !sprite.hasLicense()) {\r\n\t\t\tlet logo = tooltipContainer.createChild(AmChartsLogo);\r\n\t\t\ttooltipContainer.events.on(\"maxsizechanged\", (ev) => {\r\n\t\t\t\tif ((tooltipContainer.maxWidth <= 100) || (tooltipContainer.maxHeight <= 50)) {\r\n\t\t\t\t\tlogo.hide();\r\n\t\t\t\t}\r\n\t\t\t\telse if (logo.isHidden || logo.isHiding) {\r\n\t\t\t\t\tlogo.show();\r\n\t\t\t\t}\r\n\t\t\t}, undefined, false);\r\n\t\t\tsprite.logo = logo;\r\n\t\t\tlogo.align = \"left\";\r\n\t\t\tlogo.valign = \"bottom\";\r\n\t\t}\r\n\r\n\t\t$utils.used(sprite.numberFormatter); // need to create one.\r\n\r\n\t\t// Set this as an autonomouse instance\r\n\t\t// Controls like Preloader, Export will use this.\r\n\t\tcontainer.isStandaloneInstance = true;\r\n\r\n\t\tif (options.onlyShowOnViewport) {\r\n\t\t\tif (!$dom.isElementInViewport(htmlContainer, options.viewportTarget)) {\r\n\t\t\t\tsprite.__disabled = true;\r\n\t\t\t\tsprite.tooltipContainer.__disabled = true;\r\n\r\n\t\t\t\tlet disposers = [\r\n\t\t\t\t\t$dom.addEventListener(window, \"DOMContentLoaded\", function() { viewPortHandler(sprite); }),\r\n\t\t\t\t\t$dom.addEventListener(window, \"load\", function() { viewPortHandler(sprite); }),\r\n\t\t\t\t\t$dom.addEventListener(window, \"resize\", function() { viewPortHandler(sprite); }),\r\n\t\t\t\t\t$dom.addEventListener(window, \"scroll\", function() { viewPortHandler(sprite); })\r\n\t\t\t\t];\r\n\r\n\t\t\t\tif (options.viewportTarget) {\r\n\t\t\t\t\tconst targets = $type.isArray(options.viewportTarget) ? options.viewportTarget : options.viewportTarget ? [options.viewportTarget] : [];\r\n\t\t\t\t\tfor (let i = 0; i < targets.length; i++) {\r\n\t\t\t\t\t\tconst target = targets[i];\r\n\t\t\t\t\t\tdisposers.push($dom.addEventListener(target, \"resize\", function() { viewPortHandler(sprite); }));\r\n\t\t\t\t\t\tdisposers.push($dom.addEventListener(target, \"scroll\", function() { viewPortHandler(sprite); }));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet disposer = new MultiDisposer(disposers);\r\n\r\n\t\t\t\tsprite.addDisposer(disposer);\r\n\t\t\t\tsprite.vpDisposer = disposer;\r\n\t\t\t}\r\n\t\t\telse if (options.queue) {\r\n\t\t\t\taddToQueue(sprite);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (options.queue) {\r\n\t\t\taddToQueue(sprite);\r\n\t\t}\r\n\r\n\t\treturn sprite;\r\n\t}\r\n\telse {\r\n\t\tsystem.log(\"html container not found\");\r\n\t\tthrow new Error(\"html container not found\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Disposes all of the currently active charts.\r\n */\r\nexport function disposeAllCharts(): void {\r\n\twhile (registry.baseSprites.length !== 0) {\r\n\t\tregistry.baseSprites.pop().dispose();\r\n\t}\r\n}\r\n\r\nexport function addToQueue(sprite: Sprite) {\r\n\tif (registry.queue.indexOf(sprite) == -1) {\r\n\t\tsprite.__disabled = true;\r\n\t\tsprite.tooltipContainer.__disabled = true;\r\n\t\tsprite.events.disableType(\"appeared\");\r\n\r\n\t\tif (registry.queue.length == 0) {\r\n\t\t\tregistry.events.once(\"exitframe\", () => {\r\n\t\t\t\tqueueHandler(sprite);\r\n\t\t\t})\r\n\t\t\tsystem.requestFrame();\r\n\t\t}\r\n\r\n\t\tsprite.addDisposer(new Disposer(() => {\r\n\t\t\tremoveFromQueue(sprite);\r\n\t\t}))\r\n\r\n\t\tregistry.queue.push(sprite);\r\n\t}\r\n}\r\n\r\nexport function removeFromQueue(sprite: Sprite) {\r\n\tlet index = registry.queue.indexOf(sprite);\r\n\tif (index >= 0) {\r\n\t\tregistry.queue.splice(registry.queue.indexOf(sprite), 1);\r\n\t\tlet nextSprite = registry.queue[index];\r\n\t\tif (nextSprite) {\r\n\t\t\tqueueHandler(nextSprite);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks whether the chart was not initialized fully due to setting\r\n * of `onlyShowOnViewport`. If it hasn't and is now in the viewport\r\n * the chart will be initialized.\r\n *\r\n * @since 4.9.12\r\n * @param  sprite  Top-level chart object\r\n */\r\nexport function viewPortHandler(sprite: Sprite) {\r\n\tif (sprite.__disabled && $dom.isElementInViewport(sprite.htmlContainer, options.viewportTarget)) {\r\n\r\n\t\tif (sprite.vpDisposer) {\r\n\t\t\tsprite.vpDisposer.dispose();\r\n\t\t}\r\n\r\n\t\taddToQueue(sprite);\r\n\t}\r\n}\r\n\r\nexport function queueHandler(sprite: Sprite) {\r\n\tif (sprite && sprite.tooltipContainer) {\r\n\t\tsprite.__disabled = false;\r\n\t\tsprite.tooltipContainer.__disabled = false;\r\n\t\tsprite.events.enableType(\"appeared\");\r\n\t\tsprite.dispatch(\"removedfromqueue\");\r\n\r\n\t\tif (sprite.showOnInit) {\r\n\t\t\tsprite.events.on(\"appeared\", () => {\r\n\t\t\t\tremoveFromQueue(sprite);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (sprite.vpDisposer) {\r\n\t\t\tsprite.vpDisposer.dispose();\r\n\t\t}\r\n\t\tif (sprite instanceof Container) {\r\n\t\t\tsprite.invalidateLabels();\r\n\t\t}\r\n\r\n\t\tif (sprite.tooltipContainer) {\r\n\t\t\tsprite.tooltipContainer.invalidateLayout();\r\n\t\t}\r\n\t\tif (sprite instanceof Component) {\r\n\t\t\tsprite.invalidateData();\r\n\t\t\tsprite.reinit();\r\n\r\n\t\t\tsprite.events.once(\"datavalidated\", () => {\r\n\t\t\t\tif (sprite.showOnInit) {\r\n\t\t\t\t\tsprite.appear();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tremoveFromQueue(sprite);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsprite.reinit();\r\n\t\t\tsprite.events.once(\"inited\", () => {\r\n\t\t\t\tremoveFromQueue(sprite);\r\n\t\t\t})\r\n\t\t\tif (sprite.showOnInit) {\r\n\t\t\t\tsprite.appear();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * A shortcut to creating a chart instance.\r\n *\r\n * The first argument is either a reference to or an id of a DOM element to be\r\n * used as a container for the chart.\r\n *\r\n * The second argument is the type reference of the chart type. (for plain\r\n * JavaScript users this can also be a string indicating chart type)\r\n *\r\n * ```TypeScript\r\n * let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n * ```\r\n * ```JavaScript\r\n * // Can pass in chart type reference like this:\r\n * var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // ... or chart class type as a string:\r\n * var chart = am4core.create(\"chartdiv\", \"PieChart\");\r\n * ```\r\n *\r\n * @param htmlElement  Reference or id of the target container element\r\n * @param classType    Class type of the target chart type\r\n * @return Chart instance\r\n */\r\nexport function create<T extends Sprite>(htmlElement: $type.Optional<HTMLElement | string>, classType: { new(): T; }): T {\r\n\r\n\t// This is a nasty hack for the benefit of vanilla JS users, who do not\r\n\t// enjoy benefits of type-check anyway.\r\n\t// We're allowing passing in a name of the class rather than type reference\r\n\t// itself.\r\n\tlet classError: $type.Optional<Error>;\r\n\tif ($type.isString(classType)) {\r\n\t\tif ($type.hasValue(registry.registeredClasses[classType])) {\r\n\t\t\tclassType = registry.registeredClasses[classType];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tclassType = registry.registeredClasses[\"Container\"];\r\n\t\t\tclassError = new Error(\"Class [\" + classType + \"] is not loaded.\");\r\n\t\t}\r\n\t}\r\n\r\n\t// Create the chart\r\n\tlet chart = createChild(htmlElement, classType);\r\n\r\n\t// Error?\r\n\tif (classError) {\r\n\t\tchart.raiseCriticalError(classError);\r\n\t}\r\n\r\n\treturn chart;\r\n\r\n}\r\n\r\n/**\r\n * A shortcut to creating a chart from a config object.\r\n *\r\n * Example:\r\n *\r\n * ```TypeScript\r\n * let chart am4core.createFromConfig({ ... }, \"chartdiv\", am4charts.XYChart );\r\n * ```\r\n * ```JavaScript\r\n * var chart am4core.createFromConfig({ ... }, \"chartdiv\", \"XYChart\" );\r\n * ```\r\n *\r\n * If `chartType` parameter is not supplied it must be set in a config object,\r\n * via reference to chart type, e.g.:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * Or via string: (if you are using JavaScript)\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * A `container` can either be a reference to an HTML container to put chart\r\n * in, or it's unique id.\r\n *\r\n * If `container` is not specified, it must be included in the config object:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * @param config       Config object in property/value pairs\r\n * @param htmlElement  Container reference or ID\r\n * @param objectType   Chart type\r\n * @return A newly created chart instance\r\n * @todo Throw exception if type is not correct\r\n */\r\nexport function createFromConfig(config: { [index: string]: any }, htmlElement?: string | HTMLElement, classType?: { new(): Sprite; } | string): Sprite {\r\n\r\n\t// Extract chart type from config if necessary\r\n\tif (!$type.hasValue(classType)) {\r\n\t\tclassType = config.type;\r\n\t\tdelete config.type;\r\n\t}\r\n\r\n\t// Extract element from config if necessary\r\n\tif (!$type.hasValue(htmlElement)) {\r\n\t\thtmlElement = config.container;\r\n\t\tdelete config.container;\r\n\t}\r\n\r\n\t// Check if we need to extract actual type reference\r\n\tlet finalType;\r\n\tlet classError: $type.Optional<Error>;\r\n\tif ($type.isString(classType) && $type.hasValue(registry.registeredClasses[classType])) {\r\n\t\tfinalType = registry.registeredClasses[classType];\r\n\t}\r\n\telse if (typeof classType !== \"function\") {\r\n\t\tfinalType = Container;\r\n\t\tclassError = new Error(\"Class [\" + classType + \"] is not loaded.\");\r\n\t}\r\n\telse {\r\n\t\tfinalType = classType;\r\n\t}\r\n\r\n\t// Create the chart\r\n\tlet chart = createChild(htmlElement, finalType);\r\n\r\n\t// Set config\r\n\tif (classError) {\r\n\t\tchart.raiseCriticalError(classError);\r\n\t}\r\n\telse {\r\n\t\tchart.config = config;\r\n\t}\r\n\r\n\treturn chart;\r\n\r\n}\r\n\r\n/**\r\n * Useful in creating real queues form mult-chart creation.\r\n *\r\n * Accepts a reference to a function which crates and returns actual chart\r\n * object.\r\n *\r\n * It returns a `Promise` which you can use to catch chart instance once it's\r\n * created.\r\n *\r\n * ```TypeScript\r\n * am4core.createDeferred(function(div) {\r\n *   // Create first chart\r\n *   let chart = am4core.create(div, am4charts.XYChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv1\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n *\r\n * am4core.createDeferred(function(div) {\r\n *   // Create second chart\r\n *   let chart = am4core.create(div, am4charts.PieChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv2\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * am4core.createDeferred(function(div) {\r\n *   // Create first chart\r\n *   var chart = am4core.create(div, am4charts.XYChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv1\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n *\r\n * am4core.createDeferred(function(div) {\r\n *   // Create second chart\r\n *   var chart = am4core.create(div, am4charts.PieChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv2\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n * ```\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/performance/#Deferred_daisy_chained_instantiation} for more information\r\n * @since 4.10.0\r\n * @param  callback  Callback function that creates chart\r\n * @param  scope     Scope to call callback in\r\n * @param  ...rest   Parameters to pass into callback\r\n * @return           Promise with chart instance\r\n */\r\nexport function createDeferred(callback: (...args: Array<any>) => Sprite, scope?: any, ...rest: Array<any>): Promise<Sprite> {\r\n\treturn new Promise<Sprite>((resolve, reject) => {\r\n\t\tregistry.deferred.push({\r\n\t\t\tscope: scope,\r\n\t\t\tcallback: callback,\r\n\t\t\targs: rest,\r\n\t\t\tresolve: resolve\r\n\t\t});\r\n\t\tif (registry.deferred.length == 1) {\r\n\t\t\tprocessNextDeferred();\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction processNextDeferred(): void {\r\n\tlet next = registry.deferred[0];\r\n\tif (next) {\r\n\t\tlet sprite = next.callback.call(next.scope, ...next.args);\r\n\t\tsprite.events.on(\"ready\", () => {\r\n\t\t\tnext.resolve(sprite);\r\n\t\t\tregistry.deferred.shift();\r\n\t\t\tif (options.deferredDelay) {\r\n\t\t\t\tsetTimeout(processNextDeferred, options.deferredDelay);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tprocessNextDeferred();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Applies a theme to System, and subsequently all chart instances created\r\n * from that point forward.\r\n *\r\n * amCharts supports multiple themes. Calling `useTheme` multiple times will\r\n * make the System apply multiple themes, rather than overwrite previously\r\n * set one.\r\n *\r\n * This enables combining features from multiple themes on the same chart.\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n * ```JavaScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n *\r\n * The above will apply both the Material color and animation options to all\r\n * charts created.\r\n *\r\n * @param value  A reference to a theme\r\n */\r\nexport function useTheme(value: ITheme): void {\r\n\tif (registry.themes.indexOf(value) === -1) {\r\n\t\tregistry.themes.push(value);\r\n\t}\r\n}\r\n\r\n/**\r\n * Removes a theme from \"active themes\" list, so it won't get applied to any\r\n * charts created subsequently.\r\n *\r\n * @param value  A reference to a theme\r\n */\r\nexport function unuseTheme(value: ITheme): void {\r\n\t$array.remove(registry.themes, value);\r\n}\r\n\r\n/**\r\n * Removes all \"active\" themes. Any charts created subsequently will not have\r\n * any theme applied to them.\r\n */\r\nexport function unuseAllThemes(): void {\r\n\tregistry.themes = [];\r\n}\r\n\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @since 4.5.16\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license: string): void {\r\n\toptions.licenses.push(license);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}