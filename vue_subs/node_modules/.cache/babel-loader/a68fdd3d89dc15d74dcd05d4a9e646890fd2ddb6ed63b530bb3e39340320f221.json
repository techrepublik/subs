{"ast":null,"code":"import { asin, cos, sin } from \"./math.js\";\nimport parallel1 from \"./parallel1.js\";\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n  forward.invert = function (x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n  return forward;\n}\nexport default function () {\n  return parallel1(cylindricalEqualAreaRaw).parallel(38.58) // acos(sqrt(width / height / pi)) * radians\n  .scale(195.044); // width / (sqrt(width / height / pi) * 2 * pi)\n}","map":{"version":3,"names":["asin","cos","sin","parallel1","cylindricalEqualAreaRaw","phi0","cosPhi0","forward","lambda","phi","invert","x","y","parallel","scale"],"sources":["/home/josh/Documents/projects/subs/vue_subs/node_modules/d3-geo-projection/src/cylindricalEqualArea.js"],"sourcesContent":["import {asin, cos, sin} from \"./math.js\";\nimport parallel1 from \"./parallel1.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(cylindricalEqualAreaRaw)\n      .parallel(38.58) // acos(sqrt(width / height / pi)) * radians\n      .scale(195.044); // width / (sqrt(width / height / pi) * 2 * pi)\n}\n"],"mappings":"AAAA,SAAQA,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAO,WAAW;AACxC,OAAOC,SAAS,MAAM,gBAAgB;AAEtC,OAAO,SAASC,uBAAuBA,CAACC,IAAI,EAAE;EAC5C,IAAIC,OAAO,GAAGL,GAAG,CAACI,IAAI,CAAC;EAEvB,SAASE,OAAOA,CAACC,MAAM,EAAEC,GAAG,EAAE;IAC5B,OAAO,CAACD,MAAM,GAAGF,OAAO,EAAEJ,GAAG,CAACO,GAAG,CAAC,GAAGH,OAAO,CAAC;EAC/C;EAEAC,OAAO,CAACG,MAAM,GAAG,UAASC,CAAC,EAAEC,CAAC,EAAE;IAC9B,OAAO,CAACD,CAAC,GAAGL,OAAO,EAAEN,IAAI,CAACY,CAAC,GAAGN,OAAO,CAAC,CAAC;EACzC,CAAC;EAED,OAAOC,OAAO;AAChB;AAEA,eAAe,YAAW;EACxB,OAAOJ,SAAS,CAACC,uBAAuB,CAAC,CACpCS,QAAQ,CAAC,KAAK,CAAC,CAAC;EAAA,CAChBC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}