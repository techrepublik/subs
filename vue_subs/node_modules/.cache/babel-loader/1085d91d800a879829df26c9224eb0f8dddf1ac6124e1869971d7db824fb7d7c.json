{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\r\n * Module for \"Colorize\" filter.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Filter } from \"./Filter\";\nimport { registry } from \"../../Registry\";\n;\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a \"Colorize\" filter.\r\n */\nvar ColorizeFilter = /** @class */function (_super) {\n  __extends(ColorizeFilter, _super);\n  /**\r\n   * Constructor\r\n   */\n  function ColorizeFilter() {\n    var _this = _super.call(this) || this;\n    _this.className = \"ColorizeFilter\";\n    // Create elements\n    // NOTE: we do not need to add each individual element to `_disposers`\n    // because `filterPrimitives` has an event handler which automatically adds\n    // anything added to it to `_disposers`\n    _this.feColorMatrix = _this.paper.add(\"feColorMatrix\");\n    _this.feColorMatrix.attr({\n      \"type\": \"matrix\"\n    });\n    //this.feColorMatrix.setAttribute(\"in\", \"SourceAlpha\");\n    _this.filterPrimitives.push(_this.feColorMatrix);\n    // Set default properties\n    _this.intensity = 1;\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * (Re)applies colors to the already existing filter by modifying filyer's\r\n   * color matrix element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  ColorizeFilter.prototype.applyFilter = function () {\n    var i = this.intensity;\n    var ii = 1 - i;\n    var r;\n    var g;\n    var b;\n    var color = this.color;\n    if (color && color.rgb) {\n      r = color.rgb.r / 255 * i;\n      g = color.rgb.g / 255 * i;\n      b = color.rgb.b / 255 * i;\n    } else {\n      r = 0;\n      g = 0;\n      b = 0;\n    }\n    this.feColorMatrix.attr({\n      \"values\": ii + \" 0 0 0 \" + r + \" 0 \" + ii + \" 0 0 \" + g + \" 0 0 \" + ii + \" 0 \" + b + \" 0 0 0 1 0\"\n    });\n  };\n  Object.defineProperty(ColorizeFilter.prototype, \"color\", {\n    /**\r\n     * @return Color\r\n     */\n    get: function () {\n      return this.properties[\"color\"];\n    },\n    /**\r\n     * Target color to apply to the element.\r\n     *\r\n     * Depending on the `intensity`, all colors of the target element will steer\r\n     * towards this color.\r\n     *\r\n     * E.g. setting to `am4core.color(\"greener\")` will make all colors greener.\r\n     *\r\n     * @param value  Color\r\n     */\n    set: function (value) {\n      this.properties[\"color\"] = value;\n      this.applyFilter();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ColorizeFilter.prototype, \"intensity\", {\n    /**\r\n     * @return Intensity (0-1)\r\n     */\n    get: function () {\n      return this.properties.intensity;\n    },\n    /**\r\n     * Intensity of the color (0-1).\r\n     *\r\n     * The bigger the number the more of a `color` target's colors will become.\r\n     *\r\n     * 0 means the colors will remain as they are.\r\n     * 1 means all colors will become the target `color`.\r\n     *\r\n     * @default 1\r\n     * @param value  Intensity (0-1)\r\n     */\n    set: function (value) {\n      this.properties.intensity = value;\n      this.applyFilter();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ColorizeFilter;\n}(Filter);\nexport { ColorizeFilter };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"ColorizeFilter\"] = ColorizeFilter;","map":{"version":3,"names":["Filter","registry","ColorizeFilter","_super","__extends","_this","call","className","feColorMatrix","paper","add","attr","filterPrimitives","push","intensity","applyTheme","prototype","applyFilter","i","ii","r","g","b","color","rgb","Object","defineProperty","get","properties","set","value","registeredClasses"],"sources":["../../../../../../src/.internal/core/rendering/filters/ColorizeFilter.ts"],"sourcesContent":["/**\r\n * Module for \"Colorize\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Colorize\" filter.\r\n */\r\nexport interface ColorizeFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Color.\r\n\t */\r\n\tcolor?: Color;\r\n\r\n\t/**\r\n\t * Intensity. (0-1)\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\tintensity: number;\r\n\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a \"Colorize\" filter.\r\n */\r\nexport class ColorizeFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: ColorizeFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t * @see [@link ColorizeFilterProperties]\r\n\t */\r\n\t//public propertyValues: Dictionary<ColorizeFilterProperties, any>;\r\n\r\n\t/**\r\n\t * Reference to the `<feColorMatrix>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feColorMatrix: AMElement;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ColorizeFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\t\tthis.feColorMatrix = this.paper.add(\"feColorMatrix\");\r\n\t\tthis.feColorMatrix.attr({ \"type\": \"matrix\" });\r\n\t\t//this.feColorMatrix.setAttribute(\"in\", \"SourceAlpha\");\r\n\t\tthis.filterPrimitives.push(this.feColorMatrix);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.intensity = 1;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)applies colors to the already existing filter by modifying filyer's\r\n\t * color matrix element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic applyFilter(): void {\r\n\r\n\t\tlet i: number = this.intensity;\r\n\t\tlet ii = 1 - i;\r\n\r\n\t\tlet r: number;\r\n\t\tlet g: number;\r\n\t\tlet b: number;\r\n\r\n\t\tconst color = this.color;\r\n\r\n\t\tif (color && color.rgb) {\r\n\t\t\tr = color.rgb.r / 255 * i;\r\n\t\t\tg = color.rgb.g / 255 * i;\r\n\t\t\tb = color.rgb.b / 255 * i;\r\n\r\n\t\t} else {\r\n\t\t\tr = 0;\r\n\t\t\tg = 0;\r\n\t\t\tb = 0;\r\n\t\t}\r\n\r\n\t\tthis.feColorMatrix.attr({ \"values\": ii + \" 0 0 0 \" + r + \" 0 \" + ii + \" 0 0 \" + g + \" 0 0 \" + ii + \" 0 \" + b + \" 0 0 0 1 0\" });\r\n\t}\r\n\r\n\t/**\r\n\t * Target color to apply to the element.\r\n\t *\r\n\t * Depending on the `intensity`, all colors of the target element will steer\r\n\t * towards this color.\r\n\t *\r\n\t * E.g. setting to `am4core.color(\"greener\")` will make all colors greener.\r\n\t *\r\n\t * @param value  Color\r\n\t */\r\n\tpublic set color(value: $type.Optional<Color>) {\r\n\t\tthis.properties[\"color\"] = value;\r\n\t\tthis.applyFilter();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color\r\n\t */\r\n\tpublic get color(): $type.Optional<Color> {\r\n\t\treturn this.properties[\"color\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Intensity of the color (0-1).\r\n\t *\r\n\t * The bigger the number the more of a `color` target's colors will become.\r\n\t *\r\n\t * 0 means the colors will remain as they are.\r\n\t * 1 means all colors will become the target `color`.\r\n\t *\r\n\t * @default 1\r\n\t * @param value  Intensity (0-1)\r\n\t */\r\n\tpublic set intensity(value: number) {\r\n\t\tthis.properties.intensity = value;\r\n\t\tthis.applyFilter();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Intensity (0-1)\r\n\t */\r\n\tpublic get intensity(): number {\r\n\t\treturn this.properties.intensity;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColorizeFilter\"] = ColorizeFilter;\r\n"],"mappings":";AAAA;;;;AAIA;;;;;;AAMA,SAASA,MAAM,QAA0B,UAAU;AAGnD,SAASC,QAAQ,QAAQ,gBAAgB;AA4BxC;AAGD;;;;;;AAOA;;;AAGA,IAAAC,cAAA,0BAAAC,MAAA;EAAoCC,SAAA,CAAAF,cAAA,EAAAC,MAAA;EAoBnC;;;EAGA,SAAAD,eAAA;IAAA,IAAAG,KAAA,GACCF,MAAA,CAAAG,IAAA,MAAO;IACPD,KAAI,CAACE,SAAS,GAAG,gBAAgB;IAEjC;IACA;IACA;IACA;IACAF,KAAI,CAACG,aAAa,GAAGH,KAAI,CAACI,KAAK,CAACC,GAAG,CAAC,eAAe,CAAC;IACpDL,KAAI,CAACG,aAAa,CAACG,IAAI,CAAC;MAAE,MAAM,EAAE;IAAQ,CAAE,CAAC;IAC7C;IACAN,KAAI,CAACO,gBAAgB,CAACC,IAAI,CAACR,KAAI,CAACG,aAAa,CAAC;IAE9C;IACAH,KAAI,CAACS,SAAS,GAAG,CAAC;IAElBT,KAAI,CAACU,UAAU,EAAE;;EAClB;EAEA;;;;;;EAMOb,cAAA,CAAAc,SAAA,CAAAC,WAAW,GAAlB;IAEC,IAAIC,CAAC,GAAW,IAAI,CAACJ,SAAS;IAC9B,IAAIK,EAAE,GAAG,CAAC,GAAGD,CAAC;IAEd,IAAIE,CAAS;IACb,IAAIC,CAAS;IACb,IAAIC,CAAS;IAEb,IAAMC,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAIA,KAAK,IAAIA,KAAK,CAACC,GAAG,EAAE;MACvBJ,CAAC,GAAGG,KAAK,CAACC,GAAG,CAACJ,CAAC,GAAG,GAAG,GAAGF,CAAC;MACzBG,CAAC,GAAGE,KAAK,CAACC,GAAG,CAACH,CAAC,GAAG,GAAG,GAAGH,CAAC;MACzBI,CAAC,GAAGC,KAAK,CAACC,GAAG,CAACF,CAAC,GAAG,GAAG,GAAGJ,CAAC;KAEzB,MAAM;MACNE,CAAC,GAAG,CAAC;MACLC,CAAC,GAAG,CAAC;MACLC,CAAC,GAAG,CAAC;;IAGN,IAAI,CAACd,aAAa,CAACG,IAAI,CAAC;MAAE,QAAQ,EAAEQ,EAAE,GAAG,SAAS,GAAGC,CAAC,GAAG,KAAK,GAAGD,EAAE,GAAG,OAAO,GAAGE,CAAC,GAAG,OAAO,GAAGF,EAAE,GAAG,KAAK,GAAGG,CAAC,GAAG;IAAY,CAAE,CAAC;EAC/H,CAAC;EAYDG,MAAA,CAAAC,cAAA,CAAWxB,cAAA,CAAAc,SAAA,SAAK;IAKhB;;;SAGA,SAAAW,CAAA;MACC,OAAO,IAAI,CAACC,UAAU,CAAC,OAAO,CAAC;IAChC,CAAC;IApBD;;;;;;;;;;SAUA,SAAAC,CAAiBC,KAA4B;MAC5C,IAAI,CAACF,UAAU,CAAC,OAAO,CAAC,GAAGE,KAAK;MAChC,IAAI,CAACb,WAAW,EAAE;IACnB,CAAC;;;;EAoBDQ,MAAA,CAAAC,cAAA,CAAWxB,cAAA,CAAAc,SAAA,aAAS;IAKpB;;;SAGA,SAAAW,CAAA;MACC,OAAO,IAAI,CAACC,UAAU,CAACd,SAAS;IACjC,CAAC;IArBD;;;;;;;;;;;SAWA,SAAAe,CAAqBC,KAAa;MACjC,IAAI,CAACF,UAAU,CAACd,SAAS,GAAGgB,KAAK;MACjC,IAAI,CAACb,WAAW,EAAE;IACnB,CAAC;;;;EASF,OAAAf,cAAC;AAAD,CAAC,CAtHmCF,MAAM;;AAyH1C;;;;;;AAMAC,QAAQ,CAAC8B,iBAAiB,CAAC,gBAAgB,CAAC,GAAG7B,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}