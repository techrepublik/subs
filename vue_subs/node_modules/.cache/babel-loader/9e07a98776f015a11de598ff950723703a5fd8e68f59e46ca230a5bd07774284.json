{"ast":null,"code":"/**\r\n * Rectangular pattern module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Pattern } from \"./Pattern\";\nimport { registry } from \"../../Registry\";\n;\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Circular pattern\r\n */\nvar CirclePattern = /** @class */function (_super) {\n  __extends(CirclePattern, _super);\n  /**\r\n   * Constructor\r\n   */\n  function CirclePattern() {\n    var _this = _super.call(this) || this;\n    _this.properties[\"radius\"] = 2;\n    _this._circle = _this.paper.add(\"circle\");\n    _this.addElement(_this._circle);\n    _this.shapeRendering = \"auto\";\n    return _this;\n  }\n  /**\r\n   * Draws the circle element.\r\n   */\n  CirclePattern.prototype.draw = function () {\n    _super.prototype.draw.call(this);\n    if (this._circle) {\n      this._circle.attr({\n        \"r\": this.radius,\n        \"cx\": this.width / 2,\n        \"cy\": this.height / 2\n      });\n    }\n  };\n  Object.defineProperty(CirclePattern.prototype, \"radius\", {\n    /**\r\n     * @return Radius (px)\r\n     */\n    get: function () {\n      return this.properties[\"radius\"];\n    },\n    /**\r\n     * Circle radius in pixels.\r\n     *\r\n     * @param value Radius (px)\r\n     */\n    set: function (value) {\n      this.properties[\"radius\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CirclePattern;\n}(Pattern);\nexport { CirclePattern };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"CirclePattern\"] = CirclePattern;","map":{"version":3,"names":["Pattern","registry","CirclePattern","_super","__extends","_this","call","properties","_circle","paper","add","addElement","shapeRendering","prototype","draw","attr","radius","width","height","Object","defineProperty","get","set","value","registeredClasses"],"sources":["../../../../../../src/.internal/core/rendering/fills/CirclePattern.ts"],"sourcesContent":["/**\r\n * Rectangular pattern module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Pattern, PatternProperties } from \"./Pattern\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for circle pattern\r\n */\r\nexport interface CirclePatternProperties extends PatternProperties {\r\n\tradius: number;\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Circular pattern\r\n */\r\nexport class CirclePattern extends Pattern {\r\n\r\n\t/**\r\n\t * Reference to `<circle>` element used in pattern.\r\n\t */\r\n\tprotected _circle: $type.Optional<AMElement>;\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: CirclePatternProperties;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.properties[\"radius\"] = 2;\r\n\t\tthis._circle = this.paper.add(\"circle\");\r\n\t\tthis.addElement(this._circle);\r\n\t\tthis.shapeRendering = \"auto\";\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the circle element.\r\n\t */\r\n\tprotected draw(): void {\r\n\t\tsuper.draw();\r\n\t\tif (this._circle) {\r\n\t\t\tthis._circle.attr({ \"r\": this.radius, \"cx\": this.width / 2, \"cy\":this.height / 2});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Circle radius in pixels.\r\n\t *\r\n\t * @param value Radius (px)\r\n\t */\r\n\tpublic set radius(value: number) {\r\n\t\tthis.properties[\"radius\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius (px)\r\n\t */\r\n\tpublic get radius(): number {\r\n\t\treturn this.properties[\"radius\"];\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CirclePattern\"] = CirclePattern;\r\n"],"mappings":"AAAA;;;;AAIA;;;;;;AAMA,SAASA,OAAO,QAA2B,WAAW;AAEtD,SAASC,QAAQ,QAAQ,gBAAgB;AAgBxC;AAGD;;;;;;AAOA;;;AAGA,IAAAC,aAAA,0BAAAC,MAAA;EAAmCC,SAAA,CAAAF,aAAA,EAAAC,MAAA;EAYlC;;;EAGA,SAAAD,cAAA;IAAA,IAAAG,KAAA,GACCF,MAAA,CAAAG,IAAA,MAAO;IACPD,KAAI,CAACE,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC;IAC7BF,KAAI,CAACG,OAAO,GAAGH,KAAI,CAACI,KAAK,CAACC,GAAG,CAAC,QAAQ,CAAC;IACvCL,KAAI,CAACM,UAAU,CAACN,KAAI,CAACG,OAAO,CAAC;IAC7BH,KAAI,CAACO,cAAc,GAAG,MAAM;;EAC7B;EAEA;;;EAGUV,aAAA,CAAAW,SAAA,CAAAC,IAAI,GAAd;IACCX,MAAA,CAAAU,SAAA,CAAMC,IAAI,CAAAR,IAAA,MAAE;IACZ,IAAI,IAAI,CAACE,OAAO,EAAE;MACjB,IAAI,CAACA,OAAO,CAACO,IAAI,CAAC;QAAE,GAAG,EAAE,IAAI,CAACC,MAAM;QAAE,IAAI,EAAE,IAAI,CAACC,KAAK,GAAG,CAAC;QAAE,IAAI,EAAC,IAAI,CAACC,MAAM,GAAG;MAAC,CAAC,CAAC;;EAEpF,CAAC;EAODC,MAAA,CAAAC,cAAA,CAAWlB,aAAA,CAAAW,SAAA,UAAM;IAKjB;;;SAGA,SAAAQ,CAAA;MACC,OAAO,IAAI,CAACd,UAAU,CAAC,QAAQ,CAAC;IACjC,CAAC;IAfD;;;;;SAKA,SAAAe,CAAkBC,KAAa;MAC9B,IAAI,CAAChB,UAAU,CAAC,QAAQ,CAAC,GAAGgB,KAAK;MACjC,IAAI,CAACT,IAAI,EAAE;IACZ,CAAC;;;;EASF,OAAAZ,aAAC;AAAD,CAAC,CAlDkCF,OAAO;;AAoD1C;;;;;;AAMAC,QAAQ,CAACuB,iBAAiB,CAAC,eAAe,CAAC,GAAGtB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}