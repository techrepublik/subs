{"ast":null,"code":"/**\r\n * Language module contains everything related to language-specific operations:\r\n * * Translating prompts\r\n * * Translating functions\r\n * * Date format localizations\r\n */\nimport { __extends, __read, __spread } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { BaseObjectEvents } from \"../Base\";\nimport { Adapter } from \"./Adapter\";\nimport * as $array from \"./Array\";\nimport * as $type from \"./Type\";\nimport en from \"../../../lang/en\";\nimport { options } from \"../Options\";\n;\n;\n/**\r\n * Handles all language-related tasks, like loading and storing translations,\r\n * translating prompts, lists of prompts and even functions.\r\n *\r\n * Almost every object in amCharts4 universe will have a `language` property,\r\n * which can be accessed for prompt translation.\r\n *\r\n * @see {@link ILanguageAdapters} for a list of available Adapters\r\n * @todo Make prompt keys case-insensitive\r\n * @important\r\n */\nvar Language = /** @class */function (_super) {\n  __extends(Language, _super);\n  /**\r\n   * Constructor\r\n   */\n  function Language() {\n    var _this = _super.call(this) || this;\n    /**\r\n     * Adapter.\r\n     */\n    _this.adapter = new Adapter(_this);\n    /**\r\n     * Current locale.\r\n     */\n    _this._locale = en;\n    /**\r\n     * Default locale. A locale to fall back to if none is specified, or\r\n     * if there's no translation for the prompt for the current language.\r\n     */\n    _this._defaultLocale = en;\n    _this.className = \"Language\";\n    // Set default language if necessary\n    if ($type.hasValue(options.defaultLocale)) {\n      _this.locale = options.defaultLocale;\n    }\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Returns locale that is currently used.\r\n   *\r\n   * @param locale  Force locale. Will use current language if not set.\r\n   * @return Locale\r\n   */\n  Language.prototype.getLocale = function (locale) {\n    if (locale == null) {\n      locale = this._locale;\n    }\n    return this.adapter.apply(\"locale\", {\n      locale: locale\n    }).locale;\n  };\n  /**\r\n   * Returns the translation of the string.\r\n   *\r\n   * If the translation is empty, it will return untranslated prompt.\r\n   *\r\n   * Third parameter and up are strings that can be used to replace \"%X\"\r\n   * placeholders in prompt.\r\n   *\r\n   * E.g.:\r\n   *\r\n   * ```TypeScript\r\n   * // Results in \"This is a first translation test\"\r\n   * chart.language.translate(\"This is a %1 translation %2\", null, \"first\", \"test\");\r\n   * ```\r\n   * ```JavaScriptScript\r\n   * // Results in \"This is a first translation test\"\r\n   * chart.language.translate(\"This is a %1 translation %2\", null, \"first\", \"test\");\r\n   * ```\r\n   *\r\n   * @param  prompt   A string to translate\r\n   * @param  locale   Force translation into specific locale, e.g. fr_FR\r\n   * @param  rest     Parameters to replace in string\r\n   * @return          Translation\r\n   */\n  Language.prototype.translate = function (prompt, locale) {\n    var rest = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n      rest[_i - 2] = arguments[_i];\n    }\n    // Get langauge\n    locale = this.getLocale(locale);\n    // Init translation\n    var translation = prompt;\n    // Get translations for the locale\n    var translations = this.getTranslations(locale);\n    var value = translations[prompt];\n    // Try to look for the translation\n    if (value === null) {\n      translation = \"\";\n    } else if ($type.hasValue(value)) {\n      // It might be an empty string\n      if (value) {\n        translation = value;\n      }\n    } else if (locale !== this._defaultLocale) {\n      // Try to look in default language\n      return this.translate.apply(this, __spread([prompt, this._defaultLocale], rest));\n    }\n    // Replace %1, %2, etc params\n    if (rest.length) {\n      for (var len = rest.length, i = 0; i < len; ++i) {\n        translation = translation.split(\"%\" + (i + 1)).join(rest[i]);\n      }\n    }\n    // Return the translation\n    return this.adapter.apply(\"translate\", {\n      translation: translation,\n      locale: locale\n    }).translation;\n  };\n  /**\r\n   * Non-type-checked translation.\r\n   *\r\n   * Can be used by plugins and other code that may have their own non-standard\r\n   * translation prompts.\r\n   *\r\n   * @since 4.5.5\r\n   * @param  prompt   A string to translate\r\n   * @param  locale   Force translation into specific locale, e.g. fr_FR\r\n   * @param  rest     Parameters to replace in string\r\n   * @return          Translation\r\n   */\n  Language.prototype.translateAny = function (prompt, locale) {\n    var rest = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n      rest[_i - 2] = arguments[_i];\n    }\n    return this.translate.apply(this, __spread([prompt, locale], rest));\n  };\n  /**\r\n   * Sets a prompt translation.\r\n   *\r\n   * @since 4.9.35\r\n   * @param  prompt       Prompt in English\r\n   * @param  translation  Translation\r\n   * @param  locale       Locale\r\n   */\n  Language.prototype.setTranslationAny = function (prompt, translation, locale) {\n    var localeTarget = locale || this.locale;\n    localeTarget[prompt] = translation;\n  };\n  /**\r\n   * Translates prompt.\r\n   *\r\n   * If translation is empty, it will return empty string, which is a different\r\n   * behavior than that of regular `translate`.\r\n   *\r\n   * @param prompt   A string to translate\r\n   * @param locale   Force translation into specific locale, e.g. fr_FR\r\n   * @param ...rest  Parameters to replace in string\r\n   * @return Translation\r\n   */\n  Language.prototype.translateEmpty = function (prompt, locale) {\n    var rest = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n      rest[_i - 2] = arguments[_i];\n    }\n    var translation = this.translate.apply(this, __spread([prompt, locale], rest));\n    return translation == prompt ? \"\" : translation;\n  };\n  /**\r\n   * Translates a function.\r\n   *\r\n   * This method will return a function reference, but will not run it. It's\r\n   * up to the caller script to run the function.\r\n   *\r\n   * @param prompt  A function id to translate\r\n   * @param locale  Force translation into specific locale. e.g. fr_FR\r\n   * @return A language-specific version of the function\r\n   * @todo Apply adapter\r\n   */\n  Language.prototype.translateFunc = function (prompt, locale) {\n    // Get langauge\n    locale = this.getLocale(locale);\n    // Get translations for the locale\n    var translations = this.getTranslations(locale);\n    var value = translations[prompt];\n    // Try to look for the translation\n    if (value != null) {\n      return value;\n    }\n    // Try to look in default language\n    if (locale !== this._defaultLocale) {\n      return this.translateFunc(prompt, this._defaultLocale);\n    }\n    // Fail - return empty function\n    return function () {\n      return \"\";\n    };\n  };\n  /**\r\n   * Translates a list of prompts in one go.\r\n   *\r\n   * @param list    An array of strings to translate\r\n   * @param locale  Force translation into specific locale. e.g. fr_FR\r\n   * @return An array of translated strings in the same order as source list\r\n   */\n  Language.prototype.translateAll = function (list, locale) {\n    var _this = this;\n    // Translate all items in the list\n    if (!this.isDefault()) {\n      return $array.map(list, function (x) {\n        return _this.translate(x, locale);\n      });\n    } else {\n      return list;\n    }\n  };\n  /**\r\n   * Returns `true` if the currently selected locale is a default locale.\r\n   *\r\n   * @return `true` if locale is default; `false` if it is not.\r\n   */\n  Language.prototype.isDefault = function () {\n    return this._defaultLocale === this._locale;\n  };\n  Object.defineProperty(Language.prototype, \"locale\", {\n    /**\r\n     * @return Locale definition\r\n     */\n    get: function () {\n      return this._locale;\n    },\n    /**\r\n     * Current locale.\r\n     *\r\n     * @param value  Locale definition (translations)\r\n     */\n    set: function (value) {\n      if (this._locale != value) {\n        this._locale = value;\n        if (this.events.isEnabled(\"localechanged\")) {\n          var event_1 = {\n            type: \"localechanged\",\n            locale: value,\n            target: this\n          };\n          this.events.dispatchImmediately(\"localechanged\", event_1);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns translations for a given locale.\r\n   *\r\n   * @ignore\r\n   * @deprecated\r\n   * @param locale  Locale\r\n   * @return Translations\r\n   */\n  Language.prototype.getTranslations = function (locale) {\n    return this.adapter.apply(\"translations\", {\n      translations: locale,\n      locale: locale\n    }).translations;\n  };\n  return Language;\n}(BaseObjectEvents);\nexport { Language };","map":{"version":3,"names":["BaseObjectEvents","Adapter","$array","$type","en","options","Language","_super","__extends","_this","call","adapter","_locale","_defaultLocale","className","hasValue","defaultLocale","locale","applyTheme","prototype","getLocale","apply","translate","prompt","rest","_i","arguments","length","translation","translations","getTranslations","value","__spread","len","i","split","join","translateAny","setTranslationAny","localeTarget","translateEmpty","translateFunc","translateAll","list","isDefault","map","x","Object","defineProperty","get","set","events","isEnabled","event_1","type","target","dispatchImmediately"],"sources":["../../../../../src/.internal/core/utils/Language.ts"],"sourcesContent":["/**\r\n * Language module contains everything related to language-specific operations:\r\n * * Translating prompts\r\n * * Translating functions\r\n * * Date format localizations\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"../Base\";\r\nimport { Adapter } from \"./Adapter\";\r\nimport { AMEvent } from \"./EventDispatcher\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\nimport en from \"../../../lang/en\";\r\nimport { options } from \"../Options\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines events for [[Language]].\r\n */\r\nexport interface ILanguageEvents extends IBaseObjectEvents {\r\n\r\n\t/**\r\n\t * Invoked when locale is changed by user.\r\n\t */\r\n\tlocalechanged: {\r\n\t\tlocale: ILocale;\r\n\t};\r\n\r\n};\r\n\r\n\r\n/**\r\n * Defines properties that exist for the locale.\r\n */\r\nexport interface ILocaleProperties {\r\n\t// number formatter related\r\n\t\"_decimalSeparator\"?: string;\r\n\t\"_thousandSeparator\"?: string;\r\n\r\n\t\"_percentPrefix\"?: string | null;\r\n\t\"_percentSuffix\"?: string | null;\r\n\r\n\t\"_big_number_suffix_3\"?: string;\r\n\t\"_big_number_suffix_6\"?: string;\r\n\t\"_big_number_suffix_9\"?: string;\r\n\t\"_big_number_suffix_12\"?: string;\r\n\t\"_big_number_suffix_15\"?: string;\r\n\t\"_big_number_suffix_18\"?: string;\r\n\t\"_big_number_suffix_21\"?: string;\r\n\t\"_big_number_suffix_24\"?: string;\r\n\r\n\t\"_small_number_suffix_24\"?: string;\r\n\t\"_small_number_suffix_21\"?: string;\r\n\t\"_small_number_suffix_18\"?: string;\r\n\t\"_small_number_suffix_15\"?: string;\r\n\t\"_small_number_suffix_12\"?: string;\r\n\t\"_small_number_suffix_9\"?: string;\r\n\t\"_small_number_suffix_6\"?: string;\r\n\t\"_small_number_suffix_3\"?: string;\r\n\r\n\t\"_byte_suffix_B\"?: string;\r\n\t\"_byte_suffix_KB\"?: string;\r\n\t\"_byte_suffix_MB\"?: string;\r\n\t\"_byte_suffix_GB\"?: string;\r\n\t\"_byte_suffix_TB\"?: string;\r\n\t\"_byte_suffix_PB\"?: string;\r\n\r\n\t// Default date formats for various periods\r\n\t\"_date\"?: string;\r\n\t\"_date_millisecond\"?: string;\r\n\t\"_date_second\"?: string;\r\n\t\"_date_minute\"?: string;\r\n\t\"_date_hour\"?: string;\r\n\t\"_date_day\"?: string;\r\n\t\"_date_week\"?: string;\r\n\t\"_date_month\"?: string;\r\n\t\"_date_year\"?: string;\r\n\r\n\t// Default duration formats for various base units\r\n\t\"_duration_millisecond\"?: string;\r\n\t\"_duration_millisecond_second\"?: string;\r\n\t\"_duration_millisecond_minute\"?: string;\r\n\t\"_duration_millisecond_hour\"?: string;\r\n\t\"_duration_millisecond_day\"?: string;\r\n\t\"_duration_millisecond_week\"?: string;\r\n\t\"_duration_millisecond_month\"?: string;\r\n\t\"_duration_millisecond_year\"?: string;\r\n\r\n\t\"_duration_second\"?: string;\r\n\t\"_duration_second_minute\"?: string;\r\n\t\"_duration_second_hour\"?: string;\r\n\t\"_duration_second_day\"?: string;\r\n\t\"_duration_second_week\"?: string;\r\n\t\"_duration_second_month\"?: string;\r\n\t\"_duration_second_year\"?: string;\r\n\r\n\t\"_duration_minute\"?: string;\r\n\t\"_duration_minute_hour\"?: string;\r\n\t\"_duration_minute_day\"?: string;\r\n\t\"_duration_minute_week\"?: string;\r\n\t\"_duration_minute_month\"?: string;\r\n\t\"_duration_minute_year\"?: string;\r\n\r\n\t\"_duration_hour\"?: string;\r\n\t\"_duration_hour_day\"?: string;\r\n\t\"_duration_hour_week\"?: string;\r\n\t\"_duration_hour_month\"?: string;\r\n\t\"_duration_hour_year\"?: string;\r\n\r\n\t\"_duration_day\"?: string;\r\n\t\"_duration_day_week\"?: string;\r\n\t\"_duration_day_month\"?: string;\r\n\t\"_duration_day_year\"?: string;\r\n\r\n\t\"_duration_week\"?: string;\r\n\t\"_duration_week_month\"?: string;\r\n\t\"_duration_week_year\"?: string;\r\n\r\n\t\"_duration_month\"?: string;\r\n\t\"_duration_month_year\"?: string;\r\n\r\n\t\"_duration_year\"?: string;\r\n\r\n\t// Era\r\n\t\"_era_ad\"?: string;\r\n\t\"_era_bc\"?: string;\r\n\r\n\t// Period\r\n\t\"A\"?: string;\r\n\t\"P\"?: string;\r\n\t\"AM\"?: string;\r\n\t\"PM\"?: string;\r\n\t\"A.M.\"?: string;\r\n\t\"P.M.\"?: string;\r\n\r\n\t// Dates\r\n\t\"January\"?: string;\r\n\t\"February\"?: string;\r\n\t\"March\"?: string;\r\n\t\"April\"?: string;\r\n\t\"May\"?: string;\r\n\t\"June\"?: string;\r\n\t\"July\"?: string;\r\n\t\"August\"?: string;\r\n\t\"September\"?: string;\r\n\t\"October\"?: string;\r\n\t\"November\"?: string;\r\n\t\"December\"?: string;\r\n\t\"Jan\"?: string;\r\n\t\"Feb\"?: string;\r\n\t\"Mar\"?: string;\r\n\t\"Apr\"?: string;\r\n\t\"May(short)\"?: string;\r\n\t\"Jun\"?: string;\r\n\t\"Jul\"?: string;\r\n\t\"Aug\"?: string;\r\n\t\"Sep\"?: string;\r\n\t\"Oct\"?: string;\r\n\t\"Nov\"?: string;\r\n\t\"Dec\"?: string;\r\n\t\"Sunday\"?: string;\r\n\t\"Monday\"?: string;\r\n\t\"Tuesday\"?: string;\r\n\t\"Wednesday\"?: string;\r\n\t\"Thursday\"?: string;\r\n\t\"Friday\"?: string;\r\n\t\"Saturday\"?: string;\r\n\t\"Sun\"?: string;\r\n\t\"Mon\"?: string;\r\n\t\"Tue\"?: string;\r\n\t\"Wed\"?: string;\r\n\t\"Thu\"?: string;\r\n\t\"Fri\"?: string;\r\n\t\"Sat\"?: string;\r\n\r\n\t// Chart elements\r\n\t\"Zoom Out\"?: string;\r\n\t\"Play\"?: string;\r\n\t\"Stop\"?: string;\r\n\t\"Legend\"?: string;\r\n\t\"Click, tap or press ENTER to toggle\"?: string;\r\n\t\"Loading\"?: string;\r\n\t\"%1 shown\"?: string;\r\n\t\"%1 hidden\"?: string;\r\n\r\n\t// Chart types\r\n\t\"Chart\"?: string;\r\n\t\"Serial chart\"?: string;\r\n\t\"X/Y chart\"?: string;\r\n\t\"Pie chart\"?: string;\r\n\t\"Sunburst chart\"?: string;\r\n\t\"Gauge chart\"?: string;\r\n\t\"Radar chart\"?: string;\r\n\t\"Sankey diagram\"?: string;\r\n\t\"Flow diagram\"?: string;\r\n\t\"Chord diagram\"?: string;\r\n\t\"TreeMap chart\"?: string;\r\n\t\"Force directed tree\"?: string;\r\n\t\"Sliced chart\"?: string;\r\n\r\n\t// Series types\r\n\t\"Series\"?: string;\r\n\t\"Candlestick Series\"?: string;\r\n\t\"OHLC Series\"?: string;\r\n\t\"Column Series\"?: string;\r\n\t\"Line Series\"?: string;\r\n\t\"Pie Slice Series\"?: string;\r\n\t\"Funnel Series\"?: string;\r\n\t\"Pyramid Series\"?: string;\r\n\t\"X/Y Series\"?: string;\r\n\r\n\t// Map-related\r\n\t\"Map\"?: string;\r\n\t\"Press ENTER to zoom in\"?: string;\r\n\t\"Press ENTER to zoom out\"?: string;\r\n\t\"Use arrow keys to zoom in and out\"?: string;\r\n\t\"Use plus and minus keys on your keyboard to zoom in and out\"?: string;\r\n\t\"Home\"?: string;\r\n\t\"Zoom level changed to %1\"?: string;\r\n\r\n\t// Export-related\r\n\t\"Export\"?: string;\r\n\t\"Image\"?: string;\r\n\t\"Data\"?: string;\r\n\t\"Print\"?: string;\r\n\t\"Press ENTER or use arrow keys to navigate\"?: string;\r\n\t\"Click, tap or press ENTER to open\"?: string;\r\n\t\"Click, tap or press ENTER to print.\"?: string;\r\n\t\"Click, tap or press ENTER to export as %1.\"?: string;\r\n\t'To save the image, right-click this link and choose \"Save picture as...\"': string;\r\n\t'To save the image, right-click thumbnail on the left and choose \"Save picture as...\"': string;\r\n\t\"(Press ESC to close this message)\"?: string;\r\n\t\"Image Export Complete\"?: string;\r\n\t\"Export operation took longer than expected. Something might have gone wrong.\"?: string;\r\n\t\"Saved from\"?: string;\r\n\t\"PNG\"?: string;\r\n\t\"JPG\"?: string;\r\n\t\"GIF\"?: string;\r\n\t\"SVG\"?: string;\r\n\t\"PDF\"?: string;\r\n\t\"JSON\"?: string;\r\n\t\"CSV\"?: string;\r\n\t\"XLSX\"?: string;\r\n\r\n\t// Scrollbar-related\r\n\t\"Use TAB to select grip buttons or left and right arrows to change selection\"?: string;\r\n\t\"Use left and right arrows to move selection\"?: string;\r\n\t\"Use left and right arrows to move left selection\"?: string;\r\n\t\"Use left and right arrows to move right selection\"?: string;\r\n\t\"Use TAB select grip buttons or up and down arrows to change selection\"?: string;\r\n\t\"Use up and down arrows to move selection\"?: string;\r\n\t\"Use up and down arrows to move lower selection\"?: string;\r\n\t\"Use up and down arrows to move upper selection\"?: string;\r\n\t\"From %1 to %2\"?: string;\r\n\t\"From %1\"?: string;\r\n\t\"To %1\"?: string;\r\n\r\n\t// Data loader-related\r\n\t\"No parser available for file: %1\"?: string;\r\n\t\"Error parsing file: %1\"?: string;\r\n\t\"Unable to load file: %1\"?: string;\r\n\t\"Invalid date\"?: string;\r\n\r\n\t// Common actions\r\n\t\"Close\"?: string;\r\n\t\"Minimize\"?: string;\r\n\r\n\t\"Venn Series\"?: string;\r\n\t\"Venn Diagram\"?: string;\r\n}\r\n\r\n/**\r\n * Defines functions that exist for the locale.\r\n */\r\nexport interface ILocaleFunctions {\r\n\t// ordinal function\r\n\t\"_dateOrd\": (day: number) => string;\r\n}\r\n\r\n/**\r\n * Defines all of the defaults for locale properties.\r\n */\r\nexport interface ILocaleDefault extends ILocaleProperties, ILocaleFunctions { }\r\n\r\n/**\r\n * Defines locale interface.\r\n */\r\nexport interface ILocale extends Partial<ILocaleDefault> { };\r\n\r\n/**\r\n * Represents a list of available adapters for Language.\r\n */\r\nexport interface ILanguageAdapters {\r\n\r\n\t/**\r\n\t * Applied to result whenever retrieving currently set locale.\r\n\t */\r\n\tlocale: {\r\n\t\tlocale: ILocale\r\n\t},\r\n\r\n\t/**\r\n\t * Applied to a translation.\r\n\t */\r\n\ttranslate: {\r\n\t\ttranslation: string,\r\n\t\tlocale?: ILocale\r\n\t},\r\n\r\n\t/**\r\n\t * Applied to all of the locale translations.\r\n\t */\r\n\ttranslations: {\r\n\t\ttranslations: any,\r\n\t\tlocale?: ILocale\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Handles all language-related tasks, like loading and storing translations,\r\n * translating prompts, lists of prompts and even functions.\r\n *\r\n * Almost every object in amCharts4 universe will have a `language` property,\r\n * which can be accessed for prompt translation.\r\n *\r\n * @see {@link ILanguageAdapters} for a list of available Adapters\r\n * @todo Make prompt keys case-insensitive\r\n * @important\r\n */\r\nexport class Language extends BaseObjectEvents {\r\n\t/**\r\n\t * Defines type used in the Sprite.\r\n\t */\r\n\tpublic _adapter!: ILanguageAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ILanguageEvents;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t */\r\n\tpublic adapter: Adapter<this, this[\"_adapter\"]> = new Adapter(this);\r\n\r\n\t/**\r\n\t * Current locale.\r\n\t */\r\n\tprotected _locale: ILocale = en;\r\n\r\n\t/**\r\n\t * Default locale. A locale to fall back to if none is specified, or\r\n\t * if there's no translation for the prompt for the current language.\r\n\t */\r\n\tprotected _defaultLocale: ILocaleDefault = en;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Language\";\r\n\r\n\t\t// Set default language if necessary\r\n\t\tif ($type.hasValue(options.defaultLocale)) {\r\n\t\t\tthis.locale = options.defaultLocale;\r\n\t\t}\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns locale that is currently used.\r\n\t *\r\n\t * @param locale  Force locale. Will use current language if not set.\r\n\t * @return Locale\r\n\t */\r\n\tprotected getLocale(locale?: ILocale): ILocale {\r\n\t\tif (locale == null) {\r\n\t\t\tlocale = this._locale;\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"locale\", {\r\n\t\t\tlocale: locale\r\n\t\t}).locale;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the translation of the string.\r\n\t *\r\n\t * If the translation is empty, it will return untranslated prompt.\r\n\t *\r\n\t * Third parameter and up are strings that can be used to replace \"%X\"\r\n\t * placeholders in prompt.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Results in \"This is a first translation test\"\r\n\t * chart.language.translate(\"This is a %1 translation %2\", null, \"first\", \"test\");\r\n\t * ```\r\n\t * ```JavaScriptScript\r\n\t * // Results in \"This is a first translation test\"\r\n\t * chart.language.translate(\"This is a %1 translation %2\", null, \"first\", \"test\");\r\n\t * ```\r\n\t *\r\n\t * @param  prompt   A string to translate\r\n\t * @param  locale   Force translation into specific locale, e.g. fr_FR\r\n\t * @param  rest     Parameters to replace in string\r\n\t * @return          Translation\r\n\t */\r\n\tpublic translate<Key extends keyof ILocaleProperties>(prompt: Key, locale?: ILocale, ...rest: Array<string>): string {\r\n\r\n\t\t// Get langauge\r\n\t\tlocale = this.getLocale(locale);\r\n\r\n\t\t// Init translation\r\n\t\tlet translation: string = prompt;\r\n\r\n\t\t// Get translations for the locale\r\n\t\tlet translations = this.getTranslations(locale);\r\n\r\n\t\tlet value: $type.Optional<ILocaleDefault[Key]> = translations[prompt];\r\n\r\n\t\t// Try to look for the translation\r\n\t\tif (value === null) {\r\n\t\t\ttranslation = \"\";\r\n\t\t}\r\n\t\telse if ($type.hasValue(value)) {\r\n\t\t\t// It might be an empty string\r\n\t\t\tif (value) {\r\n\t\t\t\ttranslation = value!;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (locale !== this._defaultLocale) {\r\n\t\t\t// Try to look in default language\r\n\t\t\treturn this.translate(prompt, this._defaultLocale, ...rest);\r\n\t\t}\r\n\r\n\t\t// Replace %1, %2, etc params\r\n\t\tif (rest.length) {\r\n\t\t\tfor (let len = rest.length, i = 0; i < len; ++i) {\r\n\t\t\t\ttranslation = translation.split(\"%\" + (i + 1)).join(rest[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Return the translation\r\n\t\treturn this.adapter.apply(\"translate\", {\r\n\t\t\ttranslation: translation,\r\n\t\t\tlocale: locale\r\n\t\t}).translation;\r\n\t}\r\n\r\n\t/**\r\n\t * Non-type-checked translation.\r\n\t *\r\n\t * Can be used by plugins and other code that may have their own non-standard\r\n\t * translation prompts.\r\n\t *\r\n\t * @since 4.5.5\r\n\t * @param  prompt   A string to translate\r\n\t * @param  locale   Force translation into specific locale, e.g. fr_FR\r\n\t * @param  rest     Parameters to replace in string\r\n\t * @return          Translation\r\n\t */\r\n\tpublic translateAny(prompt: string, locale?: ILocale, ...rest: Array<string>): string {\r\n\t\treturn this.translate(<any>prompt, locale, ...rest);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a prompt translation.\r\n\t *\r\n\t * @since 4.9.35\r\n\t * @param  prompt       Prompt in English\r\n\t * @param  translation  Translation\r\n\t * @param  locale       Locale\r\n\t */\r\n\tpublic setTranslationAny(prompt: string, translation: string, locale?: ILocale): void {\r\n\t\tconst localeTarget = locale || this.locale;\r\n\t\t(<any>localeTarget)[prompt] = translation;\r\n\t}\r\n\r\n\t/**\r\n\t * Translates prompt.\r\n\t *\r\n\t * If translation is empty, it will return empty string, which is a different\r\n\t * behavior than that of regular `translate`.\r\n\t *\r\n\t * @param prompt   A string to translate\r\n\t * @param locale   Force translation into specific locale, e.g. fr_FR\r\n\t * @param ...rest  Parameters to replace in string\r\n\t * @return Translation\r\n\t */\r\n\tpublic translateEmpty<Key extends keyof ILocaleProperties>(prompt: Key, locale?: ILocale, ...rest: Array<string>): string {\r\n\t\tlet translation = this.translate(prompt, locale, ...rest);\r\n\t\treturn translation == prompt ? \"\" : translation;\r\n\t}\r\n\r\n\t/**\r\n\t * Translates a function.\r\n\t *\r\n\t * This method will return a function reference, but will not run it. It's\r\n\t * up to the caller script to run the function.\r\n\t *\r\n\t * @param prompt  A function id to translate\r\n\t * @param locale  Force translation into specific locale. e.g. fr_FR\r\n\t * @return A language-specific version of the function\r\n\t * @todo Apply adapter\r\n\t */\r\n\tpublic translateFunc<Key extends keyof ILocaleFunctions>(prompt: Key, locale?: ILocale): ILocaleFunctions[Key] {\r\n\r\n\t\t// Get langauge\r\n\t\tlocale = this.getLocale(locale);\r\n\r\n\t\t// Get translations for the locale\r\n\t\tlet translations = this.getTranslations(locale);\r\n\r\n\t\tlet value: $type.Optional<ILocaleFunctions[Key]> = translations[prompt];\r\n\r\n\t\t// Try to look for the translation\r\n\t\tif (value != null) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\t// Try to look in default language\r\n\t\tif (locale !== this._defaultLocale) {\r\n\t\t\treturn this.translateFunc(prompt, this._defaultLocale);\r\n\t\t}\r\n\r\n\t\t// Fail - return empty function\r\n\t\treturn (): string => {\r\n\t\t\treturn \"\";\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Translates a list of prompts in one go.\r\n\t *\r\n\t * @param list    An array of strings to translate\r\n\t * @param locale  Force translation into specific locale. e.g. fr_FR\r\n\t * @return An array of translated strings in the same order as source list\r\n\t */\r\n\tpublic translateAll<Key extends keyof ILocaleProperties>(list: Array<Key>, locale?: ILocale): Array<string> {\r\n\t\t// Translate all items in the list\r\n\t\tif (!this.isDefault()) {\r\n\t\t\treturn $array.map(list, (x) => this.translate(x, locale));\r\n\r\n\t\t} else {\r\n\t\t\treturn list;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the currently selected locale is a default locale.\r\n\t *\r\n\t * @return `true` if locale is default; `false` if it is not.\r\n\t */\r\n\tpublic isDefault(): boolean {\r\n\t\treturn this._defaultLocale === this._locale;\r\n\t}\r\n\r\n\t/**\r\n\t * Current locale.\r\n\t *\r\n\t * @param value  Locale definition (translations)\r\n\t */\r\n\tpublic set locale(value: ILocale) {\r\n\t\tif (this._locale != value) {\r\n\t\t\tthis._locale = value;\r\n\r\n\r\n\t\t\tif (this.events.isEnabled(\"localechanged\")) {\r\n\t\t\t\tconst event: AMEvent<this, ILanguageEvents>[\"localechanged\"] = {\r\n\t\t\t\t\ttype: \"localechanged\",\r\n\t\t\t\t\tlocale: value,\r\n\t\t\t\t\ttarget: this\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"localechanged\", event);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Locale definition\r\n\t */\r\n\tpublic get locale(): ILocale {\r\n\t\treturn this._locale;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns translations for a given locale.\r\n\t *\r\n\t * @ignore\r\n\t * @deprecated\r\n\t * @param locale  Locale\r\n\t * @return Translations\r\n\t */\r\n\tpublic getTranslations(locale: ILocale): ILocale {\r\n\t\treturn this.adapter.apply(\"translations\", {\r\n\t\t\ttranslations: locale,\r\n\t\t\tlocale: locale\r\n\t\t}).translations;\r\n\t}\r\n\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}