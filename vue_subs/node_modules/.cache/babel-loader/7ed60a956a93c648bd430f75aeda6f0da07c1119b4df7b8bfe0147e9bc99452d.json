{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\r\n * Responsive functionality module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { BaseObjectEvents } from \"../Base\";\nimport { List } from \"../utils/List\";\nimport { Adapter } from \"../utils/Adapter\";\nimport { registry } from \"../Registry\";\nimport * as $iter from \"../utils/Iterator\";\nimport * as $array from \"../utils/Array\";\nimport * as $type from \"../utils/Type\";\nimport * as $object from \"../utils/Object\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Responsive is responsible for overriding certain properties when conditions\r\n * are met.\r\n *\r\n * This class is used to dynamically apply and change certain chart properties\r\n * based on the current values of properties.\r\n *\r\n * Mainly, this is used with [[Sprite]]'s dimensional properties, like\r\n * `pixelWidth` and `pixelHeight`. However, it can be used to dynamically\r\n * change any property, based on any other property's value.\r\n *\r\n * A default responsive rules are disabled.\r\n *\r\n * To enable, set `enabled = false`. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.responsive.enabled = true;\r\n * ```\r\n * ```JavaScript\r\n * chart.responsive.enabled = true;\r\n * ```\r\n *\r\n * @see {@link IResponsiveEvents} for a list of available events\r\n * @see {@link IResponsiveAdapters} for a list of available Adapters\r\n * @todo Add default rules\r\n * @todo Watch for rule modification\r\n * @important\r\n */\nvar Responsive = /** @class */function (_super) {\n  __extends(Responsive, _super);\n  /**\r\n   * Constructor\r\n   */\n  function Responsive() {\n    var _this =\n    // Init\n    _super.call(this) || this;\n    /**\r\n     * Holds a list of responsive rules organized by object type.\r\n     */\n    _this._rules = new List();\n    /**\r\n     * Holds the list of the default responsive rules.\r\n     * @deprecated\r\n     */\n    //protected _defaultRules = new List<IResponsiveRule>();\n    /**\r\n     * Holds the list of currently applied rules.\r\n     */\n    _this._appliedRules = {};\n    /**\r\n     * Used to keep track of objects that have rules applied at the moment.\r\n     */\n    _this._appliedTargets = [];\n    /**\r\n     * Use default rules in addition to the user-defined ones?\r\n     */\n    _this._useDefault = true;\n    /**\r\n     * Adapter.\r\n     */\n    _this.adapter = new Adapter(_this);\n    /**\r\n     * Indicates of responsive rules application is enabled.\r\n     */\n    _this._enabled = false;\n    /**\r\n     * Holds disposers for all events added by this class.\r\n     */\n    _this._responsiveDisposers = [];\n    /**\r\n     * Collection of objects and state ids that do not have any properties set.\r\n     */\n    _this._noStates = [];\n    _this.className = \"Responsive\";\n    // Set up rules list events\n    _this.rules.events.on(\"inserted\", function () {\n      _this.checkRules();\n    }, true);\n    _this.rules.events.on(\"removed\", function () {\n      _this.checkRules();\n    }, true);\n    _this._disposers.push(_this.rules.events);\n    // Apply theme\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(Responsive.prototype, \"component\", {\n    /**\r\n     * @return Target object\r\n     */\n    get: function () {\n      return this._component;\n    },\n    /**\r\n     * A target object that responsive rules will need to be applied to.\r\n     *\r\n     * @param value  Target object\r\n     */\n    set: function (value) {\n      var _this = this;\n      // Check if it's the same\n      if (value == this._component) {\n        return;\n      }\n      // Check if we already have a set up component and remove its events\n      this.disposeResponsiveHandlers();\n      // Set\n      this._component = value;\n      // Set up resize monitoring events\n      this._responsiveDisposers.push($type.getValue(this.component).events.on(\"sizechanged\", function () {\n        _this.checkRules();\n      }, this));\n      this._responsiveDisposers.push($type.getValue(this.component).events.once(\"datavalidated\", function () {\n        if (_this._component.isReady()) {\n          _this.checkRules(true);\n        }\n      }, this));\n      // Enable resoponsive\n      this.enabled = true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Responsive.prototype, \"enabled\", {\n    /**\r\n     * @return Apply responsive rules?\r\n     */\n    get: function () {\n      return this.adapter.apply(\"enabled\", this._enabled);\n    },\n    /**\r\n     * Should responsive rules be checked against and applied?\r\n     *\r\n     * @default false\r\n     * @param value  Apply responsive rules?\r\n     */\n    set: function (value) {\n      if (this._enabled != value) {\n        this._enabled = value;\n        // Run `applyRules` so that any currently applied rules can be reset\n        this.applyRules();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Responsive.prototype, \"useDefault\", {\n    /**\r\n     * @return Use default rules?\r\n     */\n    get: function () {\n      return this.adapter.apply(\"useDefault\", this._useDefault);\n    },\n    /**\r\n     * Should default responsive rules be applied in addition to user-defined\r\n     * ones.\r\n     *\r\n     * User-defined rules will take precedence over default rules whenever they\r\n     * produce conflicting settings.\r\n     *\r\n     * @default true\r\n     * @param value  Use default rules?\r\n     */\n    set: function (value) {\n      if (this._useDefault != value) {\n        this._useDefault = value;\n        // Run `applyRules` so that any currently applied rules can be reset\n        this.applyRules();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Responsive.prototype, \"rules\", {\n    /**\r\n     * @return User-defined rules\r\n     */\n    get: function () {\n      return this.adapter.apply(\"rules\", this._rules);\n    },\n    /**\r\n     * User-defined responsive rules.\r\n     *\r\n     * User-defined rules will take precedence over default rules whenever they\r\n     * produce conflicting settings.\r\n     *\r\n     * Use `allRules` to get all applicable rules including default and\r\n     * user-defined ones.\r\n     *\r\n     * @param value  User-defined rules\r\n     */\n    set: function (value) {\n      this._rules = value;\n      this._enabled = true;\n      this.applyRules();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Responsive.prototype, \"defaultRules\", {\n    /**\r\n     * Default responsive rules.\r\n     *\r\n     * @readonly\r\n     * @return List of responsive rules\r\n     */\n    get: function () {\n      return this.adapter.apply(\"defaultRules\", defaultRules);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Responsive.prototype, \"allRules\", {\n    /**\r\n     * Returns all rules: default rules (if not disabled) combined with\r\n     * user-defined ones.\r\n     *\r\n     * @readonly\r\n     * @return List of all applicable rules\r\n     */\n    get: function () {\n      // Create empty list\n      var rules = new List();\n      // Add default rules if not disabled\n      // A code, requesting `allRules` must ensure loading of default rules\n      // by calling `loadDefaultRules()`\n      if (this.useDefault) {\n        rules.copyFrom(this.defaultRules);\n      }\n      // Add user-defined ones\n      rules.copyFrom(this.rules);\n      return this.adapter.apply(\"allRules\", rules);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Checks if rule by the particular id currently applied.\r\n   *\r\n   * @param ruleId  Rule ID\r\n   * @return Is currently applied?\r\n   */\n  Responsive.prototype.isApplied = function (ruleId) {\n    var rule = this._appliedRules[ruleId];\n    return $type.hasValue(rule) ? rule : false;\n  };\n  /**\r\n   * Checks which responsive rules currently satisfy their conditions and\r\n   * should be applied, or unapplied.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Responsive.prototype.checkRules = function (force) {\n    var _this = this;\n    if (force === void 0) {\n      force = false;\n    }\n    // Check if there are any rules\n    var rules = this.allRules;\n    if (!rules || rules.length == 0) {\n      return;\n    }\n    // Init a list of rules to be applied\n    var rulesChanged = false;\n    var component = $type.getValue(this.component);\n    // Do not perform rule application of target has no size\n    if (component.pixelWidth == 0 || component.pixelHeight == 0) {\n      return;\n    }\n    // Check which rules match\n    $iter.each(rules.iterator(), function (rule) {\n      // Check if rule has an id\n      if (!rule.id) {\n        rule.id = registry.getUniqueId();\n      }\n      // Init indicator if this rule should be applied\n      var apply = rule.relevant(component);\n      // Let's check if this rule needs to be applied\n      if (apply && !_this.isApplied(rule.id) || !apply && _this.isApplied(rule.id)) {\n        rulesChanged = true;\n      }\n      _this._appliedRules[rule.id] = apply;\n    });\n    if (force) {\n      rulesChanged = true;\n    }\n    // Check if we need to re-apply the rules\n    if (rulesChanged) {\n      if (!this.component.isReady()) {\n        // The chart is not yet ready (built)\n        // We will hide the chart and delay application of rules\n        // until \"ready\" event kicks in\n        //component.hide(0);\n        component.hidden = true;\n        component.events.once(\"ready\", function (ev) {\n          ev.target.show(0);\n          _this._applyRules();\n        });\n        return;\n      }\n      this.dispatchImmediately(\"ruleschanged\");\n      this._applyRules();\n    }\n  };\n  Responsive.prototype._applyRules = function () {\n    var _this = this;\n    if (this._timeout) {\n      this._timeout.dispose();\n    }\n    this._timeout = this.setTimeout(function () {\n      _this.applyRules();\n    }, 10);\n  };\n  /**\r\n   * Applies current rules to the object.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param target Target object\r\n   * @todo Better type check\r\n   */\n  Responsive.prototype.applyRules = function (target) {\n    var _this = this;\n    // If no target supplied, we assume the top-level element\n    var newTarget = $type.hasValue(target) ? target : $type.getValue(this.component);\n    // Check each rule\n    var defaultStateApplied = false;\n    if (this.enabled) {\n      var isApplied_1 = false;\n      $iter.each(this.allRules.iterator(), function (rule) {\n        // Get relevant state\n        var state = _this.getState(rule, newTarget);\n        // If there's a state, it means it needs to be applied\n        if (state) {\n          // Check if default state was already applied to this element.\n          // We don't want to go resetting default states to ALL element,\n          // if they don't have responsive states.\n          if (!defaultStateApplied) {\n            // Nope, reset states (instantly).\n            if ($array.indexOf(_this._appliedTargets, newTarget.uid) !== -1) {\n              // But only if this element has any rules applied, otherwise no\n              // point in setting current state\n              newTarget.setState(_this.getDefaultState(newTarget), 0);\n            }\n            defaultStateApplied = true;\n          }\n          // Is this rule currently applied?\n          if (_this.isApplied($type.getValue(rule.id))) {\n            // Yes. Apply the responsive state\n            state.transitionDuration = 0;\n            _this.setTargetState(newTarget, state);\n            _this.dispatchImmediately(\"ruleapplied\", {\n              rule: rule\n            });\n            isApplied_1 = true;\n          }\n        }\n      });\n      if (isApplied_1) {\n        $array.replace(this._appliedTargets, newTarget.uid);\n      } else {\n        $array.remove(this._appliedTargets, newTarget.uid);\n      }\n    }\n    // Apply rules to the children\n    if (newTarget.children) {\n      $iter.each(newTarget.children.iterator(), function (child) {\n        _this.applyRules(child);\n      });\n    }\n  };\n  /**\r\n   * Returns a relative state for the rule/target, or `undefined` if no state is\r\n   * needed.\r\n   *\r\n   * @param rule    [description]\r\n   * @param target  [description]\r\n   * @return [description]\r\n   */\n  Responsive.prototype.getState = function (rule, target) {\n    var stateId = \"responsive-\" + rule.id;\n    var tmpId = target.uid + \"_\" + stateId;\n    if ($array.indexOf(this._noStates, tmpId) !== -1) {\n      return;\n    } else if (!target.states.hasKey(stateId)) {\n      var state = rule.state(target, stateId);\n      if (!state) {\n        this._noStates.push(tmpId);\n      }\n      return state;\n    } else {\n      return target.states.getKey(stateId);\n    }\n  };\n  /**\r\n   * Creates and returns default responsive rule for the target.\r\n   *\r\n   * This rule will be used to \"reset\" to non-responsive values.\r\n   * @param   target  Target Sprite\r\n   * @return          State\r\n   */\n  Responsive.prototype.getDefaultState = function (target) {\n    if (target.states.hasKey(\"responsive-default\")) {\n      return target.states.getKey(\"responsive-default\");\n    }\n    return target.states.create(\"responsive-default\");\n  };\n  /**\r\n   * Sets state on the target element and updates default state with the\r\n   * overwritten values if needed.\r\n   *\r\n   * @param  target  Target\r\n   * @param  state   State\r\n   */\n  Responsive.prototype.setTargetState = function (target, state) {\n    var _this = this;\n    // Update default state\n    var defaultState = this.getDefaultState(target);\n    $object.each(state.properties, function (key, val) {\n      if (!$type.hasValue(defaultState.properties[key])) {\n        defaultState.properties[key] = _this.getValue(target, key);\n      }\n    });\n    target.setState(state);\n  };\n  /**\r\n   * Gets a value from an element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param target    Target object\r\n   * @param property  Property\r\n   * @return Property value\r\n   */\n  Responsive.prototype.getValue = function (target, property) {\n    // This is a bit hacky, first we check if the property exist.\n    // If it doesn't we try accessing target's property directly\n    var value = target.getPropertyValue(property);\n    if (!$type.hasValue(value) && $type.hasValue(target[property])) {\n      value = target[property];\n    }\n    return value;\n  };\n  /**\r\n   * Disposes the object.\r\n   */\n  Responsive.prototype.dispose = function () {\n    this.disposeResponsiveHandlers();\n    _super.prototype.dispose.call(this);\n  };\n  /**\r\n   * Disposes all event handlers.\r\n   */\n  Responsive.prototype.disposeResponsiveHandlers = function () {\n    var disposer = this._responsiveDisposers.pop();\n    while (disposer) {\n      disposer.dispose();\n      disposer = this._responsiveDisposers.pop();\n    }\n  };\n  return Responsive;\n}(BaseObjectEvents);\nexport { Responsive };\n/**\r\n * [defaultRules description]\r\n *\r\n * @todo description\r\n */\nexport var defaultRules = new List();\ndefaultRules.events.on(\"inserted\", function (ev) {\n  ev.newValue.id = registry.getUniqueId();\n});\n/**\r\n *\r\n * @todo description\r\n */\nvar ResponsiveBreakpoints = /** @class */function () {\n  function ResponsiveBreakpoints() {}\n  // Breakpoint functions (for use in `relevant` clause of the responsive rules)\n  ResponsiveBreakpoints.widthXXS = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XXS;\n  };\n  ResponsiveBreakpoints.widthXS = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XS;\n  };\n  ResponsiveBreakpoints.widthS = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.S;\n  };\n  ResponsiveBreakpoints.widthM = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.M;\n  };\n  ResponsiveBreakpoints.widthL = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.L;\n  };\n  ResponsiveBreakpoints.widthXL = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XL;\n  };\n  ResponsiveBreakpoints.widthXXL = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XXL;\n  };\n  ResponsiveBreakpoints.heightXXS = function (container) {\n    return container.pixelHeight <= ResponsiveBreakpoints.XXS;\n  };\n  ResponsiveBreakpoints.heightXS = function (container) {\n    return container.pixelHeight <= ResponsiveBreakpoints.XS;\n  };\n  ResponsiveBreakpoints.heightS = function (container) {\n    return container.pixelHeight <= ResponsiveBreakpoints.S;\n  };\n  ResponsiveBreakpoints.heightM = function (container) {\n    return container.pixelHeight <= ResponsiveBreakpoints.M;\n  };\n  ResponsiveBreakpoints.heightL = function (container) {\n    return container.pixelHeight <= ResponsiveBreakpoints.L;\n  };\n  ResponsiveBreakpoints.heightXL = function (container) {\n    return container.pixelHeight <= ResponsiveBreakpoints.XL;\n  };\n  ResponsiveBreakpoints.heightXXL = function (container) {\n    return container.pixelHeight <= ResponsiveBreakpoints.XXL;\n  };\n  ResponsiveBreakpoints.isXXS = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XXS && container.pixelHeight <= ResponsiveBreakpoints.XXS;\n  };\n  ResponsiveBreakpoints.isXS = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XS && container.pixelHeight <= ResponsiveBreakpoints.XS;\n  };\n  ResponsiveBreakpoints.isS = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.S && container.pixelHeight <= ResponsiveBreakpoints.S;\n  };\n  ResponsiveBreakpoints.isM = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.M && container.pixelHeight <= ResponsiveBreakpoints.M;\n  };\n  ResponsiveBreakpoints.isL = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.L && container.pixelHeight <= ResponsiveBreakpoints.L;\n  };\n  ResponsiveBreakpoints.isXL = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XL && container.pixelHeight <= ResponsiveBreakpoints.XL;\n  };\n  ResponsiveBreakpoints.isXXL = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XXL && container.pixelHeight <= ResponsiveBreakpoints.XXL;\n  };\n  ResponsiveBreakpoints.maybeXXS = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XXS || container.pixelHeight <= ResponsiveBreakpoints.XXS;\n  };\n  ResponsiveBreakpoints.maybeXS = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XS || container.pixelHeight <= ResponsiveBreakpoints.XS;\n  };\n  ResponsiveBreakpoints.maybeS = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.S || container.pixelHeight <= ResponsiveBreakpoints.S;\n  };\n  ResponsiveBreakpoints.maybeM = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.M || container.pixelHeight <= ResponsiveBreakpoints.M;\n  };\n  ResponsiveBreakpoints.maybeL = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.L || container.pixelHeight <= ResponsiveBreakpoints.L;\n  };\n  ResponsiveBreakpoints.maybeXL = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XL || container.pixelHeight <= ResponsiveBreakpoints.XL;\n  };\n  ResponsiveBreakpoints.maybeXXL = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XXL || container.pixelHeight <= ResponsiveBreakpoints.XXL;\n  };\n  // Named pixel breakpoints\n  ResponsiveBreakpoints.XXS = 100;\n  ResponsiveBreakpoints.XS = 200;\n  ResponsiveBreakpoints.S = 300;\n  ResponsiveBreakpoints.M = 400;\n  ResponsiveBreakpoints.L = 600;\n  ResponsiveBreakpoints.XL = 800;\n  ResponsiveBreakpoints.XXL = 1000;\n  return ResponsiveBreakpoints;\n}();\nexport { ResponsiveBreakpoints };","map":{"version":3,"names":["BaseObjectEvents","List","Adapter","registry","$iter","$array","$type","$object","Responsive","_super","__extends","_this","call","_rules","_appliedRules","_appliedTargets","_useDefault","adapter","_enabled","_responsiveDisposers","_noStates","className","rules","events","on","checkRules","_disposers","push","applyTheme","Object","defineProperty","prototype","get","_component","set","value","disposeResponsiveHandlers","getValue","component","once","isReady","enabled","apply","applyRules","defaultRules","useDefault","copyFrom","isApplied","ruleId","rule","hasValue","force","allRules","length","rulesChanged","pixelWidth","pixelHeight","each","iterator","id","getUniqueId","relevant","hidden","ev","target","show","_applyRules","dispatchImmediately","_timeout","dispose","setTimeout","newTarget","defaultStateApplied","isApplied_1","state","getState","indexOf","uid","setState","getDefaultState","transitionDuration","setTargetState","replace","remove","children","child","stateId","tmpId","states","hasKey","getKey","create","defaultState","properties","key","val","property","getPropertyValue","disposer","pop","newValue","ResponsiveBreakpoints","widthXXS","container","XXS","widthXS","XS","widthS","S","widthM","M","widthL","L","widthXL","XL","widthXXL","XXL","heightXXS","heightXS","heightS","heightM","heightL","heightXL","heightXXL","isXXS","isXS","isS","isM","isL","isXL","isXXL","maybeXXS","maybeXS","maybeS","maybeM","maybeL","maybeXL","maybeXXL"],"sources":["../../../../../src/.internal/core/utils/Responsive.ts"],"sourcesContent":["/**\r\n * Responsive functionality module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"../Base\";\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters } from \"../Sprite\";\r\nimport { SpriteState } from \"../SpriteState\";\r\nimport { Container } from \"../Container\";\r\nimport { Component } from \"../Component\";\r\nimport { List } from \"../utils/List\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { registry } from \"../Registry\";\r\nimport { Optional } from \"../utils/Type\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $object from \"../utils/Object\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines an interface for the responsive rule, i.e. what overrides need to\r\n * be applied when certain conditions are matched.\r\n *\r\n * @important\r\n */\r\nexport interface IResponsiveRule {\r\n\r\n\t/**\r\n\t * A function which determines if this rule is relevant to current\r\n\t * conditions.\r\n\t *\r\n\t * Whenever the chrt size changes, this function will be run to determine\r\n\t * whether this rule needs to be applied.\r\n\t */\r\n\trelevant(target: Container): boolean;\r\n\r\n\t/**\r\n\t * A function which creates and returns a [[SpriteState]] that needs to be\r\n\t * set whenever rule should be applied.\r\n\t *\r\n\t * This is run only once.\r\n\t *\r\n\t * Once state is created, it is added to the Sprite's available states and\r\n\t * applied as necessary.\r\n\t */\r\n\tstate(target: Sprite, stateId: string): Optional<SpriteState<ISpriteProperties, ISpriteAdapters>>;\r\n\r\n\t/**\r\n\t * ID of the rule.\r\n\t */\r\n\tid?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Responsive]].\r\n */\r\nexport interface IResponsiveEvents extends IBaseObjectEvents {\r\n\r\n\t/**\r\n\t * Invoked when a list of applicable rules for the current resolution\r\n\t * changes.\r\n\t */\r\n\truleschanged: {},\r\n\r\n\t/**\r\n\t * Invoked after each rule is applied to the actual element.\r\n\t */\r\n\truleapplied: {\r\n\r\n\t\t/**\r\n\t\t * A rule that was just applied.\r\n\t\t */\r\n\t\t\"rule\": IResponsiveRule\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Responsive]] class.\r\n *\r\n * Includes both the [[Adapter]] definitions and properties.\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IResponsiveAdapters {\r\n\r\n\t/**\r\n\t * Are responsive features enabled?\r\n\t */\r\n\tenabled: boolean;\r\n\r\n\t/**\r\n\t * Use default rules?\r\n\t *\r\n\t * If this is set `false`, only user-defined rules will be applied.\r\n\t */\r\n\tuseDefault: boolean;\r\n\r\n\t/**\r\n\t * A list of user-defined rules.\r\n\t */\r\n\trules: List<IResponsiveRule>;\r\n\r\n\t/**\r\n\t * A list of default rules.\r\n\t */\r\n\tdefaultRules: List<IResponsiveRule>;\r\n\r\n\t/**\r\n\t * A list of **all** rules - user-defined and default combined.\r\n\t */\r\n\tallRules: List<IResponsiveRule>;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Responsive is responsible for overriding certain properties when conditions\r\n * are met.\r\n *\r\n * This class is used to dynamically apply and change certain chart properties\r\n * based on the current values of properties.\r\n *\r\n * Mainly, this is used with [[Sprite]]'s dimensional properties, like\r\n * `pixelWidth` and `pixelHeight`. However, it can be used to dynamically\r\n * change any property, based on any other property's value.\r\n *\r\n * A default responsive rules are disabled.\r\n *\r\n * To enable, set `enabled = false`. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.responsive.enabled = true;\r\n * ```\r\n * ```JavaScript\r\n * chart.responsive.enabled = true;\r\n * ```\r\n *\r\n * @see {@link IResponsiveEvents} for a list of available events\r\n * @see {@link IResponsiveAdapters} for a list of available Adapters\r\n * @todo Add default rules\r\n * @todo Watch for rule modification\r\n * @important\r\n */\r\nexport class Responsive extends BaseObjectEvents {\r\n\r\n\t/**\r\n\t * Holds a list of responsive rules organized by object type.\r\n\t */\r\n\tprotected _rules = new List<IResponsiveRule>();\r\n\r\n\t/**\r\n\t * Holds the list of the default responsive rules.\r\n\t * @deprecated\r\n\t */\r\n\t//protected _defaultRules = new List<IResponsiveRule>();\r\n\r\n\t/**\r\n\t * Holds the list of currently applied rules.\r\n\t */\r\n\tprotected _appliedRules: { [index: string]: boolean } = {};\r\n\r\n\t/**\r\n\t * Used to keep track of objects that have rules applied at the moment.\r\n\t */\r\n\tprotected _appliedTargets: string[] = [];\r\n\r\n\tprotected _timeout?: IDisposer;\r\n\r\n\t/**\r\n\t * Use default rules in addition to the user-defined ones?\r\n\t */\r\n\tprotected _useDefault = true;\r\n\r\n\t/**\r\n\t * A target object responsive rules apply to.\r\n\t */\r\n\tprotected _component: $type.Optional<Component>;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IResponsiveEvents;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IResponsiveAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t */\r\n\tpublic adapter = new Adapter<this, IResponsiveAdapters>(this);\r\n\r\n\t/**\r\n\t * Indicates of responsive rules application is enabled.\r\n\t */\r\n\tprotected _enabled = false;\r\n\r\n\t/**\r\n\t * Holds disposers for all events added by this class.\r\n\t */\r\n\tprotected _responsiveDisposers: Array<IDisposer> = [];\r\n\r\n\t/**\r\n\t * Collection of objects and state ids that do not have any properties set.\r\n\t */\r\n\tprivate _noStates: string[] = [];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Responsive\";\r\n\r\n\t\t// Set up rules list events\r\n\t\tthis.rules.events.on(\"inserted\", () => { this.checkRules(); }, true);\r\n\t\tthis.rules.events.on(\"removed\", () => { this.checkRules(); }, true);\r\n\t\tthis._disposers.push(this.rules.events);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A target object that responsive rules will need to be applied to.\r\n\t *\r\n\t * @param value  Target object\r\n\t */\r\n\tpublic set component(value: $type.Optional<Component>) {\r\n\r\n\t\t// Check if it's the same\r\n\t\tif (value == this._component) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Check if we already have a set up component and remove its events\r\n\t\tthis.disposeResponsiveHandlers();\r\n\r\n\t\t// Set\r\n\t\tthis._component = value;\r\n\r\n\t\t// Set up resize monitoring events\r\n\t\tthis._responsiveDisposers.push($type.getValue(this.component).events.on(\"sizechanged\", () => { this.checkRules(); }, this));\r\n\t\tthis._responsiveDisposers.push($type.getValue(this.component).events.once(\"datavalidated\", () => {\r\n\t\t\tif (this._component.isReady()) {\r\n\t\t\t\tthis.checkRules(true);\r\n\t\t\t}\r\n\t\t}, this));\r\n\r\n\t\t// Enable resoponsive\r\n\t\tthis.enabled = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @return Target object\r\n\t */\r\n\tpublic get component(): $type.Optional<Component> {\r\n\t\treturn this._component;\r\n\t}\r\n\r\n\t/**\r\n\t * Should responsive rules be checked against and applied?\r\n\t *\r\n\t * @default false\r\n\t * @param value  Apply responsive rules?\r\n\t */\r\n\tpublic set enabled(value: boolean) {\r\n\t\tif (this._enabled != value) {\r\n\t\t\tthis._enabled = value;\r\n\r\n\t\t\t// Run `applyRules` so that any currently applied rules can be reset\r\n\t\t\tthis.applyRules();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Apply responsive rules?\r\n\t */\r\n\tpublic get enabled(): boolean {\r\n\t\treturn this.adapter.apply(\"enabled\", this._enabled);\r\n\t}\r\n\r\n\t/**\r\n\t * Should default responsive rules be applied in addition to user-defined\r\n\t * ones.\r\n\t *\r\n\t * User-defined rules will take precedence over default rules whenever they\r\n\t * produce conflicting settings.\r\n\t *\r\n\t * @default true\r\n\t * @param value  Use default rules?\r\n\t */\r\n\tpublic set useDefault(value: boolean) {\r\n\t\tif (this._useDefault != value) {\r\n\t\t\tthis._useDefault = value;\r\n\r\n\t\t\t// Run `applyRules` so that any currently applied rules can be reset\r\n\t\t\tthis.applyRules();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use default rules?\r\n\t */\r\n\tpublic get useDefault(): boolean {\r\n\t\treturn this.adapter.apply(\"useDefault\", this._useDefault);\r\n\t}\r\n\r\n\t/**\r\n\t * User-defined responsive rules.\r\n\t *\r\n\t * User-defined rules will take precedence over default rules whenever they\r\n\t * produce conflicting settings.\r\n\t *\r\n\t * Use `allRules` to get all applicable rules including default and\r\n\t * user-defined ones.\r\n\t *\r\n\t * @param value  User-defined rules\r\n\t */\r\n\tpublic set rules(value: List<IResponsiveRule>) {\r\n\t\tthis._rules = value;\r\n\t\tthis._enabled = true;\r\n\t\tthis.applyRules();\r\n\t}\r\n\r\n\t/**\r\n\t * @return User-defined rules\r\n\t */\r\n\tpublic get rules(): List<IResponsiveRule> {\r\n\t\treturn this.adapter.apply(\"rules\", this._rules);\r\n\t}\r\n\r\n\t/**\r\n\t * Default responsive rules.\r\n\t *\r\n\t * @readonly\r\n\t * @return List of responsive rules\r\n\t */\r\n\tpublic get defaultRules(): List<IResponsiveRule> {\r\n\t\treturn this.adapter.apply(\"defaultRules\", defaultRules);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all rules: default rules (if not disabled) combined with\r\n\t * user-defined ones.\r\n\t *\r\n\t * @readonly\r\n\t * @return List of all applicable rules\r\n\t */\r\n\tpublic get allRules(): List<IResponsiveRule> {\r\n\r\n\t\t// Create empty list\r\n\t\tlet rules = new List<IResponsiveRule>();\r\n\r\n\t\t// Add default rules if not disabled\r\n\t\t// A code, requesting `allRules` must ensure loading of default rules\r\n\t\t// by calling `loadDefaultRules()`\r\n\t\tif (this.useDefault) {\r\n\t\t\trules.copyFrom(this.defaultRules);\r\n\t\t}\r\n\r\n\t\t// Add user-defined ones\r\n\t\trules.copyFrom(this.rules);\r\n\r\n\t\treturn this.adapter.apply(\"allRules\", rules);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if rule by the particular id currently applied.\r\n\t *\r\n\t * @param ruleId  Rule ID\r\n\t * @return Is currently applied?\r\n\t */\r\n\tprotected isApplied(ruleId: string): boolean {\r\n\t\tconst rule = this._appliedRules[ruleId];\r\n\t\treturn $type.hasValue(rule) ? rule : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks which responsive rules currently satisfy their conditions and\r\n\t * should be applied, or unapplied.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic checkRules(force: boolean = false): void {\r\n\r\n\t\t// Check if there are any rules\r\n\t\tlet rules = this.allRules;\r\n\t\tif (!rules || rules.length == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Init a list of rules to be applied\r\n\t\tlet rulesChanged: boolean = false;\r\n\r\n\t\tconst component = $type.getValue(this.component);\r\n\r\n\t\t// Do not perform rule application of target has no size\r\n\t\tif (component.pixelWidth == 0 || component.pixelHeight == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Check which rules match\r\n\t\t$iter.each(rules.iterator(), (rule) => {\r\n\r\n\t\t\t// Check if rule has an id\r\n\t\t\tif (!rule.id) {\r\n\t\t\t\trule.id = registry.getUniqueId();\r\n\t\t\t}\r\n\r\n\t\t\t// Init indicator if this rule should be applied\r\n\t\t\tlet apply = rule.relevant(component);\r\n\r\n\t\t\t// Let's check if this rule needs to be applied\r\n\t\t\tif ((apply && !this.isApplied(rule.id)) || (!apply && this.isApplied(rule.id))) {\r\n\t\t\t\trulesChanged = true;\r\n\t\t\t}\r\n\t\t\tthis._appliedRules[rule.id] = apply;\r\n\t\t});\r\n\r\n\t\tif (force) {\r\n\t\t\trulesChanged = true;\r\n\t\t}\r\n\r\n\t\t// Check if we need to re-apply the rules\r\n\t\tif (rulesChanged) {\r\n\r\n\t\t\tif (!this.component.isReady()) {\r\n\t\t\t\t// The chart is not yet ready (built)\r\n\t\t\t\t// We will hide the chart and delay application of rules\r\n\t\t\t\t// until \"ready\" event kicks in\r\n\t\t\t\t//component.hide(0);\r\n\t\t\t\tcomponent.hidden = true;\r\n\t\t\t\tcomponent.events.once(\"ready\", (ev) => {\r\n\t\t\t\t\tev.target.show(0);\r\n\t\t\t\t\tthis._applyRules();\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.dispatchImmediately(\"ruleschanged\");\r\n\t\t\tthis._applyRules();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected _applyRules(): void {\r\n\t\tif (this._timeout) {\r\n\t\t\tthis._timeout.dispose();\r\n\t\t}\r\n\t\tthis._timeout = this.setTimeout(() => {\r\n\t\t\tthis.applyRules();\r\n\t\t}, 10);\r\n\t}\r\n\r\n\t/**\r\n\t * Applies current rules to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param target Target object\r\n\t * @todo Better type check\r\n\t */\r\n\tpublic applyRules(target?: Container): void {\r\n\r\n\t\t// If no target supplied, we assume the top-level element\r\n\t\tconst newTarget = ($type.hasValue(target)\r\n\t\t\t? target\r\n\t\t\t: $type.getValue(this.component));\r\n\t\t// Check each rule\r\n\t\tlet defaultStateApplied = false;\r\n\t\tif (this.enabled) {\r\n\t\t\tlet isApplied = false;\r\n\t\t\t$iter.each(this.allRules.iterator(), (rule) => {\r\n\r\n\t\t\t\t// Get relevant state\r\n\t\t\t\tlet state = this.getState(rule, newTarget);\r\n\r\n\t\t\t\t// If there's a state, it means it needs to be applied\r\n\t\t\t\tif (state) {\r\n\r\n\t\t\t\t\t// Check if default state was already applied to this element.\r\n\t\t\t\t\t// We don't want to go resetting default states to ALL element,\r\n\t\t\t\t\t// if they don't have responsive states.\r\n\t\t\t\t\tif (!defaultStateApplied) {\r\n\t\t\t\t\t\t// Nope, reset states (instantly).\r\n\t\t\t\t\t\tif ($array.indexOf(this._appliedTargets, newTarget.uid) !== -1) {\r\n\t\t\t\t\t\t\t// But only if this element has any rules applied, otherwise no\r\n\t\t\t\t\t\t\t// point in setting current state\r\n\t\t\t\t\t\t\tnewTarget.setState(this.getDefaultState(newTarget), 0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdefaultStateApplied = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Is this rule currently applied?\r\n\t\t\t\t\tif (this.isApplied($type.getValue(rule.id))) {\r\n\t\t\t\t\t\t// Yes. Apply the responsive state\r\n\t\t\t\t\t\tstate.transitionDuration = 0;\r\n\t\t\t\t\t\tthis.setTargetState(newTarget, state);\r\n\t\t\t\t\t\tthis.dispatchImmediately(\"ruleapplied\", {\r\n\t\t\t\t\t\t\trule: rule\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tisApplied = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (isApplied) {\r\n\t\t\t\t$array.replace(this._appliedTargets, newTarget.uid);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$array.remove(this._appliedTargets, newTarget.uid);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Apply rules to the children\r\n\t\tif (newTarget.children) {\r\n\t\t\t$iter.each(newTarget.children.iterator(), (child) => {\r\n\t\t\t\tthis.applyRules(child as Container);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a relative state for the rule/target, or `undefined` if no state is\r\n\t * needed.\r\n\t *\r\n\t * @param rule    [description]\r\n\t * @param target  [description]\r\n\t * @return [description]\r\n\t */\r\n\tprotected getState(rule: IResponsiveRule, target: any): Optional<SpriteState<any, any>> {\r\n\t\tlet stateId = \"responsive-\" + rule.id;\r\n\t\tlet tmpId = target.uid + \"_\" + stateId;\r\n\t\tif ($array.indexOf(this._noStates, tmpId) !== -1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if (!target.states.hasKey(stateId)) {\r\n\t\t\tlet state = rule.state(target, stateId);\r\n\t\t\tif (!state) {\r\n\t\t\t\tthis._noStates.push(tmpId);\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn target.states.getKey(stateId);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns default responsive rule for the target.\r\n\t * \r\n\t * This rule will be used to \"reset\" to non-responsive values.\r\n\t * @param   target  Target Sprite\r\n\t * @return          State\r\n\t */\r\n\tprotected getDefaultState(target: any): SpriteState<any, any> {\r\n\t\tif (target.states.hasKey(\"responsive-default\")) {\r\n\t\t\treturn target.states.getKey(\"responsive-default\");\r\n\t\t}\r\n\t\treturn target.states.create(\"responsive-default\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets state on the target element and updates default state with the\r\n\t * overwritten values if needed.\r\n\t * \r\n\t * @param  target  Target\r\n\t * @param  state   State\r\n\t */\r\n\tprotected setTargetState(target: any, state: SpriteState<any, any>): void {\r\n\t\t// Update default state\r\n\t\tconst defaultState = this.getDefaultState(target);\r\n\t\t$object.each(state.properties, (key, val) => {\r\n\t\t\tif (!$type.hasValue(defaultState.properties[key])) {\r\n\t\t\t\tdefaultState.properties[key] = this.getValue(target, key);\r\n\t\t\t}\r\n\t\t});\r\n\t\ttarget.setState(state);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a value from an element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param target    Target object\r\n\t * @param property  Property\r\n\t * @return Property value\r\n\t */\r\n\tpublic getValue(target: any, property: string): any {\r\n\t\t// This is a bit hacky, first we check if the property exist.\r\n\t\t// If it doesn't we try accessing target's property directly\r\n\t\tlet value: any = target.getPropertyValue(property);\r\n\t\tif (!$type.hasValue(value) && $type.hasValue(target[property])) {\r\n\t\t\tvalue = target[property];\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes the object.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tthis.disposeResponsiveHandlers();\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes all event handlers.\r\n\t */\r\n\tprotected disposeResponsiveHandlers(): void {\r\n\t\tlet disposer = this._responsiveDisposers.pop();\r\n\t\twhile (disposer) {\r\n\t\t\tdisposer.dispose();\r\n\t\t\tdisposer = this._responsiveDisposers.pop();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * [defaultRules description]\r\n *\r\n * @todo description\r\n */\r\nexport let defaultRules = new List<IResponsiveRule>();\r\ndefaultRules.events.on(\"inserted\", (ev) => {\r\n\tev.newValue.id = registry.getUniqueId();\r\n});\r\n\r\n/**\r\n *\r\n * @todo description\r\n */\r\nexport class ResponsiveBreakpoints {\r\n\r\n\t// Named pixel breakpoints\r\n\tstatic XXS = 100;\r\n\tstatic XS = 200;\r\n\tstatic S = 300;\r\n\tstatic M = 400;\r\n\tstatic L = 600;\r\n\tstatic XL = 800;\r\n\tstatic XXL = 1000;\r\n\r\n\t// Breakpoint functions (for use in `relevant` clause of the responsive rules)\r\n\r\n\tstatic widthXXS(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.XXS;\r\n\t}\r\n\r\n\tstatic widthXS(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.XS;\r\n\t}\r\n\r\n\tstatic widthS(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.S;\r\n\t}\r\n\r\n\tstatic widthM(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.M;\r\n\t}\r\n\r\n\tstatic widthL(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.L;\r\n\t}\r\n\r\n\tstatic widthXL(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.XL;\r\n\t}\r\n\r\n\tstatic widthXXL(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.XXL;\r\n\t}\r\n\r\n\r\n\tstatic heightXXS(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.XXS;\r\n\t}\r\n\r\n\tstatic heightXS(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.XS;\r\n\t}\r\n\r\n\tstatic heightS(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.S;\r\n\t}\r\n\r\n\tstatic heightM(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.M;\r\n\t}\r\n\r\n\tstatic heightL(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.L;\r\n\t}\r\n\r\n\tstatic heightXL(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.XL;\r\n\t}\r\n\r\n\tstatic heightXXL(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.XXL;\r\n\t}\r\n\r\n\r\n\tstatic isXXS(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XXS) && (container.pixelHeight <= ResponsiveBreakpoints.XXS);\r\n\t}\r\n\r\n\tstatic isXS(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XS) && (container.pixelHeight <= ResponsiveBreakpoints.XS);\r\n\t}\r\n\r\n\tstatic isS(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.S) && (container.pixelHeight <= ResponsiveBreakpoints.S);\r\n\t}\r\n\r\n\tstatic isM(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.M) && (container.pixelHeight <= ResponsiveBreakpoints.M);\r\n\t}\r\n\r\n\tstatic isL(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.L) && (container.pixelHeight <= ResponsiveBreakpoints.L);\r\n\t}\r\n\r\n\tstatic isXL(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XL) && (container.pixelHeight <= ResponsiveBreakpoints.XL);\r\n\t}\r\n\r\n\tstatic isXXL(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XXL) && (container.pixelHeight <= ResponsiveBreakpoints.XXL);\r\n\t}\r\n\r\n\r\n\tstatic maybeXXS(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XXS) || (container.pixelHeight <= ResponsiveBreakpoints.XXS);\r\n\t}\r\n\r\n\tstatic maybeXS(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XS) || (container.pixelHeight <= ResponsiveBreakpoints.XS);\r\n\t}\r\n\r\n\tstatic maybeS(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.S) || (container.pixelHeight <= ResponsiveBreakpoints.S);\r\n\t}\r\n\r\n\tstatic maybeM(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.M) || (container.pixelHeight <= ResponsiveBreakpoints.M);\r\n\t}\r\n\r\n\tstatic maybeL(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.L) || (container.pixelHeight <= ResponsiveBreakpoints.L);\r\n\t}\r\n\r\n\tstatic maybeXL(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XL) || (container.pixelHeight <= ResponsiveBreakpoints.XL);\r\n\t}\r\n\r\n\tstatic maybeXXL(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XXL) || (container.pixelHeight <= ResponsiveBreakpoints.XXL);\r\n\t}\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}