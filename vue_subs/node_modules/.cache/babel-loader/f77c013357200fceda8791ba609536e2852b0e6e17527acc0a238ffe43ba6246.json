{"ast":null,"code":"import { defineStore } from 'pinia';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nexport const useAuthStore = defineStore('auth', {\n  state: () => ({\n    user: null,\n    accessToken: null,\n    refreshToken: null\n  }),\n  actions: {\n    async login(credentials) {\n      try {\n        const response = await axios.post('/api/v1/token/', credentials);\n        this.accessToken = response.data.access;\n        this.refreshToken = response.data.refresh;\n        console.log(response);\n\n        // Decode token safely\n        try {\n          const tokenPayload = jwtDecode(this.accessToken, {\n            header: true\n          });\n          console.log('Decoded Token Payload:', tokenPayload);\n\n          // Set user details\n          this.user = {\n            first_name: tokenPayload.first_name,\n            last_name: tokenPayload.last_name,\n            email: tokenPayload.email\n          };\n        } catch (error) {\n          console.error('Error decoding token:', error);\n          throw new Error('Invalid token received from server');\n        }\n\n        // Save tokens in localStorage for persistence\n        localStorage.setItem('accessToken', this.accessToken);\n        localStorage.setItem('refreshToken', this.refreshToken);\n      } catch (error) {\n        console.error('Login failed', error);\n        throw error;\n      }\n    },\n    logout() {\n      this.user = null;\n      this.accessToken = null;\n      this.refreshToken = null;\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n    },\n    loadTokensFromStorage() {\n      this.accessToken = localStorage.getItem('accessToken');\n      this.refreshToken = localStorage.getItem('refreshToken');\n      if (this.accessToken) {\n        try {\n          const tokenPayload = jwtDecode(this.accessToken);\n          this.user = {\n            first_name: tokenPayload.first_name,\n            last_name: tokenPayload.last_name,\n            email: tokenPayload.email\n          };\n        } catch (error) {\n          console.error('Error decoding stored token:', error);\n          this.logout(); // Clear invalid tokens\n        }\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","axios","jwtDecode","useAuthStore","state","user","accessToken","refreshToken","actions","login","credentials","response","post","data","access","refresh","console","log","tokenPayload","header","first_name","last_name","email","error","Error","localStorage","setItem","logout","removeItem","loadTokensFromStorage","getItem"],"sources":["/home/josh/Documents/projects/subs/vue_subs/src/stores/auth.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\n\nexport const useAuthStore = defineStore('auth', {\n  state: () => ({\n    user: null,\n    accessToken: null,\n    refreshToken: null,\n  }),\n  actions: {\n    async login(credentials) {\n      try {\n        const response = await axios.post('/api/v1/token/', credentials);\n        this.accessToken = response.data.access;\n        this.refreshToken = response.data.refresh;\n\n        console.log(response);\n\n        // Decode token safely\n        try {\n          const tokenPayload = jwtDecode(this.accessToken, {header: true});\n          console.log('Decoded Token Payload:', tokenPayload);\n\n          // Set user details\n          this.user = {\n            first_name: tokenPayload.first_name,\n            last_name: tokenPayload.last_name,\n            email: tokenPayload.email,\n          };\n        } catch (error) {\n          console.error('Error decoding token:', error);\n          throw new Error('Invalid token received from server');\n        }\n\n        // Save tokens in localStorage for persistence\n        localStorage.setItem('accessToken', this.accessToken);\n        localStorage.setItem('refreshToken', this.refreshToken);\n      } catch (error) {\n        console.error('Login failed', error);\n        throw error;\n      }\n    },\n    logout() {\n      this.user = null;\n      this.accessToken = null;\n      this.refreshToken = null;\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n    },\n    loadTokensFromStorage() {\n      this.accessToken = localStorage.getItem('accessToken');\n      this.refreshToken = localStorage.getItem('refreshToken');\n\n      if (this.accessToken) {\n        try {\n          const tokenPayload = jwtDecode(this.accessToken);\n          this.user = {\n            first_name: tokenPayload.first_name,\n            last_name: tokenPayload.last_name,\n            email: tokenPayload.email,\n          };\n        } catch (error) {\n          console.error('Error decoding stored token:', error);\n          this.logout(); // Clear invalid tokens\n        }\n      }\n    },\n  },\n});\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAO,MAAMC,YAAY,GAAGH,WAAW,CAAC,MAAM,EAAE;EAC9CI,KAAK,EAAEA,CAAA,MAAO;IACZC,IAAI,EAAE,IAAI;IACVC,WAAW,EAAE,IAAI;IACjBC,YAAY,EAAE;EAChB,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAACC,WAAW,EAAE;MACvB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,gBAAgB,EAAEF,WAAW,CAAC;QAChE,IAAI,CAACJ,WAAW,GAAGK,QAAQ,CAACE,IAAI,CAACC,MAAM;QACvC,IAAI,CAACP,YAAY,GAAGI,QAAQ,CAACE,IAAI,CAACE,OAAO;QAEzCC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;;QAErB;QACA,IAAI;UACF,MAAMO,YAAY,GAAGhB,SAAS,CAAC,IAAI,CAACI,WAAW,EAAE;YAACa,MAAM,EAAE;UAAI,CAAC,CAAC;UAChEH,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,YAAY,CAAC;;UAEnD;UACA,IAAI,CAACb,IAAI,GAAG;YACVe,UAAU,EAAEF,YAAY,CAACE,UAAU;YACnCC,SAAS,EAAEH,YAAY,CAACG,SAAS;YACjCC,KAAK,EAAEJ,YAAY,CAACI;UACtB,CAAC;QACH,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7C,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;QACvD;;QAEA;QACAC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAE,IAAI,CAACpB,WAAW,CAAC;QACrDmB,YAAY,CAACC,OAAO,CAAC,cAAc,EAAE,IAAI,CAACnB,YAAY,CAAC;MACzD,CAAC,CAAC,OAAOgB,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpC,MAAMA,KAAK;MACb;IACF,CAAC;IACDI,MAAMA,CAAA,EAAG;MACP,IAAI,CAACtB,IAAI,GAAG,IAAI;MAChB,IAAI,CAACC,WAAW,GAAG,IAAI;MACvB,IAAI,CAACC,YAAY,GAAG,IAAI;MACxBkB,YAAY,CAACG,UAAU,CAAC,aAAa,CAAC;MACtCH,YAAY,CAACG,UAAU,CAAC,cAAc,CAAC;IACzC,CAAC;IACDC,qBAAqBA,CAAA,EAAG;MACtB,IAAI,CAACvB,WAAW,GAAGmB,YAAY,CAACK,OAAO,CAAC,aAAa,CAAC;MACtD,IAAI,CAACvB,YAAY,GAAGkB,YAAY,CAACK,OAAO,CAAC,cAAc,CAAC;MAExD,IAAI,IAAI,CAACxB,WAAW,EAAE;QACpB,IAAI;UACF,MAAMY,YAAY,GAAGhB,SAAS,CAAC,IAAI,CAACI,WAAW,CAAC;UAChD,IAAI,CAACD,IAAI,GAAG;YACVe,UAAU,EAAEF,YAAY,CAACE,UAAU;YACnCC,SAAS,EAAEH,YAAY,CAACG,SAAS;YACjCC,KAAK,EAAEJ,YAAY,CAACI;UACtB,CAAC;QACH,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdP,OAAO,CAACO,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;UACpD,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAAC;QACjB;MACF;IACF;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}