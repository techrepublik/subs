{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, halfPi, pi, sin, sqrt } from \"./math.js\";\nexport function eckert4Raw(lambda, phi) {\n  var k = (2 + halfPi) * sin(phi);\n  phi /= 2;\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    var cosPhi = cos(phi);\n    phi -= delta = (phi + sin(phi) * (cosPhi + 2) - k) / (2 * cosPhi * (1 + cosPhi));\n  }\n  return [2 / sqrt(pi * (4 + pi)) * lambda * (1 + cos(phi)), 2 * sqrt(pi / (4 + pi)) * sin(phi)];\n}\neckert4Raw.invert = function (x, y) {\n  var A = y * sqrt((4 + pi) / pi) / 2,\n    k = asin(A),\n    c = cos(k);\n  return [x / (2 / sqrt(pi * (4 + pi)) * (1 + c)), asin((k + A * (c + 2)) / (2 + halfPi))];\n};\nexport default function () {\n  return projection(eckert4Raw).scale(180.739);\n}","map":{"version":3,"names":["geoProjection","projection","abs","asin","cos","epsilon","halfPi","pi","sin","sqrt","eckert4Raw","lambda","phi","k","i","delta","Infinity","cosPhi","invert","x","y","A","c","scale"],"sources":["/home/josh/Documents/projects/subs/vue_subs/node_modules/d3-geo-projection/src/eckert4.js"],"sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt} from \"./math.js\";\n\nexport function eckert4Raw(lambda, phi) {\n  var k = (2 + halfPi) * sin(phi);\n  phi /= 2;\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    var cosPhi = cos(phi);\n    phi -= delta = (phi + sin(phi) * (cosPhi + 2) - k) / (2 * cosPhi * (1 + cosPhi));\n  }\n  return [\n    2 / sqrt(pi * (4 + pi)) * lambda * (1 + cos(phi)),\n    2 * sqrt(pi / (4 + pi)) * sin(phi)\n  ];\n}\n\neckert4Raw.invert = function(x, y) {\n  var A = y * sqrt((4 + pi) / pi) / 2,\n      k = asin(A),\n      c = cos(k);\n  return [\n    x / (2 / sqrt(pi * (4 + pi)) * (1 + c)),\n    asin((k + A * (c + 2)) / (2 + halfPi))\n  ];\n};\n\nexport default function() {\n  return projection(eckert4Raw)\n      .scale(180.739);\n}\n"],"mappings":"AAAA,SAAQA,aAAa,IAAIC,UAAU,QAAO,QAAQ;AAClD,SAAQC,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAEC,OAAO,EAAEC,MAAM,EAAEC,EAAE,EAAEC,GAAG,EAAEC,IAAI,QAAO,WAAW;AAExE,OAAO,SAASC,UAAUA,CAACC,MAAM,EAAEC,GAAG,EAAE;EACtC,IAAIC,CAAC,GAAG,CAAC,CAAC,GAAGP,MAAM,IAAIE,GAAG,CAACI,GAAG,CAAC;EAC/BA,GAAG,IAAI,CAAC;EACR,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,KAAK,GAAGC,QAAQ,EAAEF,CAAC,GAAG,EAAE,IAAIZ,GAAG,CAACa,KAAK,CAAC,GAAGV,OAAO,EAAES,CAAC,EAAE,EAAE;IACrE,IAAIG,MAAM,GAAGb,GAAG,CAACQ,GAAG,CAAC;IACrBA,GAAG,IAAIG,KAAK,GAAG,CAACH,GAAG,GAAGJ,GAAG,CAACI,GAAG,CAAC,IAAIK,MAAM,GAAG,CAAC,CAAC,GAAGJ,CAAC,KAAK,CAAC,GAAGI,MAAM,IAAI,CAAC,GAAGA,MAAM,CAAC,CAAC;EAClF;EACA,OAAO,CACL,CAAC,GAAGR,IAAI,CAACF,EAAE,IAAI,CAAC,GAAGA,EAAE,CAAC,CAAC,GAAGI,MAAM,IAAI,CAAC,GAAGP,GAAG,CAACQ,GAAG,CAAC,CAAC,EACjD,CAAC,GAAGH,IAAI,CAACF,EAAE,IAAI,CAAC,GAAGA,EAAE,CAAC,CAAC,GAAGC,GAAG,CAACI,GAAG,CAAC,CACnC;AACH;AAEAF,UAAU,CAACQ,MAAM,GAAG,UAASC,CAAC,EAAEC,CAAC,EAAE;EACjC,IAAIC,CAAC,GAAGD,CAAC,GAAGX,IAAI,CAAC,CAAC,CAAC,GAAGF,EAAE,IAAIA,EAAE,CAAC,GAAG,CAAC;IAC/BM,CAAC,GAAGV,IAAI,CAACkB,CAAC,CAAC;IACXC,CAAC,GAAGlB,GAAG,CAACS,CAAC,CAAC;EACd,OAAO,CACLM,CAAC,IAAI,CAAC,GAAGV,IAAI,CAACF,EAAE,IAAI,CAAC,GAAGA,EAAE,CAAC,CAAC,IAAI,CAAC,GAAGe,CAAC,CAAC,CAAC,EACvCnB,IAAI,CAAC,CAACU,CAAC,GAAGQ,CAAC,IAAIC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAGhB,MAAM,CAAC,CAAC,CACvC;AACH,CAAC;AAED,eAAe,YAAW;EACxB,OAAOL,UAAU,CAACS,UAAU,CAAC,CACxBa,KAAK,CAAC,OAAO,CAAC;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}