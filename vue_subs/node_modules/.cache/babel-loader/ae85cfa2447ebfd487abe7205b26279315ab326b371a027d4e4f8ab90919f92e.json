{"ast":null,"code":"/**\r\n * Axis Tick module\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Tick } from \"../elements/Tick\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Draws an axis tick\r\n * @see {@link IAxisTickEvents} for a list of available events\r\n * @see {@link IAxisTickAdapters} for a list of available Adapters\r\n */\nvar AxisTick = /** @class */function (_super) {\n  __extends(AxisTick, _super);\n  function AxisTick() {\n    var _this = _super.call(this) || this;\n    _this.className = \"AxisTick\";\n    _this.element = _this.paper.add(\"path\");\n    _this.location = 0.5;\n    _this.above = false;\n    _this.isMeasured = false;\n    _this.pixelPerfect = true;\n    _this.strokeOpacity = 0;\n    _this.length = 5;\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(AxisTick.prototype, \"location\", {\n    /**\r\n     * @return Location (0-1)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"location\");\n    },\n    /**\r\n     * Relative location of the tick. (0-1)\r\n     *\r\n     * @param value  Location (0-1)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"location\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisTick.prototype, \"inside\", {\n    /**\r\n     * Returns if label is set to be drawn inside axis.\r\n     *\r\n     * @return Inside?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"inside\");\n    },\n    /**\r\n     * Sets if tick should be drawn inside axis.\r\n     *\r\n     * @param value  Inside?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"inside\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisTick.prototype, \"above\", {\n    /**\r\n     * @return Draw above series?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"above\");\n    },\n    /**\r\n     * Normally tick goes below series. Set this to `true` to go above.\r\n     *\r\n     * @default false\r\n     * @since 4.5.9\r\n     * @param  value  Draw above series?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"above\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * @ignore\r\n   */\n  AxisTick.prototype.setDisabled = function (value) {\n    var changed = _super.prototype.setDisabled.call(this, value);\n    if (this.axis) {\n      this.axis.invalidateDataItems();\n    }\n    return changed;\n  };\n  return AxisTick;\n}(Tick);\nexport { AxisTick };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"AxisTick\"] = AxisTick;","map":{"version":3,"names":["Tick","registry","AxisTick","_super","__extends","_this","call","className","element","paper","add","location","above","isMeasured","pixelPerfect","strokeOpacity","length","applyTheme","Object","defineProperty","prototype","get","getPropertyValue","set","value","setPropertyValue","setDisabled","changed","axis","invalidateDataItems","registeredClasses"],"sources":["../../../../../src/.internal/charts/axes/AxisTick.ts"],"sourcesContent":["/**\r\n * Axis Tick module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Tick, ITickProperties, ITickAdapters, ITickEvents } from \"../elements/Tick\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisTick]].\r\n */\r\nexport interface IAxisTickProperties extends ITickProperties {\r\n\t/**\r\n\t * Relative location of the tick. (0-1)\r\n\t */\r\n\tlocation?: number;\r\n\r\n\t/**\r\n\t * Draw the tick on the inside of the Axis?\r\n\t */\r\n\tinside?: boolean;\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tabove?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisTick]].\r\n */\r\nexport interface IAxisTickEvents extends ITickEvents {\r\n\r\n}\r\n\r\n/**\r\n * Defines adapter for [[AxisTick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisTickAdapters extends ITickAdapters, IAxisTickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws an axis tick\r\n * @see {@link IAxisTickEvents} for a list of available events\r\n * @see {@link IAxisTickAdapters} for a list of available Adapters\r\n */\r\nexport class AxisTick extends Tick {\r\n\r\n\t/**\r\n\t * Defines available properties\r\n\t */\r\n\tpublic _properties!: IAxisTickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters\r\n\t */\r\n\tpublic _adapter!: IAxisTickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisTickEvents;\r\n\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referece to Axis element this tick is placed on.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"AxisTick\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.location = 0.5;\r\n\r\n\t\tthis.above = false;\r\n\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.pixelPerfect = true;\r\n\r\n\t\tthis.strokeOpacity = 0;\r\n\r\n\t\tthis.length = 5;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location of the tick. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if tick should be drawn inside axis.\r\n\t *\r\n\t * @param value  Inside?\r\n\t */\r\n\tpublic set inside(value: boolean) {\r\n\t\tthis.setPropertyValue(\"inside\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if label is set to be drawn inside axis.\r\n\t *\r\n\t * @return Inside?\r\n\t */\r\n\tpublic get inside(): boolean {\r\n\t\treturn this.getPropertyValue(\"inside\");\r\n\t}\r\n\r\n\t/**\r\n\t * Normally tick goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.5.9\r\n\t * @param  value  Draw above series?\r\n\t */\r\n\tpublic set above(value: boolean) {\r\n\t\tthis.setPropertyValue(\"above\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Draw above series?\r\n\t */\r\n\tpublic get above(): boolean {\r\n\t\treturn this.getPropertyValue(\"above\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean): boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.axis) {\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisTick\"] = AxisTick;\r\n"],"mappings":"AAAA;;;;AAIA;;;;;;AAMA,SAASA,IAAI,QAAqD,kBAAkB;AAEpF,SAASC,QAAQ,QAAQ,qBAAqB;AA8C9C;;;;;;AAOA;;;;;AAKA,IAAAC,QAAA,0BAAAC,MAAA;EAA8BC,SAAA,CAAAF,QAAA,EAAAC,MAAA;EAwB7B,SAAAD,SAAA;IAAA,IAAAG,KAAA,GACCF,MAAA,CAAAG,IAAA,MAAO;IAEPD,KAAI,CAACE,SAAS,GAAG,UAAU;IAE3BF,KAAI,CAACG,OAAO,GAAGH,KAAI,CAACI,KAAK,CAACC,GAAG,CAAC,MAAM,CAAC;IAErCL,KAAI,CAACM,QAAQ,GAAG,GAAG;IAEnBN,KAAI,CAACO,KAAK,GAAG,KAAK;IAElBP,KAAI,CAACQ,UAAU,GAAG,KAAK;IAEvBR,KAAI,CAACS,YAAY,GAAG,IAAI;IAExBT,KAAI,CAACU,aAAa,GAAG,CAAC;IAEtBV,KAAI,CAACW,MAAM,GAAG,CAAC;IAEfX,KAAI,CAACY,UAAU,EAAE;;EAClB;EAOAC,MAAA,CAAAC,cAAA,CAAWjB,QAAA,CAAAkB,SAAA,YAAQ;IAInB;;;SAGA,SAAAC,CAAA;MACC,OAAO,IAAI,CAACC,gBAAgB,CAAC,UAAU,CAAC;IACzC,CAAC;IAdD;;;;;SAKA,SAAAC,CAAoBC,KAAuB;MAC1C,IAAI,CAACC,gBAAgB,CAAC,UAAU,EAAED,KAAK,EAAE,IAAI,CAAC;IAC/C,CAAC;;;;EAcDN,MAAA,CAAAC,cAAA,CAAWjB,QAAA,CAAAkB,SAAA,UAAM;IAIjB;;;;;SAKA,SAAAC,CAAA;MACC,OAAO,IAAI,CAACC,gBAAgB,CAAC,QAAQ,CAAC;IACvC,CAAC;IAhBD;;;;;SAKA,SAAAC,CAAkBC,KAAc;MAC/B,IAAI,CAACC,gBAAgB,CAAC,QAAQ,EAAED,KAAK,EAAE,IAAI,CAAC;IAC7C,CAAC;;;;EAkBDN,MAAA,CAAAC,cAAA,CAAWjB,QAAA,CAAAkB,SAAA,SAAK;IAIhB;;;SAGA,SAAAC,CAAA;MACC,OAAO,IAAI,CAACC,gBAAgB,CAAC,OAAO,CAAC;IACtC,CAAC;IAhBD;;;;;;;SAOA,SAAAC,CAAiBC,KAAc;MAC9B,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAED,KAAK,EAAE,IAAI,CAAC;IAC5C,CAAC;;;;EASD;;;EAGUtB,QAAA,CAAAkB,SAAA,CAAAM,WAAW,GAArB,UAAsBF,KAAc;IACnC,IAAIG,OAAO,GAAGxB,MAAA,CAAAiB,SAAA,CAAMM,WAAW,CAAApB,IAAA,OAACkB,KAAK,CAAC;IACtC,IAAI,IAAI,CAACI,IAAI,EAAE;MACd,IAAI,CAACA,IAAI,CAACC,mBAAmB,EAAE;;IAEhC,OAAOF,OAAO;EACf,CAAC;EACF,OAAAzB,QAAC;AAAD,CAAC,CA5G6BF,IAAI;;AA+GlC;;;;;;AAMAC,QAAQ,CAAC6B,iBAAiB,CAAC,UAAU,CAAC,GAAG5B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}