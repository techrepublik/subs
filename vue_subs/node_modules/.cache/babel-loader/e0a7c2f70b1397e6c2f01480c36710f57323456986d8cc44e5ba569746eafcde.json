{"ast":null,"code":"import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, acos, asin, atan2, cos, epsilon2, halfPi, pi, sin, sqrt } from \"./math.js\";\nexport function hillRaw(K) {\n  var L = 1 + K,\n    sinBt = sin(1 / L),\n    Bt = asin(sinBt),\n    A = 2 * sqrt(pi / (B = pi + 4 * Bt * L)),\n    B,\n    rho0 = 0.5 * A * (L + sqrt(K * (2 + K))),\n    K2 = K * K,\n    L2 = L * L;\n  function forward(lambda, phi) {\n    var t = 1 - sin(phi),\n      rho,\n      omega;\n    if (t && t < 2) {\n      var theta = halfPi - phi,\n        i = 25,\n        delta;\n      do {\n        var sinTheta = sin(theta),\n          cosTheta = cos(theta),\n          Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta),\n          C = 1 + L2 - 2 * L * cosTheta;\n        theta -= delta = (theta - K2 * Bt - L * sinTheta + C * Bt_Bt1 - 0.5 * t * B) / (2 * L * sinTheta * Bt_Bt1);\n      } while (abs(delta) > epsilon2 && --i > 0);\n      rho = A * sqrt(C);\n      omega = lambda * Bt_Bt1 / pi;\n    } else {\n      rho = A * (K + t);\n      omega = lambda * Bt / pi;\n    }\n    return [rho * sin(omega), rho0 - rho * cos(omega)];\n  }\n  forward.invert = function (x, y) {\n    var rho2 = x * x + (y -= rho0) * y,\n      cosTheta = (1 + L2 - rho2 / (A * A)) / (2 * L),\n      theta = acos(cosTheta),\n      sinTheta = sin(theta),\n      Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta);\n    return [asin(x / sqrt(rho2)) * pi / Bt_Bt1, asin(1 - 2 * (theta - K2 * Bt - L * sinTheta + (1 + L2 - 2 * L * cosTheta) * Bt_Bt1) / B)];\n  };\n  return forward;\n}\nexport default function () {\n  var K = 1,\n    m = projectionMutator(hillRaw),\n    p = m(K);\n  p.ratio = function (_) {\n    return arguments.length ? m(K = +_) : K;\n  };\n  return p.scale(167.774).center([0, 18.67]);\n}","map":{"version":3,"names":["geoProjectionMutator","projectionMutator","abs","acos","asin","atan2","cos","epsilon2","halfPi","pi","sin","sqrt","hillRaw","K","L","sinBt","Bt","A","B","rho0","K2","L2","forward","lambda","phi","t","rho","omega","theta","i","delta","sinTheta","cosTheta","Bt_Bt1","C","invert","x","y","rho2","m","p","ratio","_","arguments","length","scale","center"],"sources":["/Users/admin/Desktop/techrepublik/pro/subs/vue_subs/node_modules/d3-geo-projection/src/hill.js"],"sourcesContent":["import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, acos, asin, atan2, cos, epsilon2, halfPi, pi, sin, sqrt} from \"./math.js\";\n\nexport function hillRaw(K) {\n  var L = 1 + K,\n      sinBt = sin(1 / L),\n      Bt = asin(sinBt),\n      A = 2 * sqrt(pi / (B = pi + 4 * Bt * L)),\n      B,\n      rho0 = 0.5 * A * (L + sqrt(K * (2 + K))),\n      K2 = K * K,\n      L2 = L * L;\n\n  function forward(lambda, phi) {\n    var t = 1 - sin(phi),\n        rho,\n        omega;\n    if (t && t < 2) {\n      var theta = halfPi - phi, i = 25, delta;\n      do {\n        var sinTheta = sin(theta),\n            cosTheta = cos(theta),\n            Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta),\n            C = 1 + L2 - 2 * L * cosTheta;\n        theta -= delta = (theta - K2 * Bt - L * sinTheta + C * Bt_Bt1 -0.5 * t * B) / (2 * L * sinTheta * Bt_Bt1);\n      } while (abs(delta) > epsilon2 && --i > 0);\n      rho = A * sqrt(C);\n      omega = lambda * Bt_Bt1 / pi;\n    } else {\n      rho = A * (K + t);\n      omega = lambda * Bt / pi;\n    }\n    return [\n      rho * sin(omega),\n      rho0 - rho * cos(omega)\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var rho2 = x * x + (y -= rho0) * y,\n        cosTheta = (1 + L2 - rho2 / (A * A)) / (2 * L),\n        theta = acos(cosTheta),\n        sinTheta = sin(theta),\n        Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta);\n    return [\n      asin(x / sqrt(rho2)) * pi / Bt_Bt1,\n      asin(1 - 2 * (theta - K2 * Bt - L * sinTheta + (1 + L2 - 2 * L * cosTheta) * Bt_Bt1) / B)\n    ];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var K = 1,\n      m = projectionMutator(hillRaw),\n      p = m(K);\n\n  p.ratio = function(_) {\n    return arguments.length ? m(K = +_) : K;\n  };\n\n  return p\n      .scale(167.774)\n      .center([0, 18.67]);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}