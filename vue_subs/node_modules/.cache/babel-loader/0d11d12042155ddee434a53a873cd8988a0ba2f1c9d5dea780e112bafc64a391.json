{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withCtx as _withCtx, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_pageHeader = _resolveComponent(\"pageHeader\");\n  const _component_BCol = _resolveComponent(\"BCol\");\n  const _component_BRow = _resolveComponent(\"BRow\");\n  const _component_BCardHeader = _resolveComponent(\"BCardHeader\");\n  const _component_BListGroupItem = _resolveComponent(\"BListGroupItem\");\n  const _component_BListGroup = _resolveComponent(\"BListGroup\");\n  const _component_BCardBody = _resolveComponent(\"BCardBody\");\n  const _component_BCard = _resolveComponent(\"BCard\");\n  const _component_Layout = _resolveComponent(\"Layout\");\n  return _openBlock(), _createBlock(_component_Layout, null, {\n    default: _withCtx(() => [_createVNode(_component_pageHeader, {\n      title: \"Address List\",\n      PageTitle: \"Address\"\n    }), _createVNode(_component_BRow, null, {\n      default: _withCtx(() => [_createVNode(_component_BCol, {\n        \"no-body\": \"\",\n        class: \"table-card\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" Regions Section \"), _createVNode(_component_BRow, {\n          class: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_BCol, {\n            class: \"col-lg-6\"\n          }, {\n            default: _withCtx(() => [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"Regions\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n              onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.addRegion && $options.addRegion(...args), [\"prevent\"]))\n            }, [_createVNode(_component_BRow, {\n              class: \"mb-3\"\n            }, {\n              default: _withCtx(() => [_cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n                for: \"region\",\n                class: \"col-sm-2 col-form-label\"\n              }, \"Region name\", -1 /* HOISTED */)), _createVNode(_component_BCol, {\n                class: \"col-sm-6\"\n              }, {\n                default: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n                  \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newRegion = $event),\n                  placeholder: \"Enter a region.\",\n                  class: \"form-control\",\n                  id: \"region\",\n                  required: \"\"\n                }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newRegion]])]),\n                _: 1 /* STABLE */\n              }), _cache[3] || (_cache[3] = _createElementVNode(\"button\", {\n                type: \"submit\",\n                class: \"col-sm-2 btn btn-primary mb-\"\n              }, \"Add\", -1 /* HOISTED */))]),\n              _: 1 /* STABLE */\n            })], 32 /* NEED_HYDRATION */), _createVNode(_component_BRow, null, {\n              default: _withCtx(() => [_createVNode(_component_BCol, {\n                md: \"6\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_BCard, {\n                  \"no-body\": \"\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_BCardHeader, null, {\n                    default: _withCtx(() => _cache[4] || (_cache[4] = [_createElementVNode(\"h5\", {\n                      class: \"mb-2\"\n                    }, \"Basic example\", -1 /* HOISTED */), _createElementVNode(\"small\", {\n                      class: \"m-0\"\n                    }, \"The most basic list group is an unordered list with list items and the proper classes\", -1 /* HOISTED */)])),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_BCardBody, null, {\n                    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.regions, region => {\n                      return _openBlock(), _createBlock(_component_BListGroup, {\n                        key: region.id\n                      }, {\n                        default: _withCtx(() => [_createVNode(_component_BListGroupItem, null, {\n                          default: _withCtx(() => [_createTextVNode(_toDisplayString(region.name) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n                            onClick: $event => _ctx.selectRegion(region)\n                          }, \"View Provinces\", 8 /* PROPS */, _hoisted_1), _createElementVNode(\"button\", {\n                            onClick: $event => _ctx.deleteRegion(region.id)\n                          }, \"Delete\", 8 /* PROPS */, _hoisted_2)]),\n                          _: 2 /* DYNAMIC */\n                        }, 1024 /* DYNAMIC_SLOTS */)]),\n                        _: 2 /* DYNAMIC */\n                      }, 1024 /* DYNAMIC_SLOTS */);\n                    }), 128 /* KEYED_FRAGMENT */))]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 1 /* STABLE */\n                })]),\n                _: 1 /* STABLE */\n              })]),\n              _: 1 /* STABLE */\n            }), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.regions, region => {\n              return _openBlock(), _createElementBlock(\"li\", {\n                key: region.id\n              }, [_createElementVNode(\"span\", null, _toDisplayString(region.name), 1 /* TEXT */), _createElementVNode(\"button\", {\n                onClick: $event => _ctx.selectRegion(region)\n              }, \"View Provinces\", 8 /* PROPS */, _hoisted_3), _createElementVNode(\"button\", {\n                onClick: $event => _ctx.deleteRegion(region.id)\n              }, \"Delete\", 8 /* PROPS */, _hoisted_4)]);\n            }), 128 /* KEYED_FRAGMENT */))])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_Layout","default","_withCtx","_createVNode","_component_pageHeader","title","PageTitle","_component_BRow","_component_BCol","class","_createCommentVNode","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","addRegion","for","$event","$data","newRegion","placeholder","id","required","_","type","md","_component_BCard","_component_BCardHeader","_component_BCardBody","_createElementBlock","_Fragment","_renderList","regions","region","_component_BListGroup","key","_component_BListGroupItem","_createTextVNode","_toDisplayString","name","onClick","_ctx","selectRegion","_hoisted_1","deleteRegion","_hoisted_2","_hoisted_3","_hoisted_4"],"sources":["/home/josh/Documents/projects/subs/vue_subs/src/views/adashboard/address/address.vue"],"sourcesContent":["<script>\n    import Layout from \"@/layout/main.vue\"\n    import pageHeader from \"@/components/page-header.vue\";\n    import axios from \"axios\";\n\n    export default {\n        name: \"ADDRESS\",\n        components: {\n            Layout, pageHeader\n        },\n        data() {\n            return {\n                regions: [],\n                newRegion:\"\",\n            };\n        },\n        created() {\n            this.fetchRegions();\n        },\n        methods: {\n            addRegion() {\n                axios.post(\"http://localhost:8000/api/v1/regions/\", { name: this.newRegion }).then((response) => {\n                    this.regions.push(response.data);\n                    this.newRegion = \"\";\n                });\n            },\n            fetchRegions() {\n                axios.get(\"http://localhost:8000/api/v1/regions/\").then((response) => {\n                    this.regions = response.data;\n                });\n            },\n        },\n    }\n</script>\n\n<template>\n    <Layout>\n        <pageHeader title=\"Address List\" PageTitle=\"Address\" />\n        <BRow>\n            <BCol no-body class=\"table-card\">\n                 <!-- Regions Section -->\n                <BRow class=\"\">\n                    <BCol class=\"col-lg-6\">\n                        <h2>Regions</h2>\n                        <form @submit.prevent=\"addRegion\">\n                            <BRow class=\" mb-3\">\n                                <label for=\"region\" class=\"col-sm-2 col-form-label\">Region name</label>\n                                <BCol class=\"col-sm-6\">\n                                    <input v-model=\"newRegion\" placeholder=\"Enter a region.\" class=\"form-control\" id=\"region\" required /> \n                                </BCol>\n                                <button type=\"submit\" class=\"col-sm-2 btn btn-primary mb-\">Add</button>\n                            </BRow>\n                        </form>\n                        \n                        <BRow>\n                            <BCol md=\"6\">\n                                <BCard no-body>\n                                    <BCardHeader>\n                                        <h5 class=\"mb-2\">Basic example</h5>\n                                        <small class=\"m-0\">The most basic list group is an unordered list with list items and the proper\n                                            classes</small>\n                                    </BCardHeader>\n                                    <BCardBody>\n                                        <BListGroup v-for=\"region in regions\" :key=\"region.id\">\n                                            <BListGroupItem>{{ region.name }}\n                                            <button @click=\"selectRegion(region)\">View Provinces</button>\n                                            <button @click=\"deleteRegion(region.id)\">Delete</button>\n                                        </BListGroupItem>\n                                        </BListGroup>\n                                    </BCardBody>\n                                </BCard>\n                            </BCol>\n                        </BRow>\n\n\n                        <ul>\n                            <li v-for=\"region in regions\" :key=\"region.id\">\n                            <span>{{ region.name }}</span>\n                            <button @click=\"selectRegion(region)\">View Provinces</button>\n                            <button @click=\"deleteRegion(region.id)\">Delete</button>\n                            </li>\n                        </ul>\n                    </BCol>\n                </BRow>\n\n            </BCol>\n        </BRow>\n    </Layout>\n</template>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}