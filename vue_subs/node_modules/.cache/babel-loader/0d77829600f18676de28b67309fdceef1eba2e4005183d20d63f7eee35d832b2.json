{"ast":null,"code":"/**\r\n * Tick module\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Sprite } from \"../../core/Sprite\";\nimport { registry } from \"../../core/Registry\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * A basic Tick class.\r\n *\r\n * A tick is a short dash, mainly connecting an object like axis or slice to\r\n * it's textual label.\r\n *\r\n * @see {@link ITickEvents} for a list of available events\r\n * @see {@link ITickAdapters} for a list of available Adapters\r\n * @important\r\n */\nvar Tick = /** @class */function (_super) {\n  __extends(Tick, _super);\n  /**\r\n   * Constructor\r\n   */\n  function Tick() {\n    var _this = _super.call(this) || this;\n    _this.className = \"Tick\";\n    var interfaceColors = new InterfaceColorSet();\n    _this.fillOpacity = 0;\n    _this.length = 6;\n    _this.strokeOpacity = 0.2;\n    _this.stroke = interfaceColors.getFor(\"grid\");\n    _this.isMeasured = false;\n    _this.nonScalingStroke = true;\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(Tick.prototype, \"length\", {\n    /**\r\n     * @return Length (px)\r\n     */\n    get: function () {\n      if (this.disabled) {\n        return 0;\n      }\n      return this.getPropertyValue(\"length\");\n    },\n    /**\r\n     * Length of the tick in pixels.\r\n     *\r\n     * @param value  Length (px)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"length\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Tick;\n}(Sprite);\nexport { Tick };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"Tick\"] = Tick;","map":{"version":3,"names":["Sprite","registry","InterfaceColorSet","Tick","_super","__extends","_this","call","className","interfaceColors","fillOpacity","length","strokeOpacity","stroke","getFor","isMeasured","nonScalingStroke","applyTheme","Object","defineProperty","prototype","get","disabled","getPropertyValue","set","value","setPropertyValue","registeredClasses"],"sources":["../../../../../src/.internal/charts/elements/Tick.ts"],"sourcesContent":["/**\r\n * Tick module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Tick]].\r\n */\r\nexport interface ITickProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Length of the tick (px).\r\n\t */\r\n\tlength?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[Tick]].\r\n */\r\nexport interface ITickEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Tick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ITickAdapters extends ISpriteAdapters, ITickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A basic Tick class.\r\n *\r\n * A tick is a short dash, mainly connecting an object like axis or slice to\r\n * it's textual label.\r\n *\r\n * @see {@link ITickEvents} for a list of available events\r\n * @see {@link ITickAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class Tick extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ITickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ITickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ITickEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Tick\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fillOpacity = 0;\r\n\t\tthis.length = 6;\r\n\t\tthis.strokeOpacity = 0.2;\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.nonScalingStroke = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Length of the tick in pixels.\r\n\t *\r\n\t * @param value  Length (px)\r\n\t */\r\n\tpublic set length(value: number) {\r\n\t\tthis.setPropertyValue(\"length\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get length(): number {\r\n\t\tif (this.disabled) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn this.getPropertyValue(\"length\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Tick\"] = Tick;\r\n"],"mappings":"AAAA;;;;AAIA;;;;;;AAMA,SAASA,MAAM,QAA2D,mBAAmB;AAC7F,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,iBAAiB,QAAQ,oCAAoC;AAkCtE;;;;;;AAOA;;;;;;;;;;AAUA,IAAAC,IAAA,0BAAAC,MAAA;EAA0BC,SAAA,CAAAF,IAAA,EAAAC,MAAA;EAiBzB;;;EAGA,SAAAD,KAAA;IAAA,IAAAG,KAAA,GACCF,MAAA,CAAAG,IAAA,MAAO;IACPD,KAAI,CAACE,SAAS,GAAG,MAAM;IAEvB,IAAIC,eAAe,GAAG,IAAIP,iBAAiB,EAAE;IAE7CI,KAAI,CAACI,WAAW,GAAG,CAAC;IACpBJ,KAAI,CAACK,MAAM,GAAG,CAAC;IACfL,KAAI,CAACM,aAAa,GAAG,GAAG;IACxBN,KAAI,CAACO,MAAM,GAAGJ,eAAe,CAACK,MAAM,CAAC,MAAM,CAAC;IAC5CR,KAAI,CAACS,UAAU,GAAG,KAAK;IACvBT,KAAI,CAACU,gBAAgB,GAAG,IAAI;IAE5BV,KAAI,CAACW,UAAU,EAAE;;EAClB;EAOAC,MAAA,CAAAC,cAAA,CAAWhB,IAAA,CAAAiB,SAAA,UAAM;IAIjB;;;SAGA,SAAAC,CAAA;MACC,IAAI,IAAI,CAACC,QAAQ,EAAE;QAClB,OAAO,CAAC;;MAET,OAAO,IAAI,CAACC,gBAAgB,CAAC,QAAQ,CAAC;IACvC,CAAC;IAjBD;;;;;SAKA,SAAAC,CAAkBC,KAAa;MAC9B,IAAI,CAACC,gBAAgB,CAAC,QAAQ,EAAED,KAAK,EAAE,IAAI,CAAC;IAC7C,CAAC;;;;EAWF,OAAAtB,IAAC;AAAD,CAAC,CAtDyBH,MAAM;;AAwDhC;;;;;;AAMAC,QAAQ,CAAC0B,iBAAiB,CAAC,MAAM,CAAC,GAAGxB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}