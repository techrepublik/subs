{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { range } from \"d3-array\";\nimport { geoStream, geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { collignonRaw } from \"./collignon.js\";\nimport { cylindricalEqualAreaRaw } from \"./cylindricalEqualArea.js\";\nimport { abs, asin, degrees, epsilon, floor, max, min, pi, radians, sqrtPi, tau } from \"./math.js\";\nvar K = 3,\n  healpixParallel = asin(1 - 1 / K) * degrees,\n  healpixLambert = cylindricalEqualAreaRaw(0);\nexport function healpixRaw(H) {\n  var phi0 = healpixParallel * radians,\n    dx = collignonRaw(pi, phi0)[0] - collignonRaw(-pi, phi0)[0],\n    y0 = healpixLambert(0, phi0)[1],\n    y1 = collignonRaw(0, phi0)[1],\n    dy1 = sqrtPi - y1,\n    k = tau / H,\n    w = 4 / tau,\n    h = y0 + dy1 * dy1 * 4 / tau;\n  function forward(lambda, phi) {\n    var point,\n      phi2 = abs(phi);\n    if (phi2 > phi0) {\n      var i = min(H - 1, max(0, floor((lambda + pi) / k)));\n      lambda += pi * (H - 1) / H - i * k;\n      point = collignonRaw(lambda, phi2);\n      point[0] = point[0] * tau / dx - tau * (H - 1) / (2 * H) + i * tau / H;\n      point[1] = y0 + (point[1] - y1) * 4 * dy1 / tau;\n      if (phi < 0) point[1] = -point[1];\n    } else {\n      point = healpixLambert(lambda, phi);\n    }\n    point[0] *= w, point[1] /= h;\n    return point;\n  }\n  forward.invert = function (x, y) {\n    x /= w, y *= h;\n    var y2 = abs(y);\n    if (y2 > y0) {\n      var i = min(H - 1, max(0, floor((x + pi) / k)));\n      x = (x + pi * (H - 1) / H - i * k) * dx / tau;\n      var point = collignonRaw.invert(x, 0.25 * (y2 - y0) * tau / dy1 + y1);\n      point[0] -= pi * (H - 1) / H - i * k;\n      if (y < 0) point[1] = -point[1];\n      return point;\n    }\n    return healpixLambert.invert(x, y);\n  };\n  return forward;\n}\nfunction sphereTop(x, i) {\n  return [x, i & 1 ? 90 - epsilon : healpixParallel];\n}\nfunction sphereBottom(x, i) {\n  return [x, i & 1 ? -90 + epsilon : -healpixParallel];\n}\nfunction sphereNudge(d) {\n  return [d[0] * (1 - epsilon), d[1]];\n}\nfunction sphere(step) {\n  var c = [].concat(range(-180, 180 + step / 2, step).map(sphereTop), range(180, -180 - step / 2, -step).map(sphereBottom));\n  return {\n    type: \"Polygon\",\n    coordinates: [step === 180 ? c.map(sphereNudge) : c]\n  };\n}\nexport default function () {\n  var H = 4,\n    m = projectionMutator(healpixRaw),\n    p = m(H),\n    stream_ = p.stream;\n  p.lobes = function (_) {\n    return arguments.length ? m(H = +_) : H;\n  };\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n      rotateStream = stream_(stream),\n      sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n    rotateStream.sphere = function () {\n      geoStream(sphere(180 / H), sphereStream);\n    };\n    return rotateStream;\n  };\n  return p.scale(239.75);\n}","map":{"version":3,"names":["range","geoStream","geoProjectionMutator","projectionMutator","collignonRaw","cylindricalEqualAreaRaw","abs","asin","degrees","epsilon","floor","max","min","pi","radians","sqrtPi","tau","K","healpixParallel","healpixLambert","healpixRaw","H","phi0","dx","y0","y1","dy1","k","w","h","forward","lambda","phi","point","phi2","i","invert","x","y","y2","sphereTop","sphereBottom","sphereNudge","d","sphere","step","c","concat","map","type","coordinates","m","p","stream_","stream","lobes","_","arguments","length","rotate","rotateStream","sphereStream","scale"],"sources":["/home/josh/Documents/projects/subs/vue_subs/node_modules/d3-geo-projection/src/healpix.js"],"sourcesContent":["import {range} from \"d3-array\";\nimport {geoStream, geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {collignonRaw} from \"./collignon.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\nimport {abs, asin, degrees, epsilon, floor, max, min, pi, radians, sqrtPi, tau} from \"./math.js\";\n\nvar K = 3,\n    healpixParallel = asin(1 - 1 / K) * degrees,\n    healpixLambert = cylindricalEqualAreaRaw(0);\n\nexport function healpixRaw(H) {\n  var phi0 = healpixParallel * radians,\n      dx = collignonRaw(pi, phi0)[0] - collignonRaw(-pi, phi0)[0],\n      y0 = healpixLambert(0, phi0)[1],\n      y1 = collignonRaw(0, phi0)[1],\n      dy1 = sqrtPi - y1,\n      k = tau / H,\n      w = 4 / tau,\n      h = y0 + (dy1 * dy1 * 4) / tau;\n\n  function forward(lambda, phi) {\n    var point,\n        phi2 = abs(phi);\n    if (phi2 > phi0) {\n      var i = min(H - 1, max(0, floor((lambda + pi) / k)));\n      lambda += pi * (H - 1) / H - i * k;\n      point = collignonRaw(lambda, phi2);\n      point[0] = point[0] * tau / dx - tau * (H - 1) / (2 * H) + i * tau / H;\n      point[1] = y0 + (point[1] - y1) * 4 * dy1 / tau;\n      if (phi < 0) point[1] = -point[1];\n    } else {\n      point = healpixLambert(lambda, phi);\n    }\n    point[0] *= w, point[1] /= h;\n    return point;\n  }\n\n  forward.invert = function(x, y) {\n    x /= w, y *= h;\n    var y2 = abs(y);\n    if (y2 > y0) {\n      var i = min(H - 1, max(0, floor((x + pi) / k)));\n      x = (x + pi * (H - 1) / H - i * k) * dx / tau;\n      var point = collignonRaw.invert(x, 0.25 * (y2 - y0) * tau / dy1 + y1);\n      point[0] -= pi * (H - 1) / H - i * k;\n      if (y < 0) point[1] = -point[1];\n      return point;\n    }\n    return healpixLambert.invert(x, y);\n  };\n\n  return forward;\n}\n\nfunction sphereTop(x, i) {\n  return [x, i & 1 ? 90 - epsilon : healpixParallel];\n}\n\nfunction sphereBottom(x, i) {\n  return [x, i & 1 ? -90 + epsilon : -healpixParallel];\n}\n\nfunction sphereNudge(d) {\n  return [d[0] * (1 - epsilon), d[1]];\n}\n\nfunction sphere(step) {\n  var c = [].concat(\n    range(-180, 180 + step / 2, step).map(sphereTop),\n    range(180, -180 - step / 2, -step).map(sphereBottom)\n  );\n  return {\n    type: \"Polygon\",\n    coordinates: [step === 180 ? c.map(sphereNudge) : c]\n  };\n}\n\nexport default function() {\n  var H = 4,\n      m = projectionMutator(healpixRaw),\n      p = m(H),\n      stream_ = p.stream;\n\n  p.lobes = function(_) {\n    return arguments.length ? m(H = +_) : H;\n  };\n\n  p.stream = function(stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n    rotateStream.sphere = function() { geoStream(sphere(180 / H), sphereStream); };\n    return rotateStream;\n  };\n\n  return p\n      .scale(239.75);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}