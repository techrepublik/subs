{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\r\n * Module for \"Focus\" filter.\r\n */\nimport { __extends } from \"tslib\";\nimport { Filter } from \"./Filter\";\nimport { InterfaceColorSet } from \"../../utils/InterfaceColorSet\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a \"Focus\" filter.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/accessibility/} more about accessibility\r\n * @see {@link https://www.amcharts.com/docs/v4/tutorials/changing-appearance-of-focused-items/} cusomizing focus appearance\r\n */\nvar FocusFilter = /** @class */function (_super) {\n  __extends(FocusFilter, _super);\n  /**\r\n   * Constructor\r\n   */\n  function FocusFilter() {\n    var _this = _super.call(this) || this;\n    _this.className = \"FocusFilter\";\n    // Create elements\n    // NOTE: we do not need to add each individual element to `_disposers`\n    // because `filterPrimitives` has an event handler which automatically adds\n    // anything added to it to `_disposers`\n    _this.feFlood = _this.paper.add(\"feFlood\");\n    _this.feFlood.attr({\n      \"flood-color\": new InterfaceColorSet().getFor(\"primaryButtonHover\"),\n      \"result\": \"base\"\n    });\n    _this.filterPrimitives.push(_this.feFlood);\n    _this.feMorphology = _this.paper.add(\"feMorphology\");\n    _this.feMorphology.attr({\n      \"result\": \"bigger\",\n      \"in\": \"SourceGraphic\",\n      \"operator\": \"dilate\",\n      \"radius\": \"2\"\n    });\n    _this.filterPrimitives.push(_this.feMorphology);\n    _this.feColorMatrix = _this.paper.add(\"feColorMatrix\");\n    _this.feColorMatrix.attr({\n      \"result\": \"mask\",\n      \"in\": \"bigger\",\n      \"type\": \"matrix\",\n      \"values\": \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0\"\n    });\n    _this.filterPrimitives.push(_this.feColorMatrix);\n    _this.feComposite = _this.paper.add(\"feComposite\");\n    _this.feComposite.attr({\n      \"result\": \"drop\",\n      \"in\": \"base\",\n      \"in2\": \"mask\",\n      \"operator\": \"in\"\n    });\n    _this.filterPrimitives.push(_this.feComposite);\n    _this.feBlend = _this.paper.add(\"feBlend\");\n    _this.feBlend.attr({\n      \"in\": \"SourceGraphic\",\n      \"in2\": \"drop\",\n      \"mode\": \"normal\"\n    });\n    _this.filterPrimitives.push(_this.feBlend);\n    // Set default properties\n    _this.width = 130;\n    _this.height = 130;\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(FocusFilter.prototype, \"stroke\", {\n    /**\r\n     * @return Color\r\n     */\n    get: function () {\n      return this.properties[\"stroke\"];\n    },\n    /**\r\n     * Stroke (outline) color.\r\n     *\r\n     * @param value  Color\r\n     */\n    set: function (value) {\n      this.properties[\"stroke\"] = value;\n      this.feFlood.attr({\n        \"flood-color\": value\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FocusFilter.prototype, \"strokeWidth\", {\n    /**\r\n     * @return Outline thickness (px)\r\n     */\n    get: function () {\n      return this.properties[\"strokeWidth\"];\n    },\n    /**\r\n     * Stroke (outline) thickness in pixels.\r\n     *\r\n     * @param value  Outline thickness (px)\r\n     */\n    set: function (value) {\n      this.properties[\"strokeWidth\"] = value;\n      this.feMorphology.attr({\n        \"radius\": value\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FocusFilter.prototype, \"opacity\", {\n    /**\r\n     * @return Outline opacity (0-1)\r\n     */\n    get: function () {\n      return this.properties[\"opacity\"];\n    },\n    /**\r\n     * Opacity of the outline. (0-1)\r\n     *\r\n     * @param value  Outline opacity (0-1)\r\n     */\n    set: function (value) {\n      this.properties[\"opacity\"] = value;\n      this.feColorMatrix.attr({\n        \"values\": \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \" + value + \" 0\"\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Sets filter's target element.\r\n   *\r\n   * In addition it also disables built-in focus outline on element this\r\n   * filter is applied to.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param value  Element filter is being attached to\r\n   */\n  FocusFilter.prototype.setSprite = function (value) {\n    if (this._sprite && this._sprite != value) {\n      this._sprite.group.removeStyle(\"outline\");\n    }\n    value.group.addStyle({\n      \"outline\": \"none\"\n    });\n    _super.prototype.setSprite.call(this, value);\n  };\n  return FocusFilter;\n}(Filter);\nexport { FocusFilter };","map":{"version":3,"names":["Filter","InterfaceColorSet","FocusFilter","_super","__extends","_this","call","className","feFlood","paper","add","attr","getFor","filterPrimitives","push","feMorphology","feColorMatrix","feComposite","feBlend","width","height","applyTheme","Object","defineProperty","prototype","get","properties","set","value","setSprite","_sprite","group","removeStyle","addStyle"],"sources":["../../../../../../src/.internal/core/rendering/filters/FocusFilter.ts"],"sourcesContent":["/**\r\n * Module for \"Focus\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../../Sprite\";\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { InterfaceColorSet } from \"../../utils/InterfaceColorSet\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Focus\" filter.\r\n */\r\nexport interface FocusFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Opacity of the outline. (0-1)\r\n\t */\r\n\topacity?: number;\r\n\r\n\t/**\r\n\t * Stroke (outline) color.\r\n\t */\r\n\tstroke?: Color;\r\n\r\n\t/**\r\n\t * Stroke (outline) thickness in pixels.\r\n\t */\r\n\tstrokeWidth?: number;\r\n\r\n\t/**\r\n\t * Stroke (outline) opacity. (0-1)\r\n\t */\r\n\tstrokeOpacity?: number;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a \"Focus\" filter.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/accessibility/} more about accessibility\r\n * @see {@link https://www.amcharts.com/docs/v4/tutorials/changing-appearance-of-focused-items/} cusomizing focus appearance\r\n */\r\nexport class FocusFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: FocusFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t * @see [@link FocusFilterProperties]\r\n\t */\r\n\t//public propertyValues: Dictionary<FocusFilterProperties, any>;\r\n\r\n\t/**\r\n\t * Reference to the `<feFlood>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feFlood: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feMorphology>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feMorphology: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feFlood>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feColorMatrix: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feComposite>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feComposite: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feFlood>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feBlend: AMElement;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"FocusFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\t\tthis.feFlood = this.paper.add(\"feFlood\");\r\n\t\tthis.feFlood.attr({ \"flood-color\": new InterfaceColorSet().getFor(\"primaryButtonHover\"), \"result\": \"base\" });\r\n\t\tthis.filterPrimitives.push(this.feFlood);\r\n\r\n\t\tthis.feMorphology = this.paper.add(\"feMorphology\");\r\n\t\tthis.feMorphology.attr({ \"result\": \"bigger\", \"in\": \"SourceGraphic\", \"operator\": \"dilate\", \"radius\": \"2\" });\r\n\t\tthis.filterPrimitives.push(this.feMorphology);\r\n\r\n\t\tthis.feColorMatrix = this.paper.add(\"feColorMatrix\");\r\n\t\tthis.feColorMatrix.attr({ \"result\": \"mask\", \"in\": \"bigger\", \"type\": \"matrix\", \"values\": \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0\" });\r\n\t\tthis.filterPrimitives.push(this.feColorMatrix);\r\n\r\n\t\tthis.feComposite = this.paper.add(\"feComposite\");\r\n\t\tthis.feComposite.attr({ \"result\": \"drop\", \"in\": \"base\", \"in2\": \"mask\", \"operator\": \"in\" });\r\n\t\tthis.filterPrimitives.push(this.feComposite);\r\n\r\n\t\tthis.feBlend = this.paper.add(\"feBlend\");\r\n\t\tthis.feBlend.attr({ \"in\": \"SourceGraphic\", \"in2\": \"drop\", \"mode\": \"normal\" });\r\n\t\tthis.filterPrimitives.push(this.feBlend);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.width = 130;\r\n\t\tthis.height = 130;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Stroke (outline) color.\r\n\t *\r\n\t * @param value  Color\r\n\t */\r\n\tpublic set stroke(value: $type.Optional<Color>) {\r\n\t\tthis.properties[\"stroke\"] = value;\r\n\t\tthis.feFlood.attr({ \"flood-color\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color\r\n\t */\r\n\tpublic get stroke(): $type.Optional<Color> {\r\n\t\treturn this.properties[\"stroke\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Stroke (outline) thickness in pixels.\r\n\t *\r\n\t * @param value  Outline thickness (px)\r\n\t */\r\n\tpublic set strokeWidth(value: $type.Optional<number>) {\r\n\t\tthis.properties[\"strokeWidth\"] = value;\r\n\t\tthis.feMorphology.attr({ \"radius\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outline thickness (px)\r\n\t */\r\n\tpublic get strokeWidth(): $type.Optional<number> {\r\n\t\treturn this.properties[\"strokeWidth\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Opacity of the outline. (0-1)\r\n\t *\r\n\t * @param value  Outline opacity (0-1)\r\n\t */\r\n\tpublic set opacity(value: $type.Optional<number>) {\r\n\t\tthis.properties[\"opacity\"] = value;\r\n\t\tthis.feColorMatrix.attr({ \"values\": \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \" + value + \" 0\" });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outline opacity (0-1)\r\n\t */\r\n\tpublic get opacity(): $type.Optional<number> {\r\n\t\treturn this.properties[\"opacity\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets filter's target element.\r\n\t *\r\n\t * In addition it also disables built-in focus outline on element this\r\n\t * filter is applied to.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Element filter is being attached to\r\n\t */\r\n\tprotected setSprite(value: Sprite): void {\r\n\t\tif (this._sprite && this._sprite != value) {\r\n\t\t\tthis._sprite.group.removeStyle(\"outline\");\r\n\t\t}\r\n\t\tvalue.group.addStyle({\r\n\t\t\t\"outline\": \"none\"\r\n\t\t});\r\n\t\tsuper.setSprite(value);\r\n\t}\r\n\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}