{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { aitoffRaw } from \"./aitoff.js\";\nimport { halfPi, epsilon, sin, cos, sqrt, abs, acos } from \"./math.js\";\nexport function winkel3Raw(lambda, phi) {\n  var coordinates = aitoffRaw(lambda, phi);\n  return [(coordinates[0] + lambda / halfPi) / 2, (coordinates[1] + phi) / 2];\n}\nwinkel3Raw.invert = function (x, y) {\n  var lambda = x,\n    phi = y,\n    i = 25;\n  do {\n    var cosphi = cos(phi),\n      sinphi = sin(phi),\n      sin_2phi = sin(2 * phi),\n      sin2phi = sinphi * sinphi,\n      cos2phi = cosphi * cosphi,\n      sinlambda = sin(lambda),\n      coslambda_2 = cos(lambda / 2),\n      sinlambda_2 = sin(lambda / 2),\n      sin2lambda_2 = sinlambda_2 * sinlambda_2,\n      C = 1 - cos2phi * coslambda_2 * coslambda_2,\n      E = C ? acos(cosphi * coslambda_2) * sqrt(F = 1 / C) : F = 0,\n      F,\n      fx = 0.5 * (2 * E * cosphi * sinlambda_2 + lambda / halfPi) - x,\n      fy = 0.5 * (E * sinphi + phi) - y,\n      dxdlambda = 0.5 * F * (cos2phi * sin2lambda_2 + E * cosphi * coslambda_2 * sin2phi) + 0.5 / halfPi,\n      dxdphi = F * (sinlambda * sin_2phi / 4 - E * sinphi * sinlambda_2),\n      dydlambda = 0.125 * F * (sin_2phi * sinlambda_2 - E * sinphi * cos2phi * sinlambda),\n      dydphi = 0.5 * F * (sin2phi * coslambda_2 + E * sin2lambda_2 * cosphi) + 0.5,\n      denominator = dxdphi * dydlambda - dydphi * dxdlambda,\n      dlambda = (fy * dxdphi - fx * dydphi) / denominator,\n      dphi = (fx * dydlambda - fy * dxdlambda) / denominator;\n    lambda -= dlambda, phi -= dphi;\n  } while ((abs(dlambda) > epsilon || abs(dphi) > epsilon) && --i > 0);\n  return [lambda, phi];\n};\nexport default function () {\n  return projection(winkel3Raw).scale(158.837);\n}","map":{"version":3,"names":["geoProjection","projection","aitoffRaw","halfPi","epsilon","sin","cos","sqrt","abs","acos","winkel3Raw","lambda","phi","coordinates","invert","x","y","i","cosphi","sinphi","sin_2phi","sin2phi","cos2phi","sinlambda","coslambda_2","sinlambda_2","sin2lambda_2","C","E","F","fx","fy","dxdlambda","dxdphi","dydlambda","dydphi","denominator","dlambda","dphi","scale"],"sources":["/home/josh/Documents/projects/subs/vue_subs/node_modules/d3-geo-projection/src/winkel3.js"],"sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {aitoffRaw} from \"./aitoff.js\";\nimport {halfPi, epsilon, sin, cos, sqrt, abs, acos} from \"./math.js\";\n\nexport function winkel3Raw(lambda, phi) {\n  var coordinates = aitoffRaw(lambda, phi);\n  return [\n    (coordinates[0] + lambda / halfPi) / 2,\n    (coordinates[1] + phi) / 2\n  ];\n}\n\nwinkel3Raw.invert = function(x, y) {\n  var lambda = x, phi = y, i = 25;\n  do {\n    var cosphi = cos(phi),\n        sinphi = sin(phi),\n        sin_2phi = sin(2 * phi),\n        sin2phi = sinphi * sinphi,\n        cos2phi = cosphi * cosphi,\n        sinlambda = sin(lambda),\n        coslambda_2 = cos(lambda / 2),\n        sinlambda_2 = sin(lambda / 2),\n        sin2lambda_2 = sinlambda_2 * sinlambda_2,\n        C = 1 - cos2phi * coslambda_2 * coslambda_2,\n        E = C ? acos(cosphi * coslambda_2) * sqrt(F = 1 / C) : F = 0,\n        F,\n        fx = 0.5 * (2 * E * cosphi * sinlambda_2 + lambda / halfPi) - x,\n        fy = 0.5 * (E * sinphi + phi) - y,\n        dxdlambda = 0.5 * F * (cos2phi * sin2lambda_2 + E * cosphi * coslambda_2 * sin2phi) + 0.5 / halfPi,\n        dxdphi = F * (sinlambda * sin_2phi / 4 - E * sinphi * sinlambda_2),\n        dydlambda = 0.125 * F * (sin_2phi * sinlambda_2 - E * sinphi * cos2phi * sinlambda),\n        dydphi = 0.5 * F * (sin2phi * coslambda_2 + E * sin2lambda_2 * cosphi) + 0.5,\n        denominator = dxdphi * dydlambda - dydphi * dxdlambda,\n        dlambda = (fy * dxdphi - fx * dydphi) / denominator,\n        dphi = (fx * dydlambda - fy * dxdlambda) / denominator;\n    lambda -= dlambda, phi -= dphi;\n  } while ((abs(dlambda) > epsilon || abs(dphi) > epsilon) && --i > 0);\n  return [lambda, phi];\n};\n\nexport default function() {\n  return projection(winkel3Raw)\n      .scale(158.837);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}