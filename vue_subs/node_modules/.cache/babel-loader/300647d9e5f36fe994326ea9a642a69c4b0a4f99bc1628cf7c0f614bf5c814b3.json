{"ast":null,"code":"import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, asin, atan2, cos, degrees, epsilon, halfPi, log, radians, sin, sqrt, tan } from \"./math.js\";\nexport function airyRaw(beta) {\n  var tanBeta_2 = tan(beta / 2),\n    b = 2 * log(cos(beta / 2)) / (tanBeta_2 * tanBeta_2);\n  function forward(x, y) {\n    var cosx = cos(x),\n      cosy = cos(y),\n      siny = sin(y),\n      cosz = cosy * cosx,\n      k = -((1 - cosz ? log((1 + cosz) / 2) / (1 - cosz) : -0.5) + b / (1 + cosz));\n    return [k * cosy * sin(x), k * siny];\n  }\n  forward.invert = function (x, y) {\n    var r = sqrt(x * x + y * y),\n      z = -beta / 2,\n      i = 50,\n      delta;\n    if (!r) return [0, 0];\n    do {\n      var z_2 = z / 2,\n        cosz_2 = cos(z_2),\n        sinz_2 = sin(z_2),\n        tanz_2 = sinz_2 / cosz_2,\n        lnsecz_2 = -log(abs(cosz_2));\n      z -= delta = (2 / tanz_2 * lnsecz_2 - b * tanz_2 - r) / (-lnsecz_2 / (sinz_2 * sinz_2) + 1 - b / (2 * cosz_2 * cosz_2)) * (cosz_2 < 0 ? 0.7 : 1);\n    } while (abs(delta) > epsilon && --i > 0);\n    var sinz = sin(z);\n    return [atan2(x * sinz, r * cos(z)), asin(y * sinz / r)];\n  };\n  return forward;\n}\nexport default function () {\n  var beta = halfPi,\n    m = projectionMutator(airyRaw),\n    p = m(beta);\n  p.radius = function (_) {\n    return arguments.length ? m(beta = _ * radians) : beta * degrees;\n  };\n  return p.scale(179.976).clipAngle(147);\n}","map":{"version":3,"names":["geoProjectionMutator","projectionMutator","abs","asin","atan2","cos","degrees","epsilon","halfPi","log","radians","sin","sqrt","tan","airyRaw","beta","tanBeta_2","b","forward","x","y","cosx","cosy","siny","cosz","k","invert","r","z","i","delta","z_2","cosz_2","sinz_2","tanz_2","lnsecz_2","sinz","m","p","radius","_","arguments","length","scale","clipAngle"],"sources":["/Users/admin/Desktop/techrepublik/pro/subs/vue_subs/node_modules/d3-geo-projection/src/airy.js"],"sourcesContent":["import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, asin, atan2, cos, degrees, epsilon, halfPi, log, radians, sin, sqrt, tan} from \"./math.js\";\n\nexport function airyRaw(beta) {\n  var tanBeta_2 = tan(beta / 2),\n      b = 2 * log(cos(beta / 2)) / (tanBeta_2 * tanBeta_2);\n\n  function forward(x, y) {\n    var cosx = cos(x),\n        cosy = cos(y),\n        siny = sin(y),\n        cosz = cosy * cosx,\n        k = -((1 - cosz ? log((1 + cosz) / 2) / (1 - cosz) : -0.5) + b / (1 + cosz));\n    return [k * cosy * sin(x), k * siny];\n  }\n\n  forward.invert = function(x, y) {\n    var r = sqrt(x * x + y * y),\n        z = -beta / 2,\n        i = 50, delta;\n    if (!r) return [0, 0];\n    do {\n      var z_2 = z / 2,\n          cosz_2 = cos(z_2),\n          sinz_2 = sin(z_2),\n          tanz_2 = sinz_2 / cosz_2,\n          lnsecz_2 = -log(abs(cosz_2));\n      z -= delta = (2 / tanz_2 * lnsecz_2 - b * tanz_2 - r) / (-lnsecz_2 / (sinz_2 * sinz_2) + 1 - b / (2 * cosz_2 * cosz_2)) * (cosz_2 < 0 ? 0.7 : 1);\n    } while (abs(delta) > epsilon && --i > 0);\n    var sinz = sin(z);\n    return [atan2(x * sinz, r * cos(z)), asin(y * sinz / r)];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var beta = halfPi,\n      m = projectionMutator(airyRaw),\n      p = m(beta);\n\n  p.radius = function(_) {\n    return arguments.length ? m(beta = _ * radians) : beta * degrees;\n  };\n\n  return p\n      .scale(179.976)\n      .clipAngle(147);\n}\n"],"mappings":"AAAA,SAAQA,oBAAoB,IAAIC,iBAAiB,QAAO,QAAQ;AAChE,SAAQC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAEC,GAAG,EAAEC,OAAO,EAAEC,GAAG,EAAEC,IAAI,EAAEC,GAAG,QAAO,WAAW;AAEvG,OAAO,SAASC,OAAOA,CAACC,IAAI,EAAE;EAC5B,IAAIC,SAAS,GAAGH,GAAG,CAACE,IAAI,GAAG,CAAC,CAAC;IACzBE,CAAC,GAAG,CAAC,GAAGR,GAAG,CAACJ,GAAG,CAACU,IAAI,GAAG,CAAC,CAAC,CAAC,IAAIC,SAAS,GAAGA,SAAS,CAAC;EAExD,SAASE,OAAOA,CAACC,CAAC,EAAEC,CAAC,EAAE;IACrB,IAAIC,IAAI,GAAGhB,GAAG,CAACc,CAAC,CAAC;MACbG,IAAI,GAAGjB,GAAG,CAACe,CAAC,CAAC;MACbG,IAAI,GAAGZ,GAAG,CAACS,CAAC,CAAC;MACbI,IAAI,GAAGF,IAAI,GAAGD,IAAI;MAClBI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAGD,IAAI,GAAGf,GAAG,CAAC,CAAC,CAAC,GAAGe,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,GAAGA,IAAI,CAAC,GAAG,CAAC,GAAG,IAAIP,CAAC,IAAI,CAAC,GAAGO,IAAI,CAAC,CAAC;IAChF,OAAO,CAACC,CAAC,GAAGH,IAAI,GAAGX,GAAG,CAACQ,CAAC,CAAC,EAAEM,CAAC,GAAGF,IAAI,CAAC;EACtC;EAEAL,OAAO,CAACQ,MAAM,GAAG,UAASP,CAAC,EAAEC,CAAC,EAAE;IAC9B,IAAIO,CAAC,GAAGf,IAAI,CAACO,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC,CAAC;MACvBQ,CAAC,GAAG,CAACb,IAAI,GAAG,CAAC;MACbc,CAAC,GAAG,EAAE;MAAEC,KAAK;IACjB,IAAI,CAACH,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;IACrB,GAAG;MACD,IAAII,GAAG,GAAGH,CAAC,GAAG,CAAC;QACXI,MAAM,GAAG3B,GAAG,CAAC0B,GAAG,CAAC;QACjBE,MAAM,GAAGtB,GAAG,CAACoB,GAAG,CAAC;QACjBG,MAAM,GAAGD,MAAM,GAAGD,MAAM;QACxBG,QAAQ,GAAG,CAAC1B,GAAG,CAACP,GAAG,CAAC8B,MAAM,CAAC,CAAC;MAChCJ,CAAC,IAAIE,KAAK,GAAG,CAAC,CAAC,GAAGI,MAAM,GAAGC,QAAQ,GAAGlB,CAAC,GAAGiB,MAAM,GAAGP,CAAC,KAAK,CAACQ,QAAQ,IAAIF,MAAM,GAAGA,MAAM,CAAC,GAAG,CAAC,GAAGhB,CAAC,IAAI,CAAC,GAAGe,MAAM,GAAGA,MAAM,CAAC,CAAC,IAAIA,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IAClJ,CAAC,QAAQ9B,GAAG,CAAC4B,KAAK,CAAC,GAAGvB,OAAO,IAAI,EAAEsB,CAAC,GAAG,CAAC;IACxC,IAAIO,IAAI,GAAGzB,GAAG,CAACiB,CAAC,CAAC;IACjB,OAAO,CAACxB,KAAK,CAACe,CAAC,GAAGiB,IAAI,EAAET,CAAC,GAAGtB,GAAG,CAACuB,CAAC,CAAC,CAAC,EAAEzB,IAAI,CAACiB,CAAC,GAAGgB,IAAI,GAAGT,CAAC,CAAC,CAAC;EAC1D,CAAC;EAED,OAAOT,OAAO;AAChB;AAEA,eAAe,YAAW;EACxB,IAAIH,IAAI,GAAGP,MAAM;IACb6B,CAAC,GAAGpC,iBAAiB,CAACa,OAAO,CAAC;IAC9BwB,CAAC,GAAGD,CAAC,CAACtB,IAAI,CAAC;EAEfuB,CAAC,CAACC,MAAM,GAAG,UAASC,CAAC,EAAE;IACrB,OAAOC,SAAS,CAACC,MAAM,GAAGL,CAAC,CAACtB,IAAI,GAAGyB,CAAC,GAAG9B,OAAO,CAAC,GAAGK,IAAI,GAAGT,OAAO;EAClE,CAAC;EAED,OAAOgC,CAAC,CACHK,KAAK,CAAC,OAAO,CAAC,CACdC,SAAS,CAAC,GAAG,CAAC;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}