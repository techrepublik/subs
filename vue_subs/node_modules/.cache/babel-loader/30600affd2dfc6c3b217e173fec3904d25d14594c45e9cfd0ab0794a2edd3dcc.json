{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\r\n * [[Chart]] class provides base functionality for all chart types to inherit.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { registry } from \"../core/Registry\";\nimport { Component } from \"../core/Component\";\nimport { MutableValueDisposer, Disposer } from \"../core/utils/Disposer\";\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\nimport { Container } from \"../core/Container\";\nimport { Label } from \"../core/elements/Label\";\nimport { Grip } from \"../core/elements/Grip\";\nimport { DataItem } from \"../core/DataItem\";\nimport { percent } from \"../core/utils/Percent\";\nimport * as $iter from \"../core/utils/Iterator\";\nimport * as $type from \"../core/utils/Type\";\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines a [[DataItem]] for [[Chart]].\r\n *\r\n * @see {@link DataItem}\r\n */\nvar ChartDataItem = /** @class */function (_super) {\n  __extends(ChartDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n  function ChartDataItem() {\n    var _this = _super.call(this) || this;\n    _this.className = \"ChartDataItem\";\n    _this.applyTheme();\n    return _this;\n  }\n  return ChartDataItem;\n}(DataItem);\nexport { ChartDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * A base class for all Charts.\r\n *\r\n * @see {@link IChartEvents} for a list of available Events\r\n * @see {@link IChartAdapters} for a list of available Adapters\r\n */\nvar Chart = /** @class */function (_super) {\n  __extends(Chart, _super);\n  /**\r\n   * Constructor\r\n   */\n  function Chart() {\n    var _this =\n    // Init\n    _super.call(this) || this;\n    /**\r\n     * A reference to chart's [[Legend]].\r\n     * @ignore\r\n     */\n    _this._legend = new MutableValueDisposer();\n    if (_this.constructor === Chart) {\n      throw new Error(\"'Chart' cannot be instantiated directly. Please use a specific chart type.\");\n    }\n    _this.className = \"Chart\";\n    // Create a list of titles\n    var template = new Label();\n    _this.titles = new ListTemplate(template);\n    _this._disposers.push(new ListDisposer(_this.titles));\n    _this._disposers.push(template);\n    // Chart component is also a container. it holds _chartAndLegendCont and titles\n    _this.width = percent(100);\n    _this.height = percent(100);\n    _this.layout = \"vertical\";\n    // Chart and legend\n    var chartAndLegendContainer = _this.createChild(Container);\n    chartAndLegendContainer.shouldClone = false;\n    chartAndLegendContainer.layout = \"vertical\";\n    chartAndLegendContainer.width = percent(100);\n    chartAndLegendContainer.height = percent(100);\n    _this.chartAndLegendContainer = chartAndLegendContainer;\n    // Chart container holds all the elements of a chart, extept titles and legend\n    var chartContainer = chartAndLegendContainer.createChild(Container);\n    chartContainer.shouldClone = false;\n    chartContainer.width = percent(100);\n    chartContainer.height = percent(100);\n    _this.chartContainer = chartContainer;\n    _this.showOnInit = true;\n    _this._disposers.push(_this._legend);\n    // Add title list events to apply certain formatting options and to make\n    // the chart reference them as accessible screen reader labels\n    _this.titles.events.on(\"inserted\", function (label) {\n      _this.processTitle(label);\n      _this.updateReaderTitleReferences();\n    }, _this, false);\n    _this.titles.events.on(\"removed\", function (label) {\n      _this.updateReaderTitleReferences();\n    }, _this, false);\n    // Accessibility\n    // It seems we can't set focusable on the whole chart because it seems to\n    // mess up the whole focus event system - getting a focus on an inside\n    // object also trigger focus on parent\n    //this.focusable = true;\n    _this.role = \"region\";\n    _this.defaultState.transitionDuration = 1;\n    // Apply theme\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n  Chart.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Chart\");\n    }\n  };\n  /**\r\n   * Initiates drawing of the chart.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Chart.prototype.draw = function () {\n    this.fixLayout();\n    _super.prototype.draw.call(this);\n  };\n  /**\r\n   * Updates legend's hierarchy based on the position.\r\n   */\n  Chart.prototype.fixLayout = function () {\n    var legend = this.legend;\n    if (legend) {\n      var chartAndLegendContainer = this.chartAndLegendContainer;\n      var chartContainer = this.chartContainer;\n      chartContainer.x = undefined;\n      chartContainer.y = undefined;\n      if (legend.position != \"absolute\") {\n        legend.x = undefined;\n        legend.y = undefined;\n      }\n      switch (legend.position) {\n        case \"left\":\n          chartAndLegendContainer.layout = \"horizontal\";\n          legend.toBack();\n          break;\n        case \"right\":\n          chartAndLegendContainer.layout = \"horizontal\";\n          legend.toFront();\n          break;\n        case \"top\":\n          chartAndLegendContainer.layout = \"vertical\";\n          legend.toBack();\n          break;\n        case \"bottom\":\n          chartAndLegendContainer.layout = \"vertical\";\n          legend.toFront();\n          break;\n        case \"absolute\":\n          legend.isMeasured = false;\n          break;\n      }\n    }\n  };\n  /**\r\n   * Setups the legend to use the chart's data.\r\n   */\n  Chart.prototype.feedLegend = function () {\n    // Nothing here. This method is provided only as a \"placeholder\" for\n    // extending classes to override\n  };\n  /**\r\n   * Adds a new title to the chart when it is inserted into chart's titles\r\n   * list.\r\n   * @param event  An event object which is triggered when inserting into titles list\r\n   * @return Label object\r\n   */\n  Chart.prototype.processTitle = function (event) {\n    var title = event.newValue;\n    title.parent = this;\n    title.toBack();\n    title.shouldClone = false;\n    title.align = \"center\";\n    // Need to explicitly apply the `id` attribute so it can be referenced by\n    // `aria-labelledby`\n    title.uidAttr();\n    return title;\n  };\n  /**\r\n   * Checks if chart has any title elements. If it does, we will use them in an\r\n   * `aria-labelledby` attribute so that screen readers can use them to properly\r\n   * describe the chart when it is focused or hovered.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Chart.prototype.updateReaderTitleReferences = function () {\n    if (this.titles.length) {\n      var titleIds_1 = [];\n      $iter.each(this.titles.iterator(), function (title) {\n        titleIds_1.push(title.uid);\n      });\n      this.setSVGAttribute({\n        \"aria-labelledby\": titleIds_1.join(\" \")\n      });\n    } else {\n      this.removeSVGAttribute(\"aria-labelledby\");\n    }\n  };\n  Object.defineProperty(Chart.prototype, \"legend\", {\n    /**\r\n     * @return Legend\r\n     */\n    get: function () {\n      return this._legend.get();\n    },\n    /**\r\n     * Holds the instance of chart's [[Leged]].\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for more information about legends\r\n     * @param Legend\r\n     */\n    set: function (legend) {\n      this.setLegend(legend);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Prepares the legend instance for use in this chart.\r\n   *\r\n   * @param legend  Legend\r\n   */\n  Chart.prototype.setLegend = function (legend) {\n    var _this = this;\n    if (this._legend.get() !== legend) {\n      if (legend) {\n        // Set legend options\n        legend.parent = this.chartAndLegendContainer;\n        this._legend.set(legend, legend.events.on(\"propertychanged\", function (event) {\n          if (event.property == \"position\") {\n            _this.fixLayout();\n          }\n        }, undefined, false));\n        legend.addDisposer(new Disposer(function () {\n          _this.legend = undefined;\n        }));\n      } else {\n        this._legend.reset();\n      }\n      this.feedLegend();\n    }\n  };\n  /**\r\n   * Destroys this object and all related data.\r\n   */\n  Chart.prototype.dispose = function () {\n    // otherwise there might be some errors when disposing chart which was just inited\n    if (this.legend) {\n      this.legend.dispose();\n    }\n    _super.prototype.dispose.call(this);\n  };\n  /**\r\n   * Processes JSON-based config before it is applied to the object.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param config  Config\r\n   */\n  Chart.prototype.processConfig = function (config) {\n    if (config) {\n      // Set up legend\n      if ($type.hasValue(config.legend) && !$type.hasValue(config.legend.type)) {\n        config.legend.type = \"Legend\";\n      }\n    }\n    _super.prototype.processConfig.call(this, config);\n  };\n  /**\r\n   * Copies all properties from another instance of [[Series]].\r\n   *\r\n   * @param source  Source series\r\n   */\n  Chart.prototype.copyFrom = function (source) {\n    this.titles.copyFrom(source.titles);\n    this.chartContainer.copyFrom(source.chartContainer);\n    if (source.legend) {\n      this.legend = source.legend.clone();\n      this.legend.removeChildren();\n    }\n    _super.prototype.copyFrom.call(this, source);\n  };\n  Object.defineProperty(Chart.prototype, \"dragGrip\", {\n    /**\r\n     * @return Grip\r\n     */\n    get: function () {\n      var _this = this;\n      if (!this._dragGrip) {\n        var grip_1 = this.tooltipContainer.createChild(Grip);\n        grip_1.align = \"right\";\n        grip_1.valign = \"middle\";\n        grip_1.hide(0);\n        grip_1.events.on(\"down\", function (ev) {\n          if (ev.touch) {\n            _this.interactionsEnabled = false;\n          }\n        });\n        grip_1.events.on(\"up\", function (ev) {\n          _this.interactionsEnabled = true;\n        });\n        this.events.on(\"down\", function (ev) {\n          if (ev.touch) {\n            grip_1.show();\n          }\n        });\n        this._dragGrip = grip_1;\n      }\n      return this._dragGrip;\n    },\n    /**\r\n     * An instance of [[Grip]] which serves as a grip point which appears on\r\n     * touch and allows scrolling whole page even if chart is occupying the\r\n     * whole of the screen and would otherwise prevent scrolling.\r\n     *\r\n     * @since 4.4.0\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/touch/} For more information.\r\n     * @param  value  Grip\r\n     */\n    set: function (value) {\n      this._dragGrip = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Chart.prototype, \"focusable\", {\n    get: function () {\n      return this.parent.focusable;\n    },\n    set: function (value) {\n      this.parent.focusable = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Chart;\n}(Component);\nexport { Chart };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"Chart\"] = Chart;\n/**\r\n * Add default responsive rules\r\n */\n/**\r\n * Reduce horizontal margins\r\n */\ndefaultRules.push({\n  relevant: ResponsiveBreakpoints.widthXS,\n  state: function (target, stateId) {\n    if (target instanceof Chart) {\n      var state = target.states.create(stateId);\n      if (target.pixelPaddingLeft > 10) {\n        state.properties.paddingLeft = 10;\n      }\n      if (target.pixelPaddingRight > 10) {\n        state.properties.paddingRight = 10;\n      }\n      return state;\n    }\n    return null;\n  }\n});\n/**\r\n * Reduce vertical margins\r\n */\ndefaultRules.push({\n  relevant: ResponsiveBreakpoints.heightXS,\n  state: function (target, stateId) {\n    if (target instanceof Chart) {\n      var state = target.states.create(stateId);\n      if (target.pixelPaddingTop > 10) {\n        state.properties.paddingTop = 10;\n      }\n      if (target.pixelPaddingBottom > 10) {\n        state.properties.paddingBottom = 10;\n      }\n      return state;\n    }\n    return null;\n  }\n});\n/**\r\n * Remove horizontal padding\r\n */\ndefaultRules.push({\n  relevant: ResponsiveBreakpoints.widthXXS,\n  state: function (target, stateId) {\n    if (target instanceof Chart) {\n      var state = target.states.create(stateId);\n      state.properties.paddingLeft = 0;\n      state.properties.paddingRight = 0;\n      return state;\n    }\n    return null;\n  }\n});\n/**\r\n * Remove vertical padding\r\n */\ndefaultRules.push({\n  relevant: ResponsiveBreakpoints.heightXXS,\n  state: function (target, stateId) {\n    if (target instanceof Chart) {\n      var state = target.states.create(stateId);\n      state.properties.paddingTop = 0;\n      state.properties.paddingBottom = 0;\n      return state;\n    }\n    return null;\n  }\n});","map":{"version":3,"names":["registry","Component","MutableValueDisposer","Disposer","ListTemplate","ListDisposer","Container","Label","Grip","DataItem","percent","$iter","$type","defaultRules","ResponsiveBreakpoints","ChartDataItem","_super","__extends","_this","call","className","applyTheme","Chart","_legend","constructor","Error","template","titles","_disposers","push","width","height","layout","chartAndLegendContainer","createChild","shouldClone","chartContainer","showOnInit","events","on","label","processTitle","updateReaderTitleReferences","role","defaultState","transitionDuration","prototype","applyInternalDefaults","hasValue","readerTitle","language","translate","draw","fixLayout","legend","x","undefined","y","position","toBack","toFront","isMeasured","feedLegend","event","title","newValue","parent","align","uidAttr","length","titleIds_1","each","iterator","uid","setSVGAttribute","join","removeSVGAttribute","Object","defineProperty","get","set","setLegend","property","addDisposer","reset","dispose","processConfig","config","type","copyFrom","source","clone","removeChildren","_dragGrip","grip_1","tooltipContainer","valign","hide","ev","touch","interactionsEnabled","show","value","focusable","registeredClasses","relevant","widthXS","state","target","stateId","states","create","pixelPaddingLeft","properties","paddingLeft","pixelPaddingRight","paddingRight","heightXS","pixelPaddingTop","paddingTop","pixelPaddingBottom","paddingBottom","widthXXS","heightXXS"],"sources":["../../../../src/.internal/charts/Chart.ts"],"sourcesContent":["/**\r\n * [[Chart]] class provides base functionality for all chart types to inherit.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { registry } from \"../core/Registry\";\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentEvents, IComponentAdapters } from \"../core/Component\";\r\nimport { MutableValueDisposer, Disposer } from \"../core/utils/Disposer\";\r\nimport { ListTemplate, IListEvents, ListDisposer } from \"../core/utils/List\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { Grip } from \"../core/elements/Grip\";\r\nimport { Legend } from \"../charts/Legend\";\r\nimport { DataItem } from \"../core/DataItem\";\r\nimport { percent } from \"../core/utils/Percent\";\r\nimport * as $iter from \"../core/utils/Iterator\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Chart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class ChartDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Chart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[Chart]].\r\n */\r\nexport interface IChartDataFields extends IComponentDataFields { }\r\n\r\n/**\r\n * Defines properties for [[Chart]].\r\n */\r\nexport interface IChartProperties extends IComponentProperties { }\r\n\r\n/**\r\n * Defines events for [[Chart]].\r\n */\r\nexport interface IChartEvents extends IComponentEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Chart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IChartAdapters extends IComponentAdapters, IChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all Charts.\r\n *\r\n * @see {@link IChartEvents} for a list of available Events\r\n * @see {@link IChartAdapters} for a list of available Adapters\r\n */\r\nexport class Chart extends Component {\r\n\r\n\t/**\r\n\t * Available data fields.\r\n\t */\r\n\tpublic _dataFields: IChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IChartEvents;\r\n\r\n\t/**\r\n\t * A List of chart titles.\r\n\t */\r\n\tpublic titles: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * Container that holds the chart itself.\r\n\t */\r\n\tpublic chartContainer: Container;\r\n\r\n\t/**\r\n\t * A reference to a container that holds both the chart and the legend.\r\n\t */\r\n\tpublic chartAndLegendContainer: Container;\r\n\r\n\t/**\r\n\t * A reference to chart's [[Legend]].\r\n\t * @ignore\r\n\t */\r\n\tprotected _legend = new MutableValueDisposer<Legend>();\r\n\r\n\t/**\r\n\t * Instance of the grip element.\r\n\t */\r\n\tprotected _dragGrip: $type.Optional<Grip>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\r\n\t\tif (this.constructor === Chart) {\r\n\t\t\tthrow new Error(\"'Chart' cannot be instantiated directly. Please use a specific chart type.\");\r\n\t\t}\r\n\t\tthis.className = \"Chart\";\r\n\r\n\t\t// Create a list of titles\r\n\t\tconst template = new Label();\r\n\t\tthis.titles = new ListTemplate<Label>(template);\r\n\t\tthis._disposers.push(new ListDisposer(this.titles));\r\n\t\tthis._disposers.push(template);\r\n\r\n\t\t// Chart component is also a container. it holds _chartAndLegendCont and titles\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\t\tthis.layout = \"vertical\";\r\n\r\n\t\t// Chart and legend\r\n\t\tlet chartAndLegendContainer: Container = this.createChild(Container);\r\n\t\tchartAndLegendContainer.shouldClone = false;\r\n\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\tchartAndLegendContainer.width = percent(100);\r\n\t\tchartAndLegendContainer.height = percent(100);\r\n\t\tthis.chartAndLegendContainer = chartAndLegendContainer;\r\n\r\n\t\t// Chart container holds all the elements of a chart, extept titles and legend\r\n\t\tlet chartContainer = chartAndLegendContainer.createChild(Container);\r\n\t\tchartContainer.shouldClone = false;\r\n\t\tchartContainer.width = percent(100);\r\n\t\tchartContainer.height = percent(100);\r\n\t\tthis.chartContainer = chartContainer;\r\n\r\n\t\tthis.showOnInit = true;\r\n\r\n\t\tthis._disposers.push(this._legend);\r\n\r\n\t\t// Add title list events to apply certain formatting options and to make\r\n\t\t// the chart reference them as accessible screen reader labels\r\n\t\tthis.titles.events.on(\"inserted\", (label) => {\r\n\t\t\tthis.processTitle(label);\r\n\t\t\tthis.updateReaderTitleReferences();\r\n\t\t}, this, false);\r\n\t\tthis.titles.events.on(\"removed\", (label) => {\r\n\t\t\tthis.updateReaderTitleReferences();\r\n\t\t}, this, false);\r\n\r\n\t\t// Accessibility\r\n\t\t// It seems we can't set focusable on the whole chart because it seems to\r\n\t\t// mess up the whole focus event system - getting a focus on an inside\r\n\t\t// object also trigger focus on parent\r\n\t\t//this.focusable = true;\r\n\t\tthis.role = \"region\";\r\n\r\n\t\tthis.defaultState.transitionDuration = 1;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Chart\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates drawing of the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tthis.fixLayout();\r\n\t\tsuper.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates legend's hierarchy based on the position.\r\n\t */\r\n\tprotected fixLayout(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet chartAndLegendContainer = this.chartAndLegendContainer;\r\n\t\t\tlet chartContainer = this.chartContainer;\r\n\t\t\tchartContainer.x = undefined;\r\n\t\t\tchartContainer.y = undefined;\r\n\t\t\tif (legend.position != \"absolute\") {\r\n\t\t\t\tlegend.x = undefined;\r\n\t\t\t\tlegend.y = undefined;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (legend.position) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"horizontal\";\r\n\t\t\t\t\tlegend.toBack();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"horizontal\";\r\n\t\t\t\t\tlegend.toFront();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\t\t\t\tlegend.toBack();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\t\t\t\tlegend.toFront();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"absolute\":\r\n\t\t\t\t\tlegend.isMeasured = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t */\r\n\tprotected feedLegend(): void {\r\n\r\n\t\t// Nothing here. This method is provided only as a \"placeholder\" for\r\n\t\t// extending classes to override\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new title to the chart when it is inserted into chart's titles\r\n\t * list.\r\n\t * @param event  An event object which is triggered when inserting into titles list\r\n\t * @return Label object\r\n\t */\r\n\tprotected processTitle(event: IListEvents<Label>[\"inserted\"]): Label {\r\n\t\tlet title: Label = event.newValue;\r\n\t\ttitle.parent = this;\r\n\t\ttitle.toBack();\r\n\t\ttitle.shouldClone = false;\r\n\t\ttitle.align = \"center\";\r\n\r\n\t\t// Need to explicitly apply the `id` attribute so it can be referenced by\r\n\t\t// `aria-labelledby`\r\n\t\ttitle.uidAttr();\r\n\t\treturn title;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if chart has any title elements. If it does, we will use them in an\r\n\t * `aria-labelledby` attribute so that screen readers can use them to properly\r\n\t * describe the chart when it is focused or hovered.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateReaderTitleReferences(): void {\r\n\t\tif (this.titles.length) {\r\n\t\t\tlet titleIds: Array<string> = [];\r\n\t\t\t$iter.each(this.titles.iterator(), (title) => {\r\n\t\t\t\ttitleIds.push(title.uid);\r\n\t\t\t});\r\n\t\t\tthis.setSVGAttribute({ \"aria-labelledby\": titleIds.join(\" \") });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeSVGAttribute(\"aria-labelledby\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Holds the instance of chart's [[Leged]].\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for more information about legends\r\n\t * @param Legend\r\n\t */\r\n\tpublic set legend(legend: Legend) {\r\n\t\tthis.setLegend(legend);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Legend\r\n\t */\r\n\tpublic get legend(): Legend {\r\n\t\treturn this._legend.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares the legend instance for use in this chart.\r\n\t *\r\n\t * @param legend  Legend\r\n\t */\r\n\tprotected setLegend(legend: Legend) {\r\n\t\tif (this._legend.get() !== legend) {\r\n\t\t\tif (legend) {\r\n\t\t\t\t// Set legend options\r\n\t\t\t\tlegend.parent = this.chartAndLegendContainer;\r\n\r\n\t\t\t\tthis._legend.set(legend, legend.events.on(\"propertychanged\", (event) => {\r\n\t\t\t\t\tif (event.property == \"position\") {\r\n\t\t\t\t\t\tthis.fixLayout();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, undefined, false));\r\n\r\n\t\t\t\tlegend.addDisposer(new Disposer(() => {\r\n\t\t\t\t\tthis.legend = undefined;\r\n\t\t\t\t}))\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._legend.reset();\r\n\t\t\t}\r\n\r\n\t\t\tthis.feedLegend();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\t// otherwise there might be some errors when disposing chart which was just inited\r\n\t\tif (this.legend) {\r\n\t\t\tthis.legend.dispose();\r\n\t\t}\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up legend\r\n\t\t\tif ($type.hasValue(config.legend) && !$type.hasValue(config.legend.type)) {\r\n\t\t\t\tconfig.legend.type = \"Legend\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.titles.copyFrom(source.titles);\r\n\t\tthis.chartContainer.copyFrom(source.chartContainer);\r\n\t\tif (source.legend) {\r\n\t\t\tthis.legend = source.legend.clone();\r\n\t\t\tthis.legend.removeChildren();\r\n\t\t}\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * An instance of [[Grip]] which serves as a grip point which appears on\r\n\t * touch and allows scrolling whole page even if chart is occupying the\r\n\t * whole of the screen and would otherwise prevent scrolling.\r\n\t *\r\n\t * @since 4.4.0\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/touch/} For more information.\r\n\t * @param  value  Grip\r\n\t */\r\n\tpublic set dragGrip(value: Grip) {\r\n\t\tthis._dragGrip = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Grip\r\n\t */\r\n\tpublic get dragGrip(): Grip {\r\n\t\tif (!this._dragGrip) {\r\n\t\t\tlet grip = this.tooltipContainer.createChild(Grip);\r\n\t\t\tgrip.align = \"right\";\r\n\t\t\tgrip.valign = \"middle\";\r\n\t\t\tgrip.hide(0);\r\n\r\n\t\t\tgrip.events.on(\"down\", (ev) => {\r\n\t\t\t\tif (ev.touch) {\r\n\t\t\t\t\tthis.interactionsEnabled = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tgrip.events.on(\"up\", (ev) => {\r\n\t\t\t\tthis.interactionsEnabled = true;\r\n\t\t\t});\r\n\r\n\t\t\tthis.events.on(\"down\", (ev) => {\r\n\t\t\t\tif (ev.touch) {\r\n\t\t\t\t\tgrip.show();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis._dragGrip = grip;\r\n\t\t}\r\n\t\treturn this._dragGrip;\r\n\t}\r\n\r\n\tpublic set focusable(value: boolean) {\r\n\t\tthis.parent.focusable = value;\r\n\t}\r\n\r\n\tpublic get focusable(): boolean {\r\n\t\treturn this.parent.focusable;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Chart\"] = Chart;\r\n\r\n\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Reduce horizontal margins\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tif (target.pixelPaddingLeft > 10) {\r\n\t\t\t\tstate.properties.paddingLeft = 10;\r\n\t\t\t}\r\n\t\t\tif (target.pixelPaddingRight > 10) {\r\n\t\t\t\tstate.properties.paddingRight = 10;\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Reduce vertical margins\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tif (target.pixelPaddingTop > 10) {\r\n\t\t\t\tstate.properties.paddingTop = 10;\r\n\t\t\t}\r\n\t\t\tif (target.pixelPaddingBottom > 10) {\r\n\t\t\t\tstate.properties.paddingBottom = 10;\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Remove horizontal padding\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.paddingLeft = 0;\r\n\t\t\tstate.properties.paddingRight = 0;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Remove vertical padding\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.paddingTop = 0;\r\n\t\t\tstate.properties.paddingBottom = 0;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}