{"ast":null,"code":"import { abs, epsilon, epsilon2 } from \"./math.js\";\n\n// Approximate Newton-Raphson\n// Solve f(x) = y, start from x\nexport function solve(f, y, x) {\n  var steps = 100,\n    delta,\n    f0,\n    f1;\n  x = x === undefined ? 0 : +x;\n  y = +y;\n  do {\n    f0 = f(x);\n    f1 = f(x + epsilon);\n    if (f0 === f1) f1 = f0 + epsilon;\n    x -= delta = -1 * epsilon * (f0 - y) / (f0 - f1);\n  } while (steps-- > 0 && abs(delta) > epsilon);\n  return steps < 0 ? NaN : x;\n}\n\n// Approximate Newton-Raphson in 2D\n// Solve f(a,b) = [x,y]\nexport function solve2d(f, MAX_ITERATIONS, eps) {\n  if (MAX_ITERATIONS === undefined) MAX_ITERATIONS = 40;\n  if (eps === undefined) eps = epsilon2;\n  return function (x, y, a, b) {\n    var err2, da, db;\n    a = a === undefined ? 0 : +a;\n    b = b === undefined ? 0 : +b;\n    for (var i = 0; i < MAX_ITERATIONS; i++) {\n      var p = f(a, b),\n        // diffs\n        tx = p[0] - x,\n        ty = p[1] - y;\n      if (abs(tx) < eps && abs(ty) < eps) break; // we're there!\n\n      // backtrack if we overshot\n      var h = tx * tx + ty * ty;\n      if (h > err2) {\n        a -= da /= 2;\n        b -= db /= 2;\n        continue;\n      }\n      err2 = h;\n\n      // partial derivatives\n      var ea = (a > 0 ? -1 : 1) * eps,\n        eb = (b > 0 ? -1 : 1) * eps,\n        pa = f(a + ea, b),\n        pb = f(a, b + eb),\n        dxa = (pa[0] - p[0]) / ea,\n        dya = (pa[1] - p[1]) / ea,\n        dxb = (pb[0] - p[0]) / eb,\n        dyb = (pb[1] - p[1]) / eb,\n        // determinant\n        D = dyb * dxa - dya * dxb,\n        // newton step — or half-step for small D\n        l = (abs(D) < 0.5 ? 0.5 : 1) / D;\n      da = (ty * dxb - tx * dyb) * l;\n      db = (tx * dya - ty * dxa) * l;\n      a += da;\n      b += db;\n      if (abs(da) < eps && abs(db) < eps) break; // we're crawling\n    }\n    return [a, b];\n  };\n}","map":{"version":3,"names":["abs","epsilon","epsilon2","solve","f","y","x","steps","delta","f0","f1","undefined","NaN","solve2d","MAX_ITERATIONS","eps","a","b","err2","da","db","i","p","tx","ty","h","ea","eb","pa","pb","dxa","dya","dxb","dyb","D","l"],"sources":["/home/josh/Documents/projects/subs/vue_subs/node_modules/d3-geo-projection/src/newton.js"],"sourcesContent":["import {abs, epsilon, epsilon2} from \"./math.js\";\n\n// Approximate Newton-Raphson\n// Solve f(x) = y, start from x\nexport function solve(f, y, x) {\n  var steps = 100, delta, f0, f1;\n  x = x === undefined ? 0 : +x;\n  y = +y;\n  do {\n    f0 = f(x);\n    f1 = f(x + epsilon);\n    if (f0 === f1) f1 = f0 + epsilon;\n    x -= delta = (-1 * epsilon * (f0 - y)) / (f0 - f1);\n  } while (steps-- > 0 && abs(delta) > epsilon);\n  return steps < 0 ? NaN : x;\n}\n\n// Approximate Newton-Raphson in 2D\n// Solve f(a,b) = [x,y]\nexport function solve2d(f, MAX_ITERATIONS, eps) {\n  if (MAX_ITERATIONS === undefined) MAX_ITERATIONS = 40;\n  if (eps === undefined) eps = epsilon2;\n  return function(x, y, a, b) {\n    var err2, da, db;\n    a = a === undefined ? 0 : +a;\n    b = b === undefined ? 0 : +b;\n    for (var i = 0; i < MAX_ITERATIONS; i++) {\n      var p = f(a, b),\n        // diffs\n        tx = p[0] - x,\n        ty = p[1] - y;\n      if (abs(tx) < eps && abs(ty) < eps) break; // we're there!\n\n      // backtrack if we overshot\n      var h = tx * tx + ty * ty;\n      if (h > err2) {\n        a -= da /= 2;\n        b -= db /= 2;\n        continue;\n      }\n      err2 = h;\n\n      // partial derivatives\n      var ea = (a > 0 ? -1 : 1) * eps,\n        eb = (b > 0 ? -1 : 1) * eps,\n        pa = f(a + ea, b),\n        pb = f(a, b + eb),\n        dxa = (pa[0] - p[0]) / ea,\n        dya = (pa[1] - p[1]) / ea,\n        dxb = (pb[0] - p[0]) / eb,\n        dyb = (pb[1] - p[1]) / eb,\n        // determinant\n        D = dyb * dxa - dya * dxb,\n        // newton step — or half-step for small D\n        l = (abs(D) < 0.5 ? 0.5 : 1) / D;\n      da = (ty * dxb - tx * dyb) * l;\n      db = (tx * dya - ty * dxa) * l;\n      a += da;\n      b += db;\n      if (abs(da) < eps && abs(db) < eps) break; // we're crawling\n    }\n    return [a, b];\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}