{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon2 } from \"./math.js\";\nexport function naturalEarth2Raw(lambda, phi) {\n  var phi2 = phi * phi,\n    phi4 = phi2 * phi2,\n    phi6 = phi2 * phi4;\n  return [lambda * (0.84719 - 0.13063 * phi2 + phi6 * phi6 * (-0.04515 + 0.05494 * phi2 - 0.02326 * phi4 + 0.00331 * phi6)), phi * (1.01183 + phi4 * phi4 * (-0.02625 + 0.01926 * phi2 - 0.00396 * phi4))];\n}\nnaturalEarth2Raw.invert = function (x, y) {\n  var phi = y,\n    i = 25,\n    delta,\n    phi2,\n    phi4,\n    phi6;\n  do {\n    phi2 = phi * phi;\n    phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.01183 + phi4 * phi4 * (-0.02625 + 0.01926 * phi2 - 0.00396 * phi4)) - y) / (1.01183 + phi4 * phi4 * (9 * -0.02625 + 11 * 0.01926 * phi2 + 13 * -0.00396 * phi4));\n  } while (abs(delta) > epsilon2 && --i > 0);\n  phi2 = phi * phi;\n  phi4 = phi2 * phi2;\n  phi6 = phi2 * phi4;\n  return [x / (0.84719 - 0.13063 * phi2 + phi6 * phi6 * (-0.04515 + 0.05494 * phi2 - 0.02326 * phi4 + 0.00331 * phi6)), phi];\n};\nexport default function () {\n  return projection(naturalEarth2Raw).scale(175.295);\n}","map":{"version":3,"names":["geoProjection","projection","abs","epsilon2","naturalEarth2Raw","lambda","phi","phi2","phi4","phi6","invert","x","y","i","delta","scale"],"sources":["/Users/admin/Desktop/techrepublik/pro/subs/vue_subs/node_modules/d3-geo-projection/src/naturalEarth2.js"],"sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon2} from \"./math.js\";\n\nexport function naturalEarth2Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2, phi6 = phi2 * phi4;\n  return [\n    lambda * (0.84719 - 0.13063 * phi2 + phi6 * phi6 * (-0.04515 + 0.05494 * phi2 - 0.02326 * phi4 + 0.00331 * phi6)),\n    phi * (1.01183 + phi4 * phi4 * (-0.02625 + 0.01926 * phi2 - 0.00396 * phi4))\n  ];\n}\n\nnaturalEarth2Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta, phi2, phi4, phi6;\n  do {\n    phi2 = phi * phi; phi4 = phi2 * phi2;\n    phi -= delta = ((phi * (1.01183 + phi4 * phi4 * (-0.02625 + 0.01926 * phi2 - 0.00396 * phi4))) - y) /\n      (1.01183 + phi4 * phi4 * ((9 * -0.02625) + (11 * 0.01926) * phi2 + (13 * -0.00396) * phi4));\n  } while (abs(delta) > epsilon2 && --i > 0);\n  phi2 = phi * phi; phi4 = phi2 * phi2; phi6 = phi2 * phi4;\n  return [\n    x / (0.84719 - 0.13063 * phi2 + phi6 * phi6 * (-0.04515 + 0.05494 * phi2 - 0.02326 * phi4 + 0.00331 * phi6)),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth2Raw)\n      .scale(175.295);\n}\n"],"mappings":"AAAA,SAAQA,aAAa,IAAIC,UAAU,QAAO,QAAQ;AAClD,SAAQC,GAAG,EAAEC,QAAQ,QAAO,WAAW;AAEvC,OAAO,SAASC,gBAAgBA,CAACC,MAAM,EAAEC,GAAG,EAAE;EAC5C,IAAIC,IAAI,GAAGD,GAAG,GAAGA,GAAG;IAAEE,IAAI,GAAGD,IAAI,GAAGA,IAAI;IAAEE,IAAI,GAAGF,IAAI,GAAGC,IAAI;EAC5D,OAAO,CACLH,MAAM,IAAI,OAAO,GAAG,OAAO,GAAGE,IAAI,GAAGE,IAAI,GAAGA,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,GAAGF,IAAI,GAAG,OAAO,GAAGC,IAAI,GAAG,OAAO,GAAGC,IAAI,CAAC,CAAC,EACjHH,GAAG,IAAI,OAAO,GAAGE,IAAI,GAAGA,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,GAAGD,IAAI,GAAG,OAAO,GAAGC,IAAI,CAAC,CAAC,CAC7E;AACH;AAEAJ,gBAAgB,CAACM,MAAM,GAAG,UAASC,CAAC,EAAEC,CAAC,EAAE;EACvC,IAAIN,GAAG,GAAGM,CAAC;IAAEC,CAAC,GAAG,EAAE;IAAEC,KAAK;IAAEP,IAAI;IAAEC,IAAI;IAAEC,IAAI;EAC5C,GAAG;IACDF,IAAI,GAAGD,GAAG,GAAGA,GAAG;IAAEE,IAAI,GAAGD,IAAI,GAAGA,IAAI;IACpCD,GAAG,IAAIQ,KAAK,GAAG,CAAER,GAAG,IAAI,OAAO,GAAGE,IAAI,GAAGA,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,GAAGD,IAAI,GAAG,OAAO,GAAGC,IAAI,CAAC,CAAC,GAAII,CAAC,KAC/F,OAAO,GAAGJ,IAAI,GAAGA,IAAI,IAAK,CAAC,GAAG,CAAC,OAAO,GAAK,EAAE,GAAG,OAAO,GAAID,IAAI,GAAI,EAAE,GAAG,CAAC,OAAO,GAAIC,IAAI,CAAC,CAAC;EAC/F,CAAC,QAAQN,GAAG,CAACY,KAAK,CAAC,GAAGX,QAAQ,IAAI,EAAEU,CAAC,GAAG,CAAC;EACzCN,IAAI,GAAGD,GAAG,GAAGA,GAAG;EAAEE,IAAI,GAAGD,IAAI,GAAGA,IAAI;EAAEE,IAAI,GAAGF,IAAI,GAAGC,IAAI;EACxD,OAAO,CACLG,CAAC,IAAI,OAAO,GAAG,OAAO,GAAGJ,IAAI,GAAGE,IAAI,GAAGA,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,GAAGF,IAAI,GAAG,OAAO,GAAGC,IAAI,GAAG,OAAO,GAAGC,IAAI,CAAC,CAAC,EAC5GH,GAAG,CACJ;AACH,CAAC;AAED,eAAe,YAAW;EACxB,OAAOL,UAAU,CAACG,gBAAgB,CAAC,CAC9BW,KAAK,CAAC,OAAO,CAAC;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}