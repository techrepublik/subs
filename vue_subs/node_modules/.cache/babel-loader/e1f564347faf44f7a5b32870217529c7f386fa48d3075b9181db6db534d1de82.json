{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon, pi, sign } from \"./math.js\";\nexport function laskowskiRaw(lambda, phi) {\n  var lambda2 = lambda * lambda,\n    phi2 = phi * phi;\n  return [lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)), phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032))];\n}\nlaskowskiRaw.invert = function (x, y) {\n  var lambda = sign(x) * pi,\n    phi = y / 2,\n    i = 50;\n  do {\n    var lambda2 = lambda * lambda,\n      phi2 = phi * phi,\n      lambdaPhi = lambda * phi,\n      fx = lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)) - x,\n      fy = phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032)) - y,\n      deltaxDeltaLambda = 0.975534 - phi2 * (0.119161 + 3 * lambda2 * 0.0143059 + phi2 * 0.0547009),\n      deltaxDeltaPhi = -lambdaPhi * (2 * 0.119161 + 4 * 0.0547009 * phi2 + 2 * 0.0143059 * lambda2),\n      deltayDeltaLambda = lambdaPhi * (2 * 0.0802894 + 4 * 0.000199025 * lambda2 + 2 * -0.02855 * phi2),\n      deltayDeltaPhi = 1.00384 + lambda2 * (0.0802894 + 0.000199025 * lambda2) + phi2 * (3 * (0.0998909 - 0.02855 * lambda2) - 5 * 0.0491032 * phi2),\n      denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda,\n      deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n      deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda, phi -= deltaPhi;\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n  return i && [lambda, phi];\n};\nexport default function () {\n  return projection(laskowskiRaw).scale(139.98);\n}","map":{"version":3,"names":["geoProjection","projection","abs","epsilon","pi","sign","laskowskiRaw","lambda","phi","lambda2","phi2","invert","x","y","i","lambdaPhi","fx","fy","deltaxDeltaLambda","deltaxDeltaPhi","deltayDeltaLambda","deltayDeltaPhi","denominator","deltaLambda","deltaPhi","scale"],"sources":["/home/josh/Documents/projects/subs/vue_subs/node_modules/d3-geo-projection/src/laskowski.js"],"sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon, pi, sign} from \"./math.js\";\n\nexport function laskowskiRaw(lambda, phi) {\n  var lambda2 = lambda * lambda, phi2 = phi * phi;\n  return [\n    lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)),\n    phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032))\n  ];\n}\n\nlaskowskiRaw.invert = function(x, y) {\n  var lambda = sign(x) * pi,\n      phi = y / 2,\n      i = 50;\n  do {\n    var lambda2 = lambda * lambda,\n        phi2 = phi * phi,\n        lambdaPhi = lambda * phi,\n        fx = lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)) - x,\n        fy = phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032)) - y,\n        deltaxDeltaLambda = 0.975534 - phi2 * (0.119161 + 3 * lambda2 * 0.0143059 + phi2 * 0.0547009),\n        deltaxDeltaPhi = -lambdaPhi * (2 * 0.119161 + 4 * 0.0547009 * phi2 + 2 * 0.0143059 * lambda2),\n        deltayDeltaLambda = lambdaPhi * (2 * 0.0802894 + 4 * 0.000199025 * lambda2 + 2 * -0.02855 * phi2),\n        deltayDeltaPhi = 1.00384 + lambda2 * (0.0802894 + 0.000199025 * lambda2) + phi2 * (3 * (0.0998909 - 0.02855 * lambda2) - 5 * 0.0491032 * phi2),\n        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda,\n        deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda, phi -= deltaPhi;\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n  return i && [lambda, phi];\n};\n\nexport default function() {\n  return projection(laskowskiRaw)\n      .scale(139.98);\n}\n"],"mappings":"AAAA,SAAQA,aAAa,IAAIC,UAAU,QAAO,QAAQ;AAClD,SAAQC,GAAG,EAAEC,OAAO,EAAEC,EAAE,EAAEC,IAAI,QAAO,WAAW;AAEhD,OAAO,SAASC,YAAYA,CAACC,MAAM,EAAEC,GAAG,EAAE;EACxC,IAAIC,OAAO,GAAGF,MAAM,GAAGA,MAAM;IAAEG,IAAI,GAAGF,GAAG,GAAGA,GAAG;EAC/C,OAAO,CACLD,MAAM,IAAI,QAAQ,GAAGG,IAAI,IAAI,CAAC,QAAQ,GAAGD,OAAO,GAAG,CAAC,SAAS,GAAGC,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,EACnFF,GAAG,IAAI,OAAO,GAAGC,OAAO,IAAI,SAAS,GAAGC,IAAI,GAAG,CAAC,OAAO,GAAGD,OAAO,GAAG,WAAW,CAAC,GAAGC,IAAI,IAAI,SAAS,GAAGA,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,CAC3H;AACH;AAEAJ,YAAY,CAACK,MAAM,GAAG,UAASC,CAAC,EAAEC,CAAC,EAAE;EACnC,IAAIN,MAAM,GAAGF,IAAI,CAACO,CAAC,CAAC,GAAGR,EAAE;IACrBI,GAAG,GAAGK,CAAC,GAAG,CAAC;IACXC,CAAC,GAAG,EAAE;EACV,GAAG;IACD,IAAIL,OAAO,GAAGF,MAAM,GAAGA,MAAM;MACzBG,IAAI,GAAGF,GAAG,GAAGA,GAAG;MAChBO,SAAS,GAAGR,MAAM,GAAGC,GAAG;MACxBQ,EAAE,GAAGT,MAAM,IAAI,QAAQ,GAAGG,IAAI,IAAI,CAAC,QAAQ,GAAGD,OAAO,GAAG,CAAC,SAAS,GAAGC,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,GAAGE,CAAC;MAC5FK,EAAE,GAAGT,GAAG,IAAI,OAAO,GAAGC,OAAO,IAAI,SAAS,GAAGC,IAAI,GAAG,CAAC,OAAO,GAAGD,OAAO,GAAG,WAAW,CAAC,GAAGC,IAAI,IAAI,SAAS,GAAGA,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,GAAGG,CAAC;MACnIK,iBAAiB,GAAG,QAAQ,GAAGR,IAAI,IAAI,QAAQ,GAAG,CAAC,GAAGD,OAAO,GAAG,SAAS,GAAGC,IAAI,GAAG,SAAS,CAAC;MAC7FS,cAAc,GAAG,CAACJ,SAAS,IAAI,CAAC,GAAG,QAAQ,GAAG,CAAC,GAAG,SAAS,GAAGL,IAAI,GAAG,CAAC,GAAG,SAAS,GAAGD,OAAO,CAAC;MAC7FW,iBAAiB,GAAGL,SAAS,IAAI,CAAC,GAAG,SAAS,GAAG,CAAC,GAAG,WAAW,GAAGN,OAAO,GAAG,CAAC,GAAG,CAAC,OAAO,GAAGC,IAAI,CAAC;MACjGW,cAAc,GAAG,OAAO,GAAGZ,OAAO,IAAI,SAAS,GAAG,WAAW,GAAGA,OAAO,CAAC,GAAGC,IAAI,IAAI,CAAC,IAAI,SAAS,GAAG,OAAO,GAAGD,OAAO,CAAC,GAAG,CAAC,GAAG,SAAS,GAAGC,IAAI,CAAC;MAC9IY,WAAW,GAAGH,cAAc,GAAGC,iBAAiB,GAAGC,cAAc,GAAGH,iBAAiB;MACrFK,WAAW,GAAG,CAACN,EAAE,GAAGE,cAAc,GAAGH,EAAE,GAAGK,cAAc,IAAIC,WAAW;MACvEE,QAAQ,GAAG,CAACR,EAAE,GAAGI,iBAAiB,GAAGH,EAAE,GAAGC,iBAAiB,IAAII,WAAW;IAC9Ef,MAAM,IAAIgB,WAAW,EAAEf,GAAG,IAAIgB,QAAQ;EACxC,CAAC,QAAQ,CAACtB,GAAG,CAACqB,WAAW,CAAC,GAAGpB,OAAO,IAAID,GAAG,CAACsB,QAAQ,CAAC,GAAGrB,OAAO,KAAK,EAAEW,CAAC,GAAG,CAAC;EAC3E,OAAOA,CAAC,IAAI,CAACP,MAAM,EAAEC,GAAG,CAAC;AAC3B,CAAC;AAED,eAAe,YAAW;EACxB,OAAOP,UAAU,CAACK,YAAY,CAAC,CAC1BmB,KAAK,CAAC,MAAM,CAAC;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}