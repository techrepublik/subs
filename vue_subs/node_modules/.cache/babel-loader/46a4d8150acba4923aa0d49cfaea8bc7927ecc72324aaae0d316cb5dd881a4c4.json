{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { atan, exp, log, quarterPi, pi, tan } from \"./math.js\";\nexport function millerRaw(lambda, phi) {\n  return [lambda, 1.25 * log(tan(quarterPi + 0.4 * phi))];\n}\nmillerRaw.invert = function (x, y) {\n  return [x, 2.5 * atan(exp(0.8 * y)) - 0.625 * pi];\n};\nexport default function () {\n  return projection(millerRaw).scale(108.318);\n}","map":{"version":3,"names":["geoProjection","projection","atan","exp","log","quarterPi","pi","tan","millerRaw","lambda","phi","invert","x","y","scale"],"sources":["/Users/admin/Desktop/techrepublik/pro/subs/vue_subs/node_modules/d3-geo-projection/src/miller.js"],"sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {atan, exp, log, quarterPi, pi, tan} from \"./math.js\";\n\nexport function millerRaw(lambda, phi) {\n  return [lambda, 1.25 * log(tan(quarterPi + 0.4 * phi))];\n}\n\nmillerRaw.invert = function(x, y) {\n  return [x, 2.5 * atan(exp(0.8 * y)) - 0.625 * pi];\n};\n\nexport default function() {\n  return projection(millerRaw)\n      .scale(108.318);\n}\n"],"mappings":"AAAA,SAAQA,aAAa,IAAIC,UAAU,QAAO,QAAQ;AAClD,SAAQC,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEC,SAAS,EAAEC,EAAE,EAAEC,GAAG,QAAO,WAAW;AAE5D,OAAO,SAASC,SAASA,CAACC,MAAM,EAAEC,GAAG,EAAE;EACrC,OAAO,CAACD,MAAM,EAAE,IAAI,GAAGL,GAAG,CAACG,GAAG,CAACF,SAAS,GAAG,GAAG,GAAGK,GAAG,CAAC,CAAC,CAAC;AACzD;AAEAF,SAAS,CAACG,MAAM,GAAG,UAASC,CAAC,EAAEC,CAAC,EAAE;EAChC,OAAO,CAACD,CAAC,EAAE,GAAG,GAAGV,IAAI,CAACC,GAAG,CAAC,GAAG,GAAGU,CAAC,CAAC,CAAC,GAAG,KAAK,GAAGP,EAAE,CAAC;AACnD,CAAC;AAED,eAAe,YAAW;EACxB,OAAOL,UAAU,CAACO,SAAS,CAAC,CACvBM,KAAK,CAAC,OAAO,CAAC;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}