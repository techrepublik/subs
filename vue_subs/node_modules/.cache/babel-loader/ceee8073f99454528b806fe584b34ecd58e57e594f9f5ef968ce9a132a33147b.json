{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { abs, acos, asin, cos, epsilon, halfPi, sign, sin, tan } from \"./math.js\";\nexport function polyconicRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var tanPhi = tan(phi),\n    k = lambda * sin(phi);\n  return [sin(k) / tanPhi, phi + (1 - cos(k)) / tanPhi];\n}\npolyconicRaw.invert = function (x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  var k = x * x + y * y,\n    phi = y * 0.5,\n    i = 10,\n    delta;\n  do {\n    var tanPhi = tan(phi),\n      secPhi = 1 / cos(phi),\n      j = k - 2 * y * phi + phi * phi;\n    phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n  } while (abs(delta) > epsilon && --i > 0);\n  tanPhi = tan(phi);\n  return [(abs(y) < abs(phi + 1 / tanPhi) ? asin(x * tanPhi) : sign(y) * sign(x) * (acos(abs(x * tanPhi)) + halfPi)) / sin(phi), phi];\n};\nexport default function () {\n  return projection(polyconicRaw).scale(103.74);\n}","map":{"version":3,"names":["geoProjection","projection","abs","acos","asin","cos","epsilon","halfPi","sign","sin","tan","polyconicRaw","lambda","phi","tanPhi","k","invert","x","y","i","delta","secPhi","j","scale"],"sources":["/Users/admin/Desktop/techrepublik/pro/subs/vue_subs/node_modules/d3-geo-projection/src/polyconic.js"],"sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, asin, cos, epsilon, halfPi, sign, sin, tan} from \"./math.js\";\n\nexport function polyconicRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var tanPhi = tan(phi),\n      k = lambda * sin(phi);\n  return [\n    sin(k) / tanPhi,\n    phi + (1 - cos(k)) / tanPhi\n  ];\n}\n\npolyconicRaw.invert = function(x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  var k = x * x + y * y,\n      phi = y * 0.5,\n      i = 10, delta;\n  do {\n    var tanPhi = tan(phi),\n        secPhi = 1 / cos(phi),\n        j = k - 2 * y * phi + phi * phi;\n    phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n  } while (abs(delta) > epsilon && --i > 0);\n  tanPhi = tan(phi);\n  return [\n    (abs(y) < abs(phi + 1 / tanPhi) ? asin(x * tanPhi) : sign(y) * sign(x) * (acos(abs(x * tanPhi)) + halfPi)) / sin(phi),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(polyconicRaw)\n      .scale(103.74);\n}\n"],"mappings":"AAAA,SAAQA,aAAa,IAAIC,UAAU,QAAO,QAAQ;AAClD,SAAQC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,GAAG,EAAEC,OAAO,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAO,WAAW;AAE/E,OAAO,SAASC,YAAYA,CAACC,MAAM,EAAEC,GAAG,EAAE;EACxC,IAAIX,GAAG,CAACW,GAAG,CAAC,GAAGP,OAAO,EAAE,OAAO,CAACM,MAAM,EAAE,CAAC,CAAC;EAC1C,IAAIE,MAAM,GAAGJ,GAAG,CAACG,GAAG,CAAC;IACjBE,CAAC,GAAGH,MAAM,GAAGH,GAAG,CAACI,GAAG,CAAC;EACzB,OAAO,CACLJ,GAAG,CAACM,CAAC,CAAC,GAAGD,MAAM,EACfD,GAAG,GAAG,CAAC,CAAC,GAAGR,GAAG,CAACU,CAAC,CAAC,IAAID,MAAM,CAC5B;AACH;AAEAH,YAAY,CAACK,MAAM,GAAG,UAASC,CAAC,EAAEC,CAAC,EAAE;EACnC,IAAIhB,GAAG,CAACgB,CAAC,CAAC,GAAGZ,OAAO,EAAE,OAAO,CAACW,CAAC,EAAE,CAAC,CAAC;EACnC,IAAIF,CAAC,GAAGE,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC;IACjBL,GAAG,GAAGK,CAAC,GAAG,GAAG;IACbC,CAAC,GAAG,EAAE;IAAEC,KAAK;EACjB,GAAG;IACD,IAAIN,MAAM,GAAGJ,GAAG,CAACG,GAAG,CAAC;MACjBQ,MAAM,GAAG,CAAC,GAAGhB,GAAG,CAACQ,GAAG,CAAC;MACrBS,CAAC,GAAGP,CAAC,GAAG,CAAC,GAAGG,CAAC,GAAGL,GAAG,GAAGA,GAAG,GAAGA,GAAG;IACnCA,GAAG,IAAIO,KAAK,GAAG,CAACN,MAAM,GAAGQ,CAAC,GAAG,CAAC,IAAIT,GAAG,GAAGK,CAAC,CAAC,KAAK,CAAC,GAAGI,CAAC,GAAGD,MAAM,GAAGA,MAAM,GAAG,CAAC,IAAIR,GAAG,GAAGK,CAAC,CAAC,GAAGJ,MAAM,CAAC;EAClG,CAAC,QAAQZ,GAAG,CAACkB,KAAK,CAAC,GAAGd,OAAO,IAAI,EAAEa,CAAC,GAAG,CAAC;EACxCL,MAAM,GAAGJ,GAAG,CAACG,GAAG,CAAC;EACjB,OAAO,CACL,CAACX,GAAG,CAACgB,CAAC,CAAC,GAAGhB,GAAG,CAACW,GAAG,GAAG,CAAC,GAAGC,MAAM,CAAC,GAAGV,IAAI,CAACa,CAAC,GAAGH,MAAM,CAAC,GAAGN,IAAI,CAACU,CAAC,CAAC,GAAGV,IAAI,CAACS,CAAC,CAAC,IAAId,IAAI,CAACD,GAAG,CAACe,CAAC,GAAGH,MAAM,CAAC,CAAC,GAAGP,MAAM,CAAC,IAAIE,GAAG,CAACI,GAAG,CAAC,EACrHA,GAAG,CACJ;AACH,CAAC;AAED,eAAe,YAAW;EACxB,OAAOZ,UAAU,CAACU,YAAY,CAAC,CAC1BY,KAAK,CAAC,MAAM,CAAC;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}