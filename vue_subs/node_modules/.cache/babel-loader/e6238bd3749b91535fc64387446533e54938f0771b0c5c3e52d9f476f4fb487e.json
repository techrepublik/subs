{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport Layout from \"@/layout/main.vue\";\nimport pageheader from \"@/components/page-header.vue\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport flatPickr from \"vue-flatpickr-component\";\nimport \"flatpickr/dist/flatpickr.css\";\nimport { useAuthStore } from '@/stores/auth';\nexport default {\n  name: \"SUBSCRIPTIONS\",\n  components: {\n    Layout,\n    pageheader,\n    flatPickr\n  },\n  setup() {\n    const authStore = useAuthStore();\n    return {\n      authStore\n    };\n  },\n  data() {\n    return {\n      modalShow: false,\n      modalShow1: false,\n      subscribers: [],\n      subscriber: {\n        id: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        middle_name: \"\",\n        ext_name: \"\",\n        marital_status: \"\",\n        gender: \"\",\n        contact_no: \"\",\n        address: \"\",\n        birth_date: \"\",\n        note: \"\",\n        is_good: \"\",\n        added_by: \"\"\n      },\n      operation: false,\n      subscriptions: [],\n      regions: [],\n      provinces: [],\n      municipalities: [],\n      barangays: [],\n      plans: [],\n      modems: [],\n      subscription: {\n        id: \"\",\n        subscriber: \"\",\n        employee: \"\",\n        no: \"\",\n        alias: \"\",\n        note: \"\",\n        referred_by: \"\",\n        region: \"\",\n        province: \"\",\n        municipality: \"\",\n        barangay: \"\",\n        latitude: 0.00,\n        longitude: 0.00,\n        plan: \"\",\n        pon_no: \"\",\n        nap_no: \"\",\n        modem_serial: \"\",\n        modem: \"\",\n        sub_status: \"\",\n        sub_type: \"\",\n        date_activated: \"\",\n        date_terminated: \"\",\n        date_suspended: \"\",\n        modem_username: \"\",\n        modem_password: \"\",\n        created_on: \"\",\n        updated_by: \"\",\n        region_name: \"\",\n        province_name: \"\",\n        municipality_name: \"\",\n        barangay_name: \"\",\n        plan_name: \"\",\n        modem_name: \"\"\n      },\n      /* search */\n      searchQuery: \"\",\n      // Search input\n      loading: false,\n      marking: \"+\",\n      expandedRows: [],\n      // IDs of expanded subscription rows\n      subs: {}\n    };\n  },\n  created() {\n    this.getSubscriptions();\n    this.getRegions();\n    this.getPlans();\n    this.getModems();\n  },\n  methods: {\n    async updateRecord() {\n      try {\n        if (this.operation == false) {\n          await axios.post(\"/api/v1/subscriptions/\", {\n            subscriber: this.subscriber.id,\n            employee: this.authStore.user.id,\n            alias: this.subscription.alias,\n            note: this.subscription.note,\n            referred_by: this.subscription.referred_by,\n            region: this.subscription.region,\n            province: this.subscription.province,\n            municipality: this.subscription.municipality,\n            barangay: this.subscription.barangay,\n            latitude: this.subscription.latitude,\n            longitude: this.subscription.longitude,\n            plan: this.subscription.plan,\n            pon_no: this.subscription.pon_no,\n            nap_no: this.subscription.nap_no,\n            modem_serial: this.subscription.modem_serial,\n            modem: this.subscription.modem,\n            sub_status: this.subscription.sub_status,\n            sub_type: this.subscription.sub_type,\n            date_activated: this.subscription.date_activated,\n            date_terminated: this.subscription.date_terminated,\n            data_suspended: this.subscription.date_suspended,\n            modem_username: this.subscription.modem_username,\n            modem_password: this.subscription.modem_password,\n            created_on: Date.now()\n          }).then(response => {\n            console.log(response.data);\n            this.modalShow = !this.modalShow;\n            Swal.fire({\n              position: \"top-end\",\n              icon: \"success\",\n              title: \"Your work has been saved\",\n              showConfirmButton: false,\n              timer: 1500\n            });\n            this.getSubscribers();\n          });\n        } else {\n          await axios.patch(`/api/v1/subscriptions/${this.subscription.id}/`, {\n            subscriber: this.subscriber.id,\n            employee: this.authStore.user.id,\n            alias: this.subscription.alias,\n            note: this.subscription.note,\n            referred_by: this.subscription.referred_by,\n            region: this.subscription.region,\n            province: this.subscription.province,\n            municipality: this.subscription.municipality,\n            barangay: this.subscription.barangay,\n            latitude: this.subscription.latitude,\n            longitude: this.subscription.longitude,\n            plan: this.subscription.plan,\n            pon_no: this.subscription.pon_no,\n            nap_no: this.subscription.nap_no,\n            modem_serial: this.subscription.modem_serial,\n            modem: this.subscription.modem,\n            sub_status: this.subscription.sub_status,\n            sub_type: this.subscription.sub_type,\n            date_activated: this.subscription.date_activated,\n            date_terminated: this.subscription.date_terminated,\n            data_suspended: this.subscription.date_suspended,\n            modem_username: this.subscription.modem_username,\n            modem_password: this.subscription.modem_password\n          }).then(response => {\n            console.log(response.data);\n            this.modalShow = !this.modalShow;\n            Swal.fire({\n              position: \"top-end\",\n              icon: \"success\",\n              title: \"Your work has been saved\",\n              showConfirmButton: false,\n              timer: 1500\n            });\n            this.getSubscribers();\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching subscribers:', error);\n      }\n    },\n    async getSubscriptions() {\n      try {\n        await axios.get(\"/api/v1/subscriptions/\").then(response => {\n          this.subscriptions = response.data;\n          console.log(this.subscriptions);\n        });\n      } catch (error) {\n        console.error('Error fetching subscriptions:', error);\n      }\n    },\n    async getSubscription(subs_id) {\n      this.modalShow = !this.modalShow;\n      this.operation = true;\n      await axios.get(`/api/v1/subscriptions/${subs_id}/`).then(response => {\n        this.subscription = response.data;\n      }).catch(error => {\n        console.log(JSON.stringify(error));\n      });\n    },\n    async deleteSubscription(subs_id) {\n      await axios.delete(`/api/v1/subscriptions/${subs_id}/`).then(() => {\n        this.subscriptions = this.subscriptions.filter(subs => subs.id !== subs_id);\n      });\n    },\n    showAddModalOpen() {\n      this.subscription = {};\n      this.modalShow1 = !this.modalShow1;\n      this.operation = true;\n    },\n    showAddModalClose() {\n      this.subscription = {};\n      this.modalShow1 = !this.modalShow1;\n      this.operation = false;\n    },\n    cancelDelete(subs_id) {\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: \"btn btn-success\",\n          cancelButton: \"btn btn-danger ml-2\"\n        },\n        buttonsStyling: false\n      });\n      swalWithBootstrapButtons.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        icon: \"warning\",\n        confirmButtonText: \"Yes, delete it!\",\n        cancelButtonText: \"No, cancel!\",\n        showCancelButton: true\n      }).then(result => {\n        if (result.value) {\n          this.deleteSubscription(subs_id);\n          swalWithBootstrapButtons.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n        } else if (/* Read more about handling dismissals below */\n        result.dismiss === Swal.DismissReason.cancel) {\n          swalWithBootstrapButtons.fire(\"Cancelled\", \"Delete operation was cancelled.\", \"error\");\n        }\n      });\n    },\n    // formattedDateTime(date_time_field) {\n    //     if (!date_time_field) return '';\n\n    //     // Ensure correct parsing of ISO date with timezone\n    //     const date = new Date(Date.parse(date_time_field));\n\n    //     // Check if date is valid\n    //     if (isNaN(date.getTime())) {\n    //         console.error('Invalid date:', date_time_field);\n    //         return 'Invalid date';\n    //     }\n\n    //     // Format date and time\n    //     const formattedDate = date.toISOString().split('T')[0]; // YYYY-MM-DD\n    //     const hours = date.getHours();\n    //     const minutes = date.getMinutes();\n    //     const period = hours >= 12 ? 'PM' : 'AM';\n\n    //     // Convert 24-hour time to 12-hour time\n    //     const formattedHours = hours % 12 || 12;\n\n    //     // Pad minutes with leading zeros\n    //     const formattedMinutes = minutes.toString().padStart(2, '0');\n\n    //     // Combine formatted parts\n    //     return `${formattedDate}:${formattedHours}:${formattedMinutes}${period}`;\n    // },\n    formattedDateTime(date_time_field) {\n      if (!date_time_field) return '';\n\n      // Parse the date-time string\n      const date = new Date(Date.parse(date_time_field));\n\n      // Check if the parsed date is valid\n      if (isNaN(date.getTime())) {\n        console.error('Invalid date:', date_time_field);\n        return 'Invalid date';\n      }\n\n      // Extract parts of the date\n      const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      const month = months[date.getMonth()];\n      const day = String(date.getDate()).padStart(2, '0');\n      const year = date.getFullYear();\n\n      // Extract and format time\n      const hours = date.getHours();\n      const minutes = String(date.getMinutes()).padStart(2, '0');\n      const period = hours >= 12 ? 'PM' : 'AM';\n      const formattedHours = hours % 12 || 12; // Convert 24-hour to 12-hour format\n\n      // Combine formatted parts\n      return `${month}-${day}-${year} @ ${formattedHours}:${minutes} ${period}`;\n    },\n    formattedDateTimeDate(date_time_field) {\n      if (!date_time_field) return '';\n\n      // Parse the date-time string\n      const date = new Date(Date.parse(date_time_field));\n\n      // Check if the parsed date is valid\n      if (isNaN(date.getTime())) {\n        console.error('Invalid date:', date_time_field);\n        return 'Invalid date';\n      }\n\n      // Extract parts of the date\n      const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      const month = months[date.getMonth()];\n      const day = String(date.getDate()).padStart(2, '0');\n      const year = date.getFullYear();\n\n      // Combine formatted parts\n      return `${month}-${day}-${year}`;\n    },\n    formattedBirthDate(date_time_field) {\n      if (!date_time_field) return '';\n\n      // Parse the date-time string\n      const date = new Date(Date.parse(date_time_field));\n\n      // Check if the parsed date is valid\n      if (isNaN(date.getTime())) {\n        console.error('Invalid date:', date_time_field);\n        return 'Invalid date';\n      }\n\n      // Extract parts of the date\n      const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      const month = months[date.getMonth()];\n      const day = String(date.getDate()).padStart(2, '0');\n      const year = date.getFullYear();\n\n      // Combine formatted parts\n      return `${month}-${day}-${year}`;\n    },\n    async getRegions() {\n      try {\n        const response = await axios.get('/api/v1/regions/');\n        this.regions = response.data;\n      } catch (error) {\n        console.error('Error fetching regions:', error);\n      }\n    },\n    async getProvinces() {\n      if (!this.subscription.region) return;\n      try {\n        const response = await axios.get(`/api/v1/provinces/?region_id=${this.subscription.region}`);\n        this.provinces = response.data;\n        this.municipalities = [];\n        this.barangays = [];\n        this.selectedProvince = null;\n        this.selectedMunicipality = null;\n        this.selectedBarangay = null;\n      } catch (error) {\n        console.error('Error fetching provinces:', error);\n      }\n    },\n    async getMunicipalities() {\n      if (!this.subscription.province) return;\n      try {\n        const response = await axios.get(`/api/v1/municipalities/?province_id=${this.subscription.province}`);\n        this.municipalities = response.data;\n        this.barangays = [];\n        this.selectedMunicipality = null;\n        this.selectedBarangay = null;\n      } catch (error) {\n        console.error('Error fetching municipalities:', error);\n      }\n    },\n    async getBarangays() {\n      if (!this.subscription.municipality) return;\n      try {\n        const response = await axios.get(`/api/v1/barangays/?municipality_id=${this.subscription.municipality}`);\n        this.barangays = response.data;\n      } catch (error) {\n        console.error('Error fetching barangays:', error);\n      }\n    },\n    async getPlans() {\n      try {\n        const response = await axios.get(\"/api/v1/plans/\");\n        this.plans = response.data;\n      } catch (error) {\n        console.error('Error fetching barangays:', error);\n      }\n    },\n    async getModems() {\n      try {\n        const response = await axios.get(\"/api/v1/modems/\");\n        this.modems = response.data;\n      } catch (error) {\n        console.error('Error fetching barangays:', error);\n      }\n    },\n    /* search */\n    // Apply search\n    applySearch() {\n      this.getSubscribersSearch(); // Fetch data with current search query\n    },\n    async getSubscribersSearch() {\n      try {\n        const params = {};\n        this.loading = true;\n        if (this.searchQuery) {\n          params.search = this.searchQuery; // Add search query to parameters\n        }\n        const response = await axios.get(\"/api/v1/subscriptions/\", {\n          params\n        });\n        this.subscriptions = response.data;\n      } catch (error) {\n        console.error(\"Error fetching subscribers:\", error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    collapse() {\n      if (this.marking == '+') {\n        alert(\"Yo!\");\n        this.marking = '-';\n      } else {\n        this.marking = '+';\n      }\n    },\n    // Toggles the collapsible row\n    toggleCollapse(subscriptionId) {\n      if (this.expandedRows.includes(subscriptionId)) {\n        // Collapse the row\n        this.expandedRows = this.expandedRows.filter(id => id !== subscriptionId);\n      } else {\n        // Expand the row and load billing if not already loaded\n        this.expandedRows.push(subscriptionId);\n        this.loadBilling(subscriptionId);\n      }\n    },\n    // Load billing information for a subscription\n    async loadBilling(subscriptionId) {\n      const subscription = this.subscriptions.find(subs => subs.id === subscriptionId);\n\n      // Skip if billings are already loaded\n      if (subscription.billings) {\n        return;\n      }\n      try {\n        this.loading = true;\n\n        // Replace this URL with your actual API endpoint\n        const response = await axios.get(`/api/billings/?subscription=${subscriptionId}`);\n        subscription.billings = response.data; // Add billing data to subscription\n      } catch (error) {\n        console.error(\"Failed to load billing information:\", error);\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["Layout","pageheader","axios","Swal","flatPickr","useAuthStore","name","components","setup","authStore","data","modalShow","modalShow1","subscribers","subscriber","id","first_name","last_name","middle_name","ext_name","marital_status","gender","contact_no","address","birth_date","note","is_good","added_by","operation","subscriptions","regions","provinces","municipalities","barangays","plans","modems","subscription","employee","no","alias","referred_by","region","province","municipality","barangay","latitude","longitude","plan","pon_no","nap_no","modem_serial","modem","sub_status","sub_type","date_activated","date_terminated","date_suspended","modem_username","modem_password","created_on","updated_by","region_name","province_name","municipality_name","barangay_name","plan_name","modem_name","searchQuery","loading","marking","expandedRows","subs","created","getSubscriptions","getRegions","getPlans","getModems","methods","updateRecord","post","user","data_suspended","Date","now","then","response","console","log","fire","position","icon","title","showConfirmButton","timer","getSubscribers","patch","error","get","getSubscription","subs_id","catch","JSON","stringify","deleteSubscription","delete","filter","showAddModalOpen","showAddModalClose","cancelDelete","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","text","confirmButtonText","cancelButtonText","showCancelButton","result","value","dismiss","DismissReason","cancel","formattedDateTime","date_time_field","date","parse","isNaN","getTime","months","month","getMonth","day","String","getDate","padStart","year","getFullYear","hours","getHours","minutes","getMinutes","period","formattedHours","formattedDateTimeDate","formattedBirthDate","getProvinces","selectedProvince","selectedMunicipality","selectedBarangay","getMunicipalities","getBarangays","applySearch","getSubscribersSearch","params","search","collapse","alert","toggleCollapse","subscriptionId","includes","push","loadBilling","find","billings"],"sources":["/home/josh/Documents/projects/subs/vue_subs/src/views/adashboard/subscriptions.vue"],"sourcesContent":["<script>\nimport Layout from \"@/layout/main.vue\"\nimport pageheader from \"@/components/page-header.vue\"\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport flatPickr from \"vue-flatpickr-component\";\nimport \"flatpickr/dist/flatpickr.css\";\nimport { useAuthStore } from '@/stores/auth';\n\n\nexport default {\n    name: \"SUBSCRIPTIONS\",\n    components: {\n        Layout, pageheader, flatPickr,\n    },\n    setup() {\n        const authStore = useAuthStore();\n        return {\n            authStore,\n        };\n    },\n    data() {\n        return {\n            modalShow: false,\n            modalShow1: false,\n            subscribers: [],\n            subscriber: {\n                id:\"\",\n                first_name: \"\",\n                last_name: \"\",\n                middle_name: \"\",\n                ext_name: \"\",\n                marital_status: \"\",\n                gender: \"\",\n                contact_no:\"\",\n                address: \"\",\n                birth_date:\"\",\n                note: \"\",\n                is_good: \"\",\n                added_by: \"\",\n            },\n            operation: false,\n\n            subscriptions: [],\n            regions: [],\n            provinces: [],\n            municipalities: [],\n            barangays: [],\n            plans: [],\n            modems: [],\n            subscription:{\n                id: \"\",\n                subscriber:\"\",\n                employee:\"\",\n                no:\"\",\n                alias: \"\",\n                note: \"\",\n                referred_by: \"\",\n                region:\"\",\n                province:\"\",\n                municipality:\"\",\n                barangay:\"\",\n                latitude: 0.00,\n                longitude: 0.00,\n                plan: \"\",\n                pon_no: \"\",\n                nap_no: \"\",\n                modem_serial: \"\",\n                modem: \"\",\n                sub_status: \"\",\n                sub_type:\"\",\n                date_activated:\"\",\n                date_terminated: \"\",\n                date_suspended: \"\",\n                modem_username: \"\",\n                modem_password: \"\",\n                created_on: \"\",\n                updated_by: \"\",\n                region_name: \"\",\n                province_name: \"\",\n                municipality_name: \"\",\n                barangay_name: \"\",\n                plan_name: \"\",\n                modem_name: \"\",\n            },\n\n            /* search */\n            searchQuery: \"\", // Search input\n            loading: false,\n\n            marking: \"+\",\n            expandedRows: [], // IDs of expanded subscription rows\n            subs: {}\n        }\n    },\n    created() {\n        this.getSubscriptions();\n        this.getRegions();\n        this.getPlans();\n        this.getModems();\n    },\n    methods: {\n        async updateRecord() {\n            try {\n                if (this.operation==false) {\n                    await axios.post(\"/api/v1/subscriptions/\", { \n                        subscriber: this.subscriber.id,\n                        employee: this.authStore.user.id,\n                        alias: this.subscription.alias,\n                        note: this.subscription.note,\n                        referred_by: this.subscription.referred_by,\n                        region: this.subscription.region,\n                        province: this.subscription.province,\n                        municipality: this.subscription.municipality,\n                        barangay: this.subscription.barangay,\n                        latitude: this.subscription.latitude,\n                        longitude: this.subscription.longitude,\n                        plan: this.subscription.plan,\n                        pon_no: this.subscription.pon_no,\n                        nap_no: this.subscription.nap_no,\n                        modem_serial: this.subscription.modem_serial,\n                        modem: this.subscription.modem,\n                        sub_status: this.subscription.sub_status,\n                        sub_type: this.subscription.sub_type,\n                        date_activated: this.subscription.date_activated,\n                        date_terminated: this.subscription.date_terminated,\n                        data_suspended: this.subscription.date_suspended,\n                        modem_username: this.subscription.modem_username,\n                        modem_password: this.subscription.modem_password,\n                        created_on: Date.now()\n                    }).then((response) => {\n                        console.log(response.data);\n                        this.modalShow = !this.modalShow;\n                        Swal.fire({\n                            position: \"top-end\",\n                            icon: \"success\",\n                            title: \"Your work has been saved\",\n                            showConfirmButton: false,\n                            timer: 1500,\n                        });\n                        this.getSubscribers();\n                    });\n                } else {\n                    await axios.patch(`/api/v1/subscriptions/${this.subscription.id}/`, { \n                        subscriber: this.subscriber.id,\n                        employee: this.authStore.user.id,\n                        alias: this.subscription.alias,\n                        note: this.subscription.note,\n                        referred_by: this.subscription.referred_by,\n                        region: this.subscription.region,\n                        province: this.subscription.province,\n                        municipality: this.subscription.municipality,\n                        barangay: this.subscription.barangay,\n                        latitude: this.subscription.latitude,\n                        longitude: this.subscription.longitude,\n                        plan: this.subscription.plan,\n                        pon_no: this.subscription.pon_no,\n                        nap_no: this.subscription.nap_no,\n                        modem_serial: this.subscription.modem_serial,\n                        modem: this.subscription.modem,\n                        sub_status: this.subscription.sub_status,\n                        sub_type: this.subscription.sub_type,\n                        date_activated: this.subscription.date_activated,\n                        date_terminated: this.subscription.date_terminated,\n                        data_suspended: this.subscription.date_suspended,\n                        modem_username: this.subscription.modem_username,\n                        modem_password: this.subscription.modem_password\n                    }).then((response) => {\n                        console.log(response.data);\n                        this.modalShow = !this.modalShow;\n                        Swal.fire({\n                            position: \"top-end\",\n                            icon: \"success\",\n                            title: \"Your work has been saved\",\n                            showConfirmButton: false,\n                            timer: 1500,\n                        });\n                        this.getSubscribers();\n                    });\n                }\n            } catch(error) {\n                console.error('Error fetching subscribers:', error);\n            }\n\n        },\n        async getSubscriptions() {\n            try {\n                await axios.get(\"/api/v1/subscriptions/\").then((response)=> {\n                    this.subscriptions = response.data;\n                    console.log(this.subscriptions);\n                });\n            } catch (error) {\n                console.error('Error fetching subscriptions:', error);\n            }\n        },\n        async getSubscription(subs_id) {\n            this.modalShow = !this.modalShow;\n            this.operation = true;\n            await axios.get(`/api/v1/subscriptions/${subs_id}/`).then((response) => {\n                    this.subscription = response.data;\n                }).catch(error => {\n                    console.log(JSON.stringify(error));\n            });\n        },\n        async deleteSubscription(subs_id) {\n            await axios.delete(`/api/v1/subscriptions/${subs_id}/`).then(() => {\n                this.subscriptions = this.subscriptions.filter((subs) => subs.id !== subs_id);\n            });\n        },\n        showAddModalOpen() {\n            this.subscription = {};\n            this.modalShow1 = !this.modalShow1;\n            this.operation = true;\n        },\n        showAddModalClose() {\n            this.subscription = {};\n            this.modalShow1 = !this.modalShow1;\n            this.operation = false;\n        },\n        cancelDelete(subs_id) {\n            const swalWithBootstrapButtons = Swal.mixin({\n                customClass: {\n                    confirmButton: \"btn btn-success\",\n                    cancelButton: \"btn btn-danger ml-2\",\n                },\n                buttonsStyling: false,\n            });\n\n            swalWithBootstrapButtons\n                .fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    confirmButtonText: \"Yes, delete it!\",\n                    cancelButtonText: \"No, cancel!\",\n                    showCancelButton: true,\n                })\n                .then((result) => {\n                    if (result.value) {\n                        this.deleteSubscription(subs_id);\n                        swalWithBootstrapButtons.fire(\n                            \"Deleted!\",\n                            \"Your file has been deleted.\",\n                            \"success\"\n                        );\n                    } else if (\n                        /* Read more about handling dismissals below */\n                        result.dismiss === Swal.DismissReason.cancel\n                    ) {\n                        swalWithBootstrapButtons.fire(\n                            \"Cancelled\",\n                            \"Delete operation was cancelled.\",\n                            \"error\"\n                        );\n                    }\n                });\n        },\n        // formattedDateTime(date_time_field) {\n        //     if (!date_time_field) return '';\n\n        //     // Ensure correct parsing of ISO date with timezone\n        //     const date = new Date(Date.parse(date_time_field));\n\n        //     // Check if date is valid\n        //     if (isNaN(date.getTime())) {\n        //         console.error('Invalid date:', date_time_field);\n        //         return 'Invalid date';\n        //     }\n\n        //     // Format date and time\n        //     const formattedDate = date.toISOString().split('T')[0]; // YYYY-MM-DD\n        //     const hours = date.getHours();\n        //     const minutes = date.getMinutes();\n        //     const period = hours >= 12 ? 'PM' : 'AM';\n\n        //     // Convert 24-hour time to 12-hour time\n        //     const formattedHours = hours % 12 || 12;\n\n        //     // Pad minutes with leading zeros\n        //     const formattedMinutes = minutes.toString().padStart(2, '0');\n\n        //     // Combine formatted parts\n        //     return `${formattedDate}:${formattedHours}:${formattedMinutes}${period}`;\n        // },\n        formattedDateTime(date_time_field) {\n            if (!date_time_field) return '';\n\n            // Parse the date-time string\n            const date = new Date(Date.parse(date_time_field));\n\n            // Check if the parsed date is valid\n            if (isNaN(date.getTime())) {\n                console.error('Invalid date:', date_time_field);\n                return 'Invalid date';\n            }\n\n            // Extract parts of the date\n            const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n            const month = months[date.getMonth()];\n            const day = String(date.getDate()).padStart(2, '0');\n            const year = date.getFullYear();\n\n            // Extract and format time\n            const hours = date.getHours();\n            const minutes = String(date.getMinutes()).padStart(2, '0');\n            const period = hours >= 12 ? 'PM' : 'AM';\n            const formattedHours = hours % 12 || 12; // Convert 24-hour to 12-hour format\n\n            // Combine formatted parts\n            return `${month}-${day}-${year} @ ${formattedHours}:${minutes} ${period}`;\n        },\n        formattedDateTimeDate(date_time_field) {\n            if (!date_time_field) return '';\n\n            // Parse the date-time string\n            const date = new Date(Date.parse(date_time_field));\n\n            // Check if the parsed date is valid\n            if (isNaN(date.getTime())) {\n                console.error('Invalid date:', date_time_field);\n                return 'Invalid date';\n            }\n\n            // Extract parts of the date\n            const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n            const month = months[date.getMonth()];\n            const day = String(date.getDate()).padStart(2, '0');\n            const year = date.getFullYear();\n\n            // Combine formatted parts\n            return `${month}-${day}-${year}`;\n        },\n        formattedBirthDate(date_time_field) {\n            if (!date_time_field) return '';\n\n            // Parse the date-time string\n            const date = new Date(Date.parse(date_time_field));\n\n            // Check if the parsed date is valid\n            if (isNaN(date.getTime())) {\n                console.error('Invalid date:', date_time_field);\n                return 'Invalid date';\n            }\n\n            // Extract parts of the date\n            const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n            const month = months[date.getMonth()];\n            const day = String(date.getDate()).padStart(2, '0');\n            const year = date.getFullYear();\n\n            // Combine formatted parts\n            return `${month}-${day}-${year}`;\n        },\n        async getRegions() {\n            try {\n                const response = await axios.get('/api/v1/regions/');\n                this.regions = response.data;\n            } catch (error) {\n                console.error('Error fetching regions:', error);\n            }\n        },\n        async getProvinces() {\n            if (!this.subscription.region) return;\n            try {\n                const response = await axios.get(`/api/v1/provinces/?region_id=${this.subscription.region}`);\n                this.provinces = response.data;\n                this.municipalities = [];\n                this.barangays = [];\n                this.selectedProvince = null;\n                this.selectedMunicipality = null;\n                this.selectedBarangay = null;\n            } catch (error) {\n                console.error('Error fetching provinces:', error);\n            }\n        },\n        async getMunicipalities() {\n            if (!this.subscription.province) return;\n            try {\n                const response = await axios.get(`/api/v1/municipalities/?province_id=${this.subscription.province}`);\n                this.municipalities = response.data;\n                this.barangays = [];\n                this.selectedMunicipality = null;\n                this.selectedBarangay = null;\n            } catch (error) {\n                console.error('Error fetching municipalities:', error);\n            }\n        },\n        async getBarangays() {\n            if (!this.subscription.municipality) return;\n            try {\n                const response = await axios.get(`/api/v1/barangays/?municipality_id=${this.subscription.municipality}`);\n                this.barangays = response.data;\n            } catch (error) {\n                console.error('Error fetching barangays:', error);\n            }\n        },\n        async getPlans() {\n            try {\n                const response = await axios.get(\"/api/v1/plans/\");\n                this.plans = response.data;\n            } catch (error) {\n                console.error('Error fetching barangays:', error);\n            }\n        },\n        async getModems() {\n            try {\n                const response = await axios.get(\"/api/v1/modems/\");\n                this.modems = response.data;\n            } catch (error) {\n                console.error('Error fetching barangays:', error);\n            }\n        },\n\n        /* search */\n        // Apply search\n        applySearch() {\n            this.getSubscribersSearch(); // Fetch data with current search query\n        },\n        async getSubscribersSearch() {\n            try {\n                const params = {};\n                this.loading = true;\n                if (this.searchQuery) {\n                    params.search = this.searchQuery; // Add search query to parameters\n                }\n                const response = await axios.get(\"/api/v1/subscriptions/\", { params });\n                this.subscriptions = response.data;\n            } catch (error) {\n                console.error(\"Error fetching subscribers:\", error);\n            } finally {\n                this.loading=false;\n            }\n        },\n\n        collapse() {\n            if (this.marking=='+') {\n                alert(\"Yo!\");\n                this.marking = '-';\n            }\n            else {\n                this.marking = '+';\n            }\n        },\n\n        // Toggles the collapsible row\n        toggleCollapse(subscriptionId) {\n            if (this.expandedRows.includes(subscriptionId)) {\n                // Collapse the row\n                this.expandedRows = this.expandedRows.filter(\n                    (id) => id !== subscriptionId\n                );\n            } else {\n                // Expand the row and load billing if not already loaded\n                this.expandedRows.push(subscriptionId);\n                this.loadBilling(subscriptionId);\n            }\n        },\n        // Load billing information for a subscription\n        async loadBilling(subscriptionId) {\n            const subscription = this.subscriptions.find(\n                (subs) => subs.id === subscriptionId\n            );\n\n            // Skip if billings are already loaded\n            if (subscription.billings) {\n                return;\n            }\n\n            try {\n                this.loading = true;\n\n                // Replace this URL with your actual API endpoint\n                const response = await axios.get(`/api/billings/?subscription=${subscriptionId}`);\n                subscription.billings = response.data; // Add billing data to subscription\n            } catch (error) {\n                console.error(\"Failed to load billing information:\", error);\n            } finally {\n                this.loading = false;\n            }\n        },\n    }\n}\n</script>\n\n<template>\n    <Layout>\n        <pageheader title=\"Subscription list\" pageTitle=\"Subscriptions\" />\n        <BRow>\n            <BCol class=\"col-sm-12\">\n                <BCard no-body class=\"table-card\">\n                    <BCardBody>\n                        <div class=\"d-flex justify-content-between align-items-center p-sm-4 pb-sm-2\">\n                            <!-- Search Input with Magnifying Glass -->\n                            <div class=\"input-group input-group-sm search-bar\">\n                                <span class=\"input-group-text\">\n                                    <i class=\"ti ti-search\"></i> <!-- Magnifying Glass Icon -->\n                                </span>\n                                <input\n                                    v-model=\"searchQuery\"\n                                    type=\"text\"\n                                    placeholder=\"Search Subscriptions...\"\n                                    class=\"mb-0 form-control form-control-sm\"\n                                    @keydown.enter=\"applySearch\"\n                                />\n                            </div>\n                            <!-- Add Subscriber Button -->\n                                <!-- <router-link to=\"/add-product\" class=\"btn btn-primary\"> <i class=\"ti ti-plus f-18\"></i> Add Region </router-link>-->\n                            <BButton variant=\"primary\" class=\"btn btn-sm\" @click=\"showAddModalOpen\">Add Subscription</BButton>\n                        </div>\n                        <div class=\"table-responsive\">\n                            <!-- Show Spinner While Loading -->\n                            <div v-if=\"loading\" class=\"text-center p-4\">\n                                <BSpinner label=\"Loading...\"></BSpinner>\n                            </div>\n\n                            <table v-else class=\"table table-hover table-sm tbl-product\" id=\"pc-dt-simple\">\n                                <thead>\n                                    <tr>\n                                        <th class=\"text-end\">#</th>\n                                        <th>Name</th>\n                                        <th>Account</th>\n                                        <th>Address</th>\n                                        <th>Modem</th>\n                                        <th>Status/PON/NAP</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr v-for=\"(subs, index) in subscriptions\" :key=\"subs.id\">\n                                        <!-- Main Table Row -->\n                                        <td class=\"text-end\">\n                                            {{ index + 1 }}\n                                            <span\n                                                class=\"ms-1\"\n                                                @click=\"toggleCollapse(subs.id)\"\n                                                style=\"cursor: pointer;\"\n                                            >\n                                                {{ expandedRows.includes(subs.id) ? '-' : '+' }}\n                                            </span>\n                                        </td>\n                                        <td width=\"15%\">\n                                            <BRow class=\"d-flex\">\n                                                <BCol>\n                                                    <h6 class=\"mb-1\">{{ subs.last_name }}, {{ subs.first_name }} {{ subs.middle_name }} {{ subscriber.ext_name }}</h6>\n                                                    <p class=\"text-muted f-12 mb-0\">{{ subs.id_no }} </p>\n                                                </BCol>\n                                            </BRow>\n                                        </td>\n                                        <td width=\"20%\">\n                                            <BRow class=\"d-flex\">\n                                                <BCol>\n                                                    <h6 class=\"mb-1\">{{ subs.alias }}  \n                                                        <span class=\"badge rounded-pill bg-info text-dark\">{{ subs.plan_name }}</span> \n                                                        <span v-if=\"subs.bill_schedule=='start'\" class=\"badge rounded-circle bg-success\">1</span>\n                                                        <span v-else-if=\"subs.bill_schedule=='end'\" class=\"badge rounded-circle bg-primary\">2</span>\n                                                        <span v-else class=\"badge rounded-circle bg-warning\">0</span>\n                                                        <span v-if=\"subs.is_paid\" class=\"badge bg-success\">paid</span>\n                                                        <span v-else class=\"badge bg-danger\">unpaid</span>\n                                                        <span v-if=\"subs.is_partial\" class=\"badge bg-warning\">partial</span>\n                                                    </h6>\n                                                    <p class=\"text-muted f-12 mb-0\">{{ subs.no }} | {{ subs.sub_type }} </p>\n                                                </BCol>\n                                            </BRow>\n                                        </td>\n                                        <td width=\"45%\">\n                                            <BRow class=\"d-flex\">\n                                                <BCol>\n                                                    <h6 class=\"mb-1\">{{ subs.purok }}, {{ subs.municipality_name }}, {{ subs.barangay_name }}</h6>\n                                                    <p class=\"text-muted f-12 mb-0\">{{ subs.region_name }}, {{ subs.province_name }} </p>\n                                                </BCol>\n                                            </BRow>\n                                        </td>\n                                        <td width=\"10%\">\n                                            <BRow class=\"d-flex\">\n                                                <BCol>\n                                                    <h6 class=\"mb-1\">{{ subs.modem_name }}</h6>\n                                                    <p class=\"text-muted f-12 mb-0\">{{ subs.modem_serial}}</p>\n                                                </BCol>\n                                            </BRow>\n                                        </td>\n                                        \n                                        <td class=\"text-center\" width=\"10%\">\n                                            <h6 class=\"mb-1\">{{ subs.sub_status }}  <span class=\"badge rounded-pill bg-warning text-dark\">{{ subs.pon_no }}/{{ subs.nap_no }}</span> </h6>\n                                            <p class=\"text-muted f-12 mb-0\">{{ formattedDateTimeDate(subs.date_activated)}}<span v-if=\"subs.sub_status=='terminated'\">/ {{ subs.date_terminated }}</span></p>\n                                            <div class=\"prod-action-links\">\n                                                <ul class=\"list-inline me-auto mb-0\">\n                                                    <li class=\"list-inline-item align-bottom\" data-bs-toggle=\"tooltip\" title=\"Subscriptions\">\n                                                        <a href=\"#\" @click=\"showAddModal(subs.id)\" class=\"avtar avtar-xs btn-link-secondary btn-pc-default\">\n                                                            <i class=\"ti ti-eye f-18\"></i>\n                                                        </a>\n                                                    </li>\n                                                    <li class=\"list-inline-item align-bottom\" data-bs-toggle=\"tooltip\" title=\"Billing\">\n                                                        \n                                                        <router-link :to=\"{name: 'billings', query: {sub_id: subs.id}}\" class=\" avtar avtar-xs btn-link-success btn-pc-default\">\n                                                            <i class=\"ti ti-file-plus f-18\"></i>\n                                                        </router-link> \n                                                        <!-- \n                                                        <a href=\"#\" @click=\"getSubscription(subs.id)\" class=\" avtar avtar-xs btn-link-success btn-pc-default\">\n                                                            <i class=\"ti ti-edit-circle f-18\"></i>\n                                                            <BoldIcon></BoldIcon>\n                                                        </a>\n                                                        -->\n                                                      \n                                                    </li>\n                                                    <!--\n                                                    <li class=\"list-inline-item align-bottom\" data-bs-toggle=\"tooltip\" title=\"Delete\">\n                                                        <a href=\"#\" @click=\"cancelDelete(subs.id)\" class=\"avtar avtar-xs btn-link-danger btn-pc-default\">\n                                                            <i class=\"ti ti-trash f-18\"></i> \n                                                            \n                                                        </a>\n                                                    </li>\n                                                    -->\n                                                </ul>\n                                            </div>\n                                        </td>\n\n                                    </tr>\n\n                                    \n                                    \n                                </tbody>\n                            </table>\n                        </div>\n                    </BCardBody>\n                </BCard>\n            </BCol>\n        </BRow>\n\n        <!---Subscriber modal -->\n        <BRow>\n            <BCol sm=\"12\">\n                <BCardBody class=\"pc-component\">\n                    <div>\n                        \n                        <BModal v-model=\"modalShow\" title=\"Subscriber\" hide-footer class=\"v-modal-custom\" size=\"lg\">\n                            <div class=\"modal-body  p-0\">\n                                <BRow class=\" mb-3\">\n                                    <label for=\"first_name\" class=\"col-sm-2 col-form-label\">First name</label>\n                                    <BCol class=\"col-sm-10\">\n                                        <input v-model=\"subscriber.first_name\" type=\"text\" class=\"form-control\" id=\"first_name\">\n                                    </BCol>\n                                </BRow>\n                                <BRow class=\" mb-3\">\n                                    <label for=\"last_name\" class=\"col-sm-2 col-form-label\">Last name</label>\n                                    <BCol class=\"col-sm-10\">\n                                        <input v-model=\"subscriber.last_name\" type=\"text\" class=\"form-control\" id=\"last_name\">\n                                    </BCol>\n                                </BRow>\n                                <BRow class=\" mb-3\">\n                                    <label for=\"middle_name\" class=\"col-sm-2 col-form-label\">Middle name</label>\n                                    <BCol class=\"col-sm-10\">\n                                        <input v-model=\"subscriber.middle_name\" type=\"text\" class=\"form-control\" id=\"middle_name\">\n                                    </BCol>\n                                </BRow>\n                                <BRow class=\" mb-3\">\n                                    <label class=\"col-sm-2 col-form-label\" for=\"ext_name\">Name extention</label>\n                                    <BCol class=\"col-sm-2\">\n                                        <select v-model=\"subscriber.ext_name\" class=\"form-select\" id=\"ext_name\">\n                                            <option value=\"\">---</option>\n                                            <option value=\"jr\">JR</option>\n                                            <option value=\"sr\">SR</option>\n                                        </select>\n                                    </BCol>\n\n                                    <label for=\"down\" class=\"col-sm-2 col-form-label\">Birth date</label>\n                                    <BCol class=\"col-sm-6\">\n                                        <flat-pickr v-model=\"subscriber.birth_date\" :first-day-of-week=\"1\" lang=\"en\" confirm\n                                        class=\"form-control\"></flat-pickr>\n                                    </BCol>\n                                </BRow>\n                                <BRow class=\" md-3\">\n                                    <label class=\"col-sm-2 col-form-label\" for=\"marital_status\">Marital Status</label>\n                                    <BCol class=\"col-sm-10\">\n                                        <select v-model=\"subscriber.marital_status\" class=\"form-select\" id=\"marital_status\">\n                                            <option value=\"\">---</option>\n                                            <option value=\"single\" selected>Single</option>\n                                            <option value=\"married\">Married</option>\n                                            <option value=\"widow\">Widow</option>\n                                            <option value=\"annulled\">Annulled</option>\n                                            <option value=\"separated\">Separated</option>\n                                        </select>\n                                    </BCol>\n                                </BRow>\n                                <br />\n                                <BRow class=\" md-3\">\n                                    <label class=\"col-sm-2 col-form-label\" for=\"gender\">Gender</label>\n                                    <BCol class=\"col-sm-10\">\n                                        <select v-model=\"subscriber.gender\" class=\"form-select\" id=\"gender\">\n                                            <option value=\"\">---</option>\n                                            <option value=\"M\" selected >Male</option>\n                                            <option value=\"F\">Female</option>\n                                        </select>\n                                    </BCol>\n                                </BRow>\n                                <br />\n                                <BRow class=\" mb-3\">\n                                    <label for=\"contact_no\" class=\"col-sm-2 col-form-label\">Contact #</label>\n                                    <BCol class=\"col-sm-10\">\n                                        <input v-model=\"subscriber.contact_no\" type=\"text\" class=\"form-control\" id=\"contact_no\">\n                                    </BCol>\n                                </BRow>\n                                <BRow class=\" mb-3\">\n                                    <label for=\"address\" class=\"col-sm-2 col-form-label\">Address</label>\n                                    <BCol class=\"col-sm-10\">\n                                        <textarea v-model=\"subscriber.address\" class=\"form-control\" id=\"address\" rows=\"3\"></textarea>\n                                    </BCol>\n                                </BRow>\n                                <BRow class=\" mb-3\">\n                                    <label for=\"note\" class=\"col-sm-2 col-form-label\">Note</label>\n                                    <BCol class=\"col-sm-10\">\n                                        <textarea v-model=\"subscriber.note\" class=\"form-control\" id=\"note\" rows=\"3\"></textarea>\n                                    </BCol>\n                                </BRow>\n                                <BRow class=\"mb-3\">\n                                    <label for=\"good\" class=\"col-sm-2 col-form-label\">Good?</label>\n                                    <BCol class=\"col-sm-2\">\n                                        <div class=\"input-group mb-6\">\n                                            <div class=\"form-group form-check\">\n                                                <input v-model=\"subscriber.is_good\" type=\"checkbox\" class=\"form-check-input\" id=\"good\">\n                                            </div>\n                                        </div>\n                                    </BCol>\n                                </BRow>\n                            </div>\n                            <div class=\"modal-footer pb-0\">\n                                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" @click=\"modalShow = !modalShow\">Close</button>\n                                <button type=\"button\" class=\"btn btn-primary\" @click=\"updatePlan\">Save changes</button>\n                            </div>\n                        </BModal>\n                    </div>\n\n                </BCardBody>\n            </BCol>\n        </BRow>\n    </Layout>\n</template>\n\n<style lang=\"css\">\n    .fixed-height {\n        max-height: 600px; /* Set the desired fixed height for the table container */\n        overflow-y: auto; /* Enable vertical scrolling */\n        border: 1px solid #ddd; /* Optional: Add a border for clarity */\n    }\n\n    .table-responsive {\n        overflow-x: auto; /* Ensure horizontal scrolling is enabled for wide tables */\n    }\n\n    .search-bar {\n        width: 400px;\n    }\n\n    .d-flex {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n\n    .input-group-text {\n        background-color: #f8f9fa;\n        border-right: none;\n    }\n\n    .form-control {\n        border-left: none;\n    }\n\n    .table-active {\n        background-color: #e9ecef !important; /* Bootstrap's active row color */\n    }\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}