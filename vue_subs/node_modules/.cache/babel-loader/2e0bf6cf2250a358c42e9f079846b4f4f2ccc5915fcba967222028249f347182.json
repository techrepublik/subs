{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { asin, atan2, cos, sin, sqrt } from \"./math.js\";\nexport function wiechelRaw(lambda, phi) {\n  var cosPhi = cos(phi),\n    sinPhi = cos(lambda) * cosPhi,\n    sin1_Phi = 1 - sinPhi,\n    cosLambda = cos(lambda = atan2(sin(lambda) * cosPhi, -sin(phi))),\n    sinLambda = sin(lambda);\n  cosPhi = sqrt(1 - sinPhi * sinPhi);\n  return [sinLambda * cosPhi - cosLambda * sin1_Phi, -cosLambda * cosPhi - sinLambda * sin1_Phi];\n}\nwiechelRaw.invert = function (x, y) {\n  var w = (x * x + y * y) / -2,\n    k = sqrt(-w * (2 + w)),\n    b = y * w + x * k,\n    a = x * w - y * k,\n    D = sqrt(a * a + b * b);\n  return [atan2(k * b, D * (1 + w)), D ? -asin(k * a / D) : 0];\n};\nexport default function () {\n  return projection(wiechelRaw).rotate([0, -90, 45]).scale(124.75).clipAngle(180 - 1e-3);\n}","map":{"version":3,"names":["geoProjection","projection","asin","atan2","cos","sin","sqrt","wiechelRaw","lambda","phi","cosPhi","sinPhi","sin1_Phi","cosLambda","sinLambda","invert","x","y","w","k","b","a","D","rotate","scale","clipAngle"],"sources":["/home/josh/Documents/projects/subs/vue_subs/node_modules/d3-geo-projection/src/wiechel.js"],"sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function wiechelRaw(lambda, phi) {\n  var cosPhi = cos(phi),\n      sinPhi = cos(lambda) * cosPhi,\n      sin1_Phi = 1 - sinPhi,\n      cosLambda = cos(lambda = atan2(sin(lambda) * cosPhi, -sin(phi))),\n      sinLambda = sin(lambda);\n  cosPhi = sqrt(1 - sinPhi * sinPhi);\n  return [\n    sinLambda * cosPhi - cosLambda * sin1_Phi,\n    -cosLambda * cosPhi - sinLambda * sin1_Phi\n  ];\n}\n\nwiechelRaw.invert = function(x, y) {\n  var w = (x * x + y * y) / -2,\n      k = sqrt(-w * (2 + w)),\n      b = y * w + x * k,\n      a = x * w - y * k,\n      D = sqrt(a * a + b * b);\n  return [\n    atan2(k * b, D * (1 + w)),\n    D ? -asin(k * a / D) : 0\n  ];\n};\n\nexport default function() {\n  return projection(wiechelRaw)\n      .rotate([0, -90, 45])\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n"],"mappings":"AAAA,SAAQA,aAAa,IAAIC,UAAU,QAAO,QAAQ;AAClD,SAAQC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,QAAO,WAAW;AAErD,OAAO,SAASC,UAAUA,CAACC,MAAM,EAAEC,GAAG,EAAE;EACtC,IAAIC,MAAM,GAAGN,GAAG,CAACK,GAAG,CAAC;IACjBE,MAAM,GAAGP,GAAG,CAACI,MAAM,CAAC,GAAGE,MAAM;IAC7BE,QAAQ,GAAG,CAAC,GAAGD,MAAM;IACrBE,SAAS,GAAGT,GAAG,CAACI,MAAM,GAAGL,KAAK,CAACE,GAAG,CAACG,MAAM,CAAC,GAAGE,MAAM,EAAE,CAACL,GAAG,CAACI,GAAG,CAAC,CAAC,CAAC;IAChEK,SAAS,GAAGT,GAAG,CAACG,MAAM,CAAC;EAC3BE,MAAM,GAAGJ,IAAI,CAAC,CAAC,GAAGK,MAAM,GAAGA,MAAM,CAAC;EAClC,OAAO,CACLG,SAAS,GAAGJ,MAAM,GAAGG,SAAS,GAAGD,QAAQ,EACzC,CAACC,SAAS,GAAGH,MAAM,GAAGI,SAAS,GAAGF,QAAQ,CAC3C;AACH;AAEAL,UAAU,CAACQ,MAAM,GAAG,UAASC,CAAC,EAAEC,CAAC,EAAE;EACjC,IAAIC,CAAC,GAAG,CAACF,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC,IAAI,CAAC,CAAC;IACxBE,CAAC,GAAGb,IAAI,CAAC,CAACY,CAAC,IAAI,CAAC,GAAGA,CAAC,CAAC,CAAC;IACtBE,CAAC,GAAGH,CAAC,GAAGC,CAAC,GAAGF,CAAC,GAAGG,CAAC;IACjBE,CAAC,GAAGL,CAAC,GAAGE,CAAC,GAAGD,CAAC,GAAGE,CAAC;IACjBG,CAAC,GAAGhB,IAAI,CAACe,CAAC,GAAGA,CAAC,GAAGD,CAAC,GAAGA,CAAC,CAAC;EAC3B,OAAO,CACLjB,KAAK,CAACgB,CAAC,GAAGC,CAAC,EAAEE,CAAC,IAAI,CAAC,GAAGJ,CAAC,CAAC,CAAC,EACzBI,CAAC,GAAG,CAACpB,IAAI,CAACiB,CAAC,GAAGE,CAAC,GAAGC,CAAC,CAAC,GAAG,CAAC,CACzB;AACH,CAAC;AAED,eAAe,YAAW;EACxB,OAAOrB,UAAU,CAACM,UAAU,CAAC,CACxBgB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CACpBC,KAAK,CAAC,MAAM,CAAC,CACbC,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC;AAC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}