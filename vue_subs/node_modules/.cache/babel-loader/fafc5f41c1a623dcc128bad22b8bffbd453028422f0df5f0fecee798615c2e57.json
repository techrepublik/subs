{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\r\n * Module for \"Lighten\" filter.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Filter } from \"./Filter\";\nimport { registry } from \"../../Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a \"Lighten\" filter.\r\n */\nvar LightenFilter = /** @class */function (_super) {\n  __extends(LightenFilter, _super);\n  /**\r\n   * Constructor\r\n   */\n  function LightenFilter() {\n    var _this = _super.call(this) || this;\n    _this.className = \"LightenFilter\";\n    // Create elements\n    // NOTE: we do not need to add each individual element to `_disposers`\n    // because `filterPrimitives` has an event handler which automatically adds\n    // anything added to it to `_disposers`\n    _this.feColorMatrix = _this.paper.add(\"feColorMatrix\");\n    _this.feColorMatrix.attr({\n      \"type\": \"matrix\"\n    });\n    _this.filterPrimitives.push(_this.feColorMatrix);\n    // Set default properties\n    _this.lightness = 0;\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(LightenFilter.prototype, \"lightness\", {\n    /**\r\n     * @return Lightness\r\n     */\n    get: function () {\n      return this.properties[\"lightness\"];\n    },\n    /**\r\n     * Lightness of the target colors.\r\n     *\r\n     * If `lightness` is a positive number, the filter will make all colors\r\n     * lighter.\r\n     *\r\n     * If `lightness` is negative, colors will be darkened.\r\n     *\r\n     * @param value  Lightness\r\n     */\n    set: function (value) {\n      this.properties[\"lightness\"] = value;\n      var v = value + 1;\n      this.feColorMatrix.attr({\n        \"values\": v + \" 0 0 0 0 0 \" + v + \" 0 0 0 0 0 \" + v + \" 0 0 0 0 0 1 0\"\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return LightenFilter;\n}(Filter);\nexport { LightenFilter };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"LightenFilter\"] = LightenFilter;","map":{"version":3,"names":["Filter","registry","LightenFilter","_super","__extends","_this","call","className","feColorMatrix","paper","add","attr","filterPrimitives","push","lightness","applyTheme","Object","defineProperty","prototype","get","properties","set","value","v","registeredClasses"],"sources":["../../../../../../src/.internal/core/rendering/filters/LightenFilter.ts"],"sourcesContent":["/**\r\n * Module for \"Lighten\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { registry } from \"../../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Lighten\" filter\r\n */\r\nexport interface LightenFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Lightness.\r\n\t */\r\n\tlightness: number;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a \"Lighten\" filter.\r\n */\r\nexport class LightenFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: LightenFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t * @see [@link LightenFilterProperties]\r\n\t */\r\n\t//public propertyValues: Dictionary<LightenFilterProperties, any>;\r\n\r\n\t/**\r\n\t * Reference to the `<feColorMatrix>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feColorMatrix: AMElement;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"LightenFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\t\tthis.feColorMatrix = this.paper.add(\"feColorMatrix\");\r\n\t\tthis.feColorMatrix.attr({ \"type\": \"matrix\" });\r\n\t\tthis.filterPrimitives.push(this.feColorMatrix);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.lightness = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Lightness of the target colors.\r\n\t *\r\n\t * If `lightness` is a positive number, the filter will make all colors\r\n\t * lighter.\r\n\t *\r\n\t * If `lightness` is negative, colors will be darkened.\r\n\t *\r\n\t * @param value  Lightness\r\n\t */\r\n\tpublic set lightness(value: number) {\r\n\t\tthis.properties[\"lightness\"] = value;\r\n\t\tlet v = value + 1;\r\n\t\tthis.feColorMatrix.attr({ \"values\": v + \" 0 0 0 0 0 \" + v + \" 0 0 0 0 0 \" + v + \" 0 0 0 0 0 1 0\" });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Lightness\r\n\t */\r\n\tpublic get lightness(): number {\r\n\t\treturn this.properties[\"lightness\"];\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LightenFilter\"] = LightenFilter;\r\n"],"mappings":";AAAA;;;;AAIA;;;;;;AAMA,SAASA,MAAM,QAA0B,UAAU;AAEnD,SAASC,QAAQ,QAAQ,gBAAgB;AAuBzC;;;;;;AAOA;;;AAGA,IAAAC,aAAA,0BAAAC,MAAA;EAAmCC,SAAA,CAAAF,aAAA,EAAAC,MAAA;EAoBlC;;;EAGA,SAAAD,cAAA;IAAA,IAAAG,KAAA,GACCF,MAAA,CAAAG,IAAA,MAAO;IACPD,KAAI,CAACE,SAAS,GAAG,eAAe;IAEhC;IACA;IACA;IACA;IACAF,KAAI,CAACG,aAAa,GAAGH,KAAI,CAACI,KAAK,CAACC,GAAG,CAAC,eAAe,CAAC;IACpDL,KAAI,CAACG,aAAa,CAACG,IAAI,CAAC;MAAE,MAAM,EAAE;IAAQ,CAAE,CAAC;IAC7CN,KAAI,CAACO,gBAAgB,CAACC,IAAI,CAACR,KAAI,CAACG,aAAa,CAAC;IAE9C;IACAH,KAAI,CAACS,SAAS,GAAG,CAAC;IAElBT,KAAI,CAACU,UAAU,EAAE;;EAClB;EAYAC,MAAA,CAAAC,cAAA,CAAWf,aAAA,CAAAgB,SAAA,aAAS;IAMpB;;;SAGA,SAAAC,CAAA;MACC,OAAO,IAAI,CAACC,UAAU,CAAC,WAAW,CAAC;IACpC,CAAC;IArBD;;;;;;;;;;SAUA,SAAAC,CAAqBC,KAAa;MACjC,IAAI,CAACF,UAAU,CAAC,WAAW,CAAC,GAAGE,KAAK;MACpC,IAAIC,CAAC,GAAGD,KAAK,GAAG,CAAC;MACjB,IAAI,CAACd,aAAa,CAACG,IAAI,CAAC;QAAE,QAAQ,EAAEY,CAAC,GAAG,aAAa,GAAGA,CAAC,GAAG,aAAa,GAAGA,CAAC,GAAG;MAAgB,CAAE,CAAC;IACpG,CAAC;;;;EASF,OAAArB,aAAC;AAAD,CAAC,CAhEkCF,MAAM;;AAmEzC;;;;;;AAMAC,QAAQ,CAACuB,iBAAiB,CAAC,eAAe,CAAC,GAAGtB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}