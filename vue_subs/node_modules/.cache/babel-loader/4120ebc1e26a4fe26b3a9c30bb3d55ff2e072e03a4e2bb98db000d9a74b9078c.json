{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport Layout from \"@/layout/main.vue\";\nimport pageheader from \"@/components/page-header.vue\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nexport default {\n  name: \"MODEMS\",\n  components: {\n    Layout,\n    pageheader\n  },\n  data() {\n    return {\n      modalShow: false,\n      modems: [],\n      modem: {\n        id: \"\",\n        modem_brand: \"\",\n        modem_description: \"\",\n        modem_supplier: \"\",\n        is_gigabit: false,\n        price: \"\"\n      },\n      operation: false\n    };\n  },\n  created() {\n    this.getPlans();\n  },\n  methods: {\n    updateModem() {\n      if (this.operation == false) {\n        axios.post(\"/api/v1/modems/\", {\n          modem_brand: this.modem.modem_brand,\n          modem_description: this.modem.modem_description,\n          is_gigabit: this.modem.is_gigabit,\n          modem_supplier: this.modem.modem_supplier,\n          price: this.modem.price\n        }).then(response => {\n          console.log(response.data);\n          this.modalShow = !this.modalShow;\n          Swal.fire({\n            position: \"top-end\",\n            icon: \"success\",\n            title: \"Your work has been saved\",\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.getModems();\n        });\n      } else {\n        axios.patch(`/api/v1/modems/${this.modem.id}/`, {\n          pmodem_brand: this.modem.modem_brand,\n          modem_description: this.modem.modem_description,\n          is_gigabit: this.modem.is_gigabit,\n          modem_supplier: this.modem.modem_supplier,\n          price: this.modem.price\n        }).then(response => {\n          console.log(response.data);\n          this.modalShow = !this.modalShow;\n          Swal.fire({\n            position: \"top-end\",\n            icon: \"success\",\n            title: \"Your work has been saved\",\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.getModems();\n        });\n      }\n    },\n    getModems() {\n      axios.get(\"/api/v1/modems/\").then(response => {\n        this.modems = response.data;\n      });\n    },\n    getModem(modem_id) {\n      this.modalShow = !this.modalShow;\n      this.operation = true;\n      axios.get(`/api/v1/modems/${modem_id}/`).then(response => {\n        this.modem = response.data;\n      }).catch(error => {\n        console.log(JSON.stringify(error));\n      });\n    },\n    deleteModem(modem_id) {\n      axios.delete(`/api/v1/modems/${plan_id}/`).then(() => {\n        this.modems = this.modems.filter(modem => modem.id !== modem_id);\n      });\n    },\n    showAddModal() {\n      this.modem = {};\n      this.modalShow = !this.modalShow;\n      this.operation = false;\n    },\n    cancelDelete(modem_id) {\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: \"btn btn-success\",\n          cancelButton: \"btn btn-danger ml-2\"\n        },\n        buttonsStyling: false\n      });\n      swalWithBootstrapButtons.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        icon: \"warning\",\n        confirmButtonText: \"Yes, delete it!\",\n        cancelButtonText: \"No, cancel!\",\n        showCancelButton: true\n      }).then(result => {\n        if (result.value) {\n          this.deletePlan(modem_id);\n          swalWithBootstrapButtons.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n        } else if (/* Read more about handling dismissals below */\n        result.dismiss === Swal.DismissReason.cancel) {\n          swalWithBootstrapButtons.fire(\"Cancelled\", \"Delete operation was cancelled.\", \"error\");\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Layout","pageheader","axios","Swal","name","components","data","modalShow","modems","modem","id","modem_brand","modem_description","modem_supplier","is_gigabit","price","operation","created","getPlans","methods","updateModem","post","then","response","console","log","fire","position","icon","title","showConfirmButton","timer","getModems","patch","pmodem_brand","get","getModem","modem_id","catch","error","JSON","stringify","deleteModem","delete","plan_id","filter","showAddModal","cancelDelete","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","text","confirmButtonText","cancelButtonText","showCancelButton","result","value","deletePlan","dismiss","DismissReason","cancel"],"sources":["/home/josh/Documents/projects/subs/vue_subs/src/views/adashboard/modems.vue"],"sourcesContent":["<script>\nimport Layout from \"@/layout/main.vue\"\nimport pageheader from \"@/components/page-header.vue\"\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n\nexport default {\n    name: \"MODEMS\",\n    components: {\n        Layout, pageheader\n    },\n    data() {\n        return {\n            modalShow: false,\n            modems: [],\n            modem: {\n                id:\"\",\n                modem_brand: \"\",\n                modem_description: \"\",\n                modem_supplier: \"\",\n                is_gigabit: false,\n                price: \"\",\n            },\n            operation: false,\n        }\n    },\n    created() {\n        this.getPlans();\n    },\n    methods: {\n        updateModem() {\n            if (this.operation==false) {\n                axios.post(\"/api/v1/modems/\", { \n                    modem_brand: this.modem.modem_brand,\n                    modem_description: this.modem.modem_description,\n                    is_gigabit: this.modem.is_gigabit,\n                    modem_supplier: this.modem.modem_supplier,\n                    price: this.modem.price,\n                }).then((response) => {\n                    console.log(response.data);\n                    this.modalShow = !this.modalShow;\n                    Swal.fire({\n                        position: \"top-end\",\n                        icon: \"success\",\n                        title: \"Your work has been saved\",\n                        showConfirmButton: false,\n                        timer: 1500,\n                    });\n                    this.getModems();\n                });\n            } else {\n                axios.patch(`/api/v1/modems/${this.modem.id}/`, { \n                    pmodem_brand: this.modem.modem_brand,\n                    modem_description: this.modem.modem_description,\n                    is_gigabit: this.modem.is_gigabit,\n                    modem_supplier: this.modem.modem_supplier,\n                    price: this.modem.price,\n                }).then((response) => {\n                    console.log(response.data);\n                    this.modalShow = !this.modalShow;\n                    Swal.fire({\n                        position: \"top-end\",\n                        icon: \"success\",\n                        title: \"Your work has been saved\",\n                        showConfirmButton: false,\n                        timer: 1500,\n                    });\n                    this.getModems();\n                });\n            }\n        },\n        getModems() {\n            axios.get(\"/api/v1/modems/\").then((response)=> {\n                this.modems = response.data;\n            });\n        },\n        getModem(modem_id) {\n            this.modalShow = !this.modalShow;\n            this.operation = true;\n            axios.get(`/api/v1/modems/${modem_id}/`).then((response) => {\n                this.modem = response.data;\n            }).catch(error => {\n                console.log(JSON.stringify(error));\n            });\n        },\n        deleteModem(modem_id) {\n            axios.delete(`/api/v1/modems/${plan_id}/`).then(() => {\n                this.modems = this.modems.filter((modem) => modem.id !== modem_id);\n            });\n        },\n        showAddModal() {\n            this.modem = {};\n            this.modalShow = !this.modalShow;\n            this.operation = false;\n        },\n        cancelDelete(modem_id) {\n            const swalWithBootstrapButtons = Swal.mixin({\n                customClass: {\n                    confirmButton: \"btn btn-success\",\n                    cancelButton: \"btn btn-danger ml-2\",\n                },\n                buttonsStyling: false,\n            });\n\n            swalWithBootstrapButtons\n                .fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    confirmButtonText: \"Yes, delete it!\",\n                    cancelButtonText: \"No, cancel!\",\n                    showCancelButton: true,\n                })\n                .then((result) => {\n                    if (result.value) {\n                        this.deletePlan(modem_id);\n                        swalWithBootstrapButtons.fire(\n                            \"Deleted!\",\n                            \"Your file has been deleted.\",\n                            \"success\"\n                        );\n                    } else if (\n                        /* Read more about handling dismissals below */\n                        result.dismiss === Swal.DismissReason.cancel\n                    ) {\n                        swalWithBootstrapButtons.fire(\n                            \"Cancelled\",\n                            \"Delete operation was cancelled.\",\n                            \"error\"\n                        );\n                    }\n                });\n        },\n    }\n}\n</script>\n\n<template>\n    <Layout>\n        <pageheader title=\"Modem list\" pageTitle=\"Modems\" />\n        <BRow>\n            <BCol class=\"col-sm-12\">\n                <BCard no-body class=\"table-card\">\n                    <BCardBody>\n                        <div class=\"text-end p-sm-4 pb-sm-2\">\n                            <!-- <router-link to=\"/add-product\" class=\"btn btn-primary\"> <i class=\"ti ti-plus f-18\"></i> Add Region </router-link>-->\n                            <BButton variant=\"primary\" @click=\"showAddModal\">Add Modem</BButton>\n                        </div>\n                        <div class=\"table-responsive\">\n                            <table class=\"table table-hover tbl-product\" id=\"pc-dt-simple\">\n                                <thead>\n                                    <tr>\n                                        <th class=\"text-end\">#</th>\n                                        <th>Modem</th>\n                                        <th>Type (Gigabit?)</th>\n                                        <th>Supplier</th>\n                                        <th class=\"text-end\">Price</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr v-for=\"(modem, index) in modems\" :key=\"modem.id\">\n                                        <td class=\"text-end\">{{index + 1}}</td>\n                                        <td>\n                                            <BRow class=\"d-flex\">\n                                                <BCol>\n                                                    <h6 class=\"mb-1\">{{ modem.modem_brand }}</h6>\n                                                    <p class=\"text-muted f-12 mb-0\">{{ modem.modem_description }} </p>\n                                                </BCol>\n                                            </BRow>\n                                        </td>\n                                        <td>{{ modem.is_gigabit }}</td>\n                                        <td class=\"text-end\">{{ modem.modem.modem_supplier }}</td>\n                                        <td class=\"text-center\">\n                                            <div class=\"prod-action-links\">\n                                                <ul class=\"list-inline me-auto mb-0\">\n                                                    <!--\n                                                    <li class=\"list-inline-item align-bottom\" data-bs-toggle=\"tooltip\" title=\"View\">\n                                                        <a href=\"#\" class=\"avtar avtar-xs btn-link-secondary btn-pc-default\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#productOffcanvas\">\n                                                            <i class=\"ti ti-eye f-18\"></i>\n                                                        </a>\n                                                    </li>\n                                                    -->\n                                                    <li class=\"list-inline-item align-bottom\" data-bs-toggle=\"tooltip\" title=\"Edit\">\n                                                        <!-- \n                                                        <router-link to=\"/add-product\" class=\" avtar avtar-xs btn-link-success btn-pc-default\">\n                                                            <i class=\"ti ti-edit-circle f-18\"></i>\n                                                        </router-link> \n                                                        -->\n                                                        <a href=\"#\" @click=\"getModem(modem.id)\" class=\" avtar avtar-xs btn-link-success btn-pc-default\">\n                                                            <i class=\"ti ti-edit-circle f-18\"></i>\n                                                        </a>\n                                                    </li>\n                                                    <li class=\"list-inline-item align-bottom\" data-bs-toggle=\"tooltip\" title=\"Delete\">\n                                                        <a href=\"#\" @click=\"cancelDelete(modem.id)\" class=\"avtar avtar-xs btn-link-danger btn-pc-default\">\n                                                            <i class=\"ti ti-trash f-18\"></i>\n                                                        </a>\n                                                    </li>\n                                                </ul>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                    \n                                </tbody>\n                            </table>\n                        </div>\n                    </BCardBody>\n                </BCard>\n            </BCol>\n        </BRow>\n\n        <BRow>\n            <BCol sm=\"12\">\n                <BCardBody class=\"pc-component\">\n                    <div>\n                        \n                        <BModal v-model=\"modalShow\" title=\"Modem Management\" hide-footer class=\"v-modal-custom\" size=\"lg\">\n                            <div class=\"modal-body  p-0\">\n                                <BRow class=\" mb-3\">\n                                    <label for=\"plan\" class=\"col-sm-2 col-form-label\">Modem Brand</label>\n                                    <BCol class=\"col-sm-10\">\n                                        <input v-model=\"modem.modem_brand\" type=\"text\" class=\"form-control\" id=\"brand\">\n                                    </BCol>\n                                </BRow>\n                                <BRow class=\" mb-3\">\n                                    <label for=\"description\" class=\"col-sm-2 col-form-label\">Description</label>\n                                    <BCol class=\"col-sm-10\">\n                                        <textarea v-model=\"modem.modem_description\" class=\"form-control\" id=\"description\" rows=\"3\"></textarea>\n                                    </BCol>\n                                </BRow>\n                                <BRow class=\" mb-3\">\n                                    <label for=\"supplier\" class=\"col-sm-2 col-form-label\">Supplier</label>\n                                    <BCol class=\"col-sm-10\">\n                                        <div class=\"input-group mb-3\">\n                                            <input v-model=\"modem.modem_supplier\" type=\"text\" class=\"form-control\" id=\"brand\">\n                                            <!-- <span class=\"input-group-text\">.00</span> -->\n                                        </div>\n                                    </BCol>\n                                </BRow>\n                                <BRow class=\" mb-3\">\n                                    <label for=\"price\" class=\"col-sm-2 col-form-label\">Price</label>\n                                    <BCol class=\"col-sm-4\">\n                                        <div class=\"input-group mb-3\">\n                                            <span class=\"input-group-text\">Php</span>\n                                            <input v-model=\"modem.price\" type=\"text\" class=\"form-control\" aria-label=\"Amount (to the nearest peso)\">\n                                            <span class=\"input-group-text\">.00</span>\n                                        </div>\n                                    </BCol>\n                                </BRow>\n\n                                <BRow class=\" mb-3\">\n                                    <label for=\"gigabit\" class=\"col-sm-2 col-form-label\">Gigabit?</label>\n                                    <BCol class=\"col-sm-4\">\n                                        <div class=\"form-group form-check\">\n                                            <input v-model=\"modem.is_gigabit\" type=\"checkbox\" class=\"form-check-input\" id=\"gigabit\">\n                                            <label for=\"gigabit\">Check if modem is gigabit.</label>\n                                        </div>\n                                    </BCol>\n                                </BRow>\n\n                                \n\n\n                            </div>\n                            <div class=\"modal-footer pb-0\">\n                                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" @click=\"modalShow = !modalShow\">Close</button>\n                                <button type=\"button\" class=\"btn btn-primary\" @click=\"updatePlan\">Save changes</button>\n                            </div>\n                        </BModal>\n                    </div>\n\n                </BCardBody>\n            </BCol>\n        </BRow>\n    </Layout>\n</template>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}