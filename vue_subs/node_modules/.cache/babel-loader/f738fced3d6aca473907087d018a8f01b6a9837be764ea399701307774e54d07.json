{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"d-flex w-100\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  class: \"float-end\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"float-end me-2\"\n};\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_pageHeader = _resolveComponent(\"pageHeader\");\n  const _component_BRow = _resolveComponent(\"BRow\");\n  const _component_BCardHeader = _resolveComponent(\"BCardHeader\");\n  const _component_BCol = _resolveComponent(\"BCol\");\n  const _component_BListGroupItem = _resolveComponent(\"BListGroupItem\");\n  const _component_BListGroup = _resolveComponent(\"BListGroup\");\n  const _component_BCardBody = _resolveComponent(\"BCardBody\");\n  const _component_BCard = _resolveComponent(\"BCard\");\n  const _component_Layout = _resolveComponent(\"Layout\");\n  return _openBlock(), _createBlock(_component_Layout, null, {\n    default: _withCtx(() => [_createVNode(_component_pageHeader, {\n      title: \"Issues\",\n      PageTitle: \"Issues\"\n    }), _createVNode(_component_BRow, null, {\n      default: _withCtx(() => [_createVNode(_component_BCol, {\n        \"no-body\": \"\",\n        class: \"table-card\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" Regions Section \"), _createVNode(_component_BRow, {\n          class: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_BCol, {\n            class: \"col-lg-12\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_BRow, null, {\n              default: _withCtx(() => [_createVNode(_component_BCol, {\n                md: \"12\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_BCard, {\n                  \"no-body\": \"\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_BCardHeader, null, {\n                    default: _withCtx(() => [_cache[6] || (_cache[6] = _createElementVNode(\"h5\", {\n                      class: \"mb-2\"\n                    }, \"Issues\", -1 /* HOISTED */)), _createVNode(_component_BRow, {\n                      class: \"mb-3\"\n                    }), _cache[7] || (_cache[7] = _createElementVNode(\"small\", {\n                      class: \"m-0\"\n                    }, \"The most basic list group is an unordered list with list items and the proper classes\", -1 /* HOISTED */))]),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_BCardBody, null, {\n                    default: _withCtx(() => [_createElementVNode(\"form\", {\n                      onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.updateIssue && $options.updateIssue(...args), [\"prevent\"]))\n                    }, [_createVNode(_component_BRow, {\n                      class: \"mb-2\"\n                    }, {\n                      default: _withCtx(() => [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n                        for: \"issue\",\n                        class: \"col-sm-2 ms-3 col-form-label\"\n                      }, \"Issue\", -1 /* HOISTED */)), _createVNode(_component_BCol, {\n                        class: \"col-sm-2\"\n                      }, {\n                        default: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n                          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.issue.name = $event),\n                          placeholder: \"Enter issue\",\n                          class: \"form-control\",\n                          id: \"issue\",\n                          required: \"\"\n                        }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.issue.name]])]),\n                        _: 1 /* STABLE */\n                      }), _cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n                        for: \"desciption\",\n                        class: \"col-sm-2 col-form-label\"\n                      }, \"Description\", -1 /* HOISTED */)), _createVNode(_component_BCol, {\n                        class: \"col-sm-3\"\n                      }, {\n                        default: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n                          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.issue.description = $event),\n                          placeholder: \"Description\",\n                          class: \"form-control\",\n                          id: \"description\",\n                          required: \"\"\n                        }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.issue.description]])]),\n                        _: 1 /* STABLE */\n                      }), _cache[10] || (_cache[10] = _createElementVNode(\"button\", {\n                        type: \"submit\",\n                        class: \"col-sm-1 btn btn-primary\"\n                      }, \"Add\", -1 /* HOISTED */))]),\n                      _: 1 /* STABLE */\n                    })], 32 /* NEED_HYDRATION */), _cache[11] || (_cache[11] = _createElementVNode(\"hr\", null, null, -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.issues, issue => {\n                      return _openBlock(), _createBlock(_component_BListGroup, {\n                        key: issue.id,\n                        class: \"d-flex\"\n                      }, {\n                        default: _withCtx(() => [_createVNode(_component_BListGroupItem, null, {\n                          default: _withCtx(() => [$data.editedIssue?.id === issue.id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n                            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.editedIssue.name = $event),\n                            class: \"form-control me-2\",\n                            placeholder: \"Edit issue name\"\n                          }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editedIssue.name]]), _withDirectives(_createElementVNode(\"input\", {\n                            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.editedIssue.description = $event),\n                            class: \"form-control me-2\",\n                            placeholder: \"Edit issue description\"\n                          }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editedIssue.description]]), _createElementVNode(\"button\", {\n                            class: \"btn btn-sm btn-success me-2\",\n                            onClick: $event => $options.updateIssue(issue.id)\n                          }, \" Save \", 8 /* PROPS */, _hoisted_2), _createElementVNode(\"button\", {\n                            class: \"btn btn-sm btn-secondary\",\n                            onClick: _cache[5] || (_cache[5] = $event => $data.editedIssue = null)\n                          }, \" Cancel \")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"span\", null, _toDisplayString(issue.name), 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(issue.description), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_4, [_createElementVNode(\"a\", {\n                            href: \"#\",\n                            onClick: $event => $options.deleteIssue(issue.id)\n                          }, \"Delete\", 8 /* PROPS */, _hoisted_5)]), _createElementVNode(\"span\", _hoisted_6, [_createElementVNode(\"a\", {\n                            href: \"#\",\n                            onClick: $event => $options.editIssue(issue)\n                          }, \"Edit\", 8 /* PROPS */, _hoisted_7)])]))]),\n                          _: 2 /* DYNAMIC */\n                        }, 1024 /* DYNAMIC_SLOTS */)]),\n                        _: 2 /* DYNAMIC */\n                      }, 1024 /* DYNAMIC_SLOTS */);\n                    }), 128 /* KEYED_FRAGMENT */))]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 1 /* STABLE */\n                })]),\n                _: 1 /* STABLE */\n              })]),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["key","class","_createBlock","_component_Layout","default","_withCtx","_createVNode","_component_pageHeader","title","PageTitle","_component_BRow","_component_BCol","_createCommentVNode","md","_component_BCard","_component_BCardHeader","_createElementVNode","_","_component_BCardBody","onSubmit","_cache","_withModifiers","args","$options","updateIssue","for","$event","$data","issue","name","placeholder","id","required","description","type","_createElementBlock","_Fragment","_renderList","issues","_component_BListGroup","_component_BListGroupItem","editedIssue","_hoisted_1","onClick","_hoisted_2","_hoisted_3","_toDisplayString","_hoisted_4","href","deleteIssue","_hoisted_5","_hoisted_6","editIssue","_hoisted_7"],"sources":["/home/josh/Documents/projects/subs/vue_subs/src/views/adashboard/issues.vue"],"sourcesContent":["<script>\n    import Layout from \"@/layout/main.vue\"\n    import pageHeader from \"@/components/page-header.vue\";\n    import Swal from \"sweetalert2\";\n    import axios from \"axios\";\n\n    export default {\n        name: \"ISSUES\",\n        components: {\n            Layout, pageHeader\n        },\n        data() {\n            return {\n                regions: [],\n                newRegion:\"\",\n                provinces: [],\n                municipalities: [],\n                barangays: [],\n                selectedRegion: null,\n                selectedProvince: null,\n                selectedMunicipality: null,\n                newProvince: \"\",\n                newMunicipality: \"\",\n                newBarangay: \"\",\n                editedRegion: null,\n                editedProvince: null,\n                editedMunicipality: null,\n                editedBarangay: null,\n\n                operation: false,\n                editedIssue: null,\n                issues: [],\n                issue: {\n                    id: \"\",\n                    name: \"\",\n                    description: \"\",\n                }\n\n            };\n        },\n        created() {\n            this.getIssues();\n        },\n        methods: {\n            async updateIssue(){\n                try {\n                    if (this.operation==false) {\n                        await axios.post(\"/api/v1/issues/\", {\n                            name: this.ticket.name,\n                            description: this.ticket.description\n                        });  \n                    } else {\n                        await axios.post(\"/api/v1/issues/\", {\n                            name: this.ticket.name,\n                            description: this.ticket.description\n                        });  \n                    }\n                    Swal.fire({\n                        position: \"top-end\",\n                        icon: \"success\",\n                        title: \"Your work has been saved\",\n                        showConfirmButton: false,\n                        timer: 1500,\n                    });\n                } catch (error) {\n                    console.error('Error updating issues:', error);\n                }\n            },\n            async getIssues() {\n                try {\n                    await axios.get(\"/api/v1/issues/\").then((response) =>  {this.issues = response.data});\n                } catch (error) {\n                    console.error('Error fetching issues:', error);\n                }\n            },\n            async getIssue() {\n                try {\n                    await axios.get(`/api/v1/issues/${this.issue.id}/`).then((response) => {\n                        this.issue = response.data\n                    });\n                } catch (error) {\n                    console.error('Error fetching issues:', error);\n                }\n            },\n            async deleteIssue() {\n                try {\n                    await axios.delete(`/api/v1/issues/${this.issue.id}/`).then(() => {\n                        this.issues = this.issues.filter((issue) => issue.id !== this.issue.id);\n                    });\n                } catch (error) {\n                    console.error('Error fetching issues:', error);\n                }\n            },\n            editIssue(issue) {\n                this.editedIssue = {...issue};\n            },\n        },\n    }\n</script>\n\n<template>\n    <Layout>\n        <pageHeader title=\"Issues\" PageTitle=\"Issues\" />\n        <BRow>\n            <BCol no-body class=\"table-card\">\n                 <!-- Regions Section -->\n                <BRow class=\"\">\n                    <BCol class=\"col-lg-12\">\n                        <BRow>\n                            <BCol md=\"12\">\n                                <BCard no-body>\n                                    <BCardHeader>\n                                        <h5 class=\"mb-2\">Issues</h5><BRow class=\" mb-3\"></BRow>\n                                        <small class=\"m-0\">The most basic list group is an unordered list with list items and the proper\n                                            classes</small>\n                                    </BCardHeader>\n                                    <BCardBody>\n                                        <form @submit.prevent=\"updateIssue\">\n                                            <BRow class=\" mb-2\">\n                                                <label for=\"issue\" class=\"col-sm-2 ms-3 col-form-label\">Issue</label>\n                                                <BCol class=\"col-sm-2\">\n                                                    <input v-model=\"issue.name\" placeholder=\"Enter issue\" class=\"form-control\" id=\"issue\" required /> \n                                                </BCol>\n                                                <label for=\"desciption\" class=\"col-sm-2 col-form-label\">Description</label>\n                                                <BCol class=\"col-sm-3\">\n                                                    <input v-model=\"issue.description\" placeholder=\"Description\" class=\"form-control\" id=\"description\" required /> \n                                                </BCol>\n                                                <button type=\"submit\" class=\"col-sm-1 btn btn-primary\">Add</button>\n                                            </BRow>\n                                        </form>\n                                        <hr />\n                                        <BListGroup v-for=\"issue in issues\" :key=\"issue.id\" class=\"d-flex\">\n                                            <BListGroupItem>\n                                                <div v-if=\"editedIssue?.id===issue.id\" class=\"d-flex w-100\">\n                                                    <input\n                                                        v-model=\"editedIssue.name\"\n                                                        class=\"form-control me-2\"\n                                                        placeholder=\"Edit issue name\"\n                                                    />\n                                                    <input\n                                                        v-model=\"editedIssue.description\"\n                                                        class=\"form-control me-2\"\n                                                        placeholder=\"Edit issue description\"\n                                                    />\n                                                    <button\n                                                        class=\"btn btn-sm btn-success me-2\"\n                                                        @click=\"updateIssue(issue.id)\"\n                                                    >\n                                                        Save\n                                                    </button>\n                                                    <button class=\"btn btn-sm btn-secondary\" @click=\"editedIssue=null\">\n                                                        Cancel\n                                                    </button>\n                                                </div>\n                                                <div v-else>\n                                                    <span>{{ issue.name }}</span><span>{{ issue.description }}</span> \n                                                    <span class=\"float-end\"><a href=\"#\" @click=\"deleteIssue(issue.id)\" >Delete</a></span>\n                                                    <span class=\"float-end me-2\"><a href=\"#\" @click=\"editIssue(issue)\" >Edit</a></span>\n                                                </div>\n                                            </BListGroupItem>\n                                        </BListGroup>\n                                    </BCardBody>\n                                </BCard>\n                            </BCol>\n                        </BRow>\n                    </BCol>\n                </BRow>\n\n            </BCol>\n        </BRow>\n    </Layout>\n</template>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}