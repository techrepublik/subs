{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Layout from \"@/layout/main.vue\";\nimport pageheader from \"@/components/page-header.vue\";\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from '@amcharts/amcharts4/maps';\nimport am4geodata_worldLow from '@amcharts/amcharts4-geodata/worldLow';\nimport am4geodata_canadaLow from \"@amcharts/amcharts4-geodata/canadaLow\";\nimport am4geodata_iraqLow from \"@amcharts/amcharts4-geodata/iraqLow\";\nimport am4geodata_italyLow from \"@amcharts/amcharts4-geodata/italyLow\";\nimport am4geodata_russiaLow from \"@amcharts/amcharts4-geodata/russiaLow\";\nimport am4geodata_spainLow from \"@amcharts/amcharts4-geodata/spainLow\";\nimport am4geodata_usaLow from \"@amcharts/amcharts4-geodata/usaLow\";\nexport default {\n  name: \"MAPS\",\n  data() {\n    return {\n      markers: [{\n        position: {\n          lat: 10.0,\n          lng: 10.0\n        }\n      }, {\n        position: {\n          lat: 15.0,\n          lng: 13.0\n        }\n      }]\n    };\n  },\n  components: {\n    Layout,\n    pageheader\n  },\n  methods: {\n    initialMap(divId, geodata, withMarkers) {\n      // Create a chart instance\n      const chart = am4core.create(divId, am4maps.MapChart);\n\n      // Set map definition\n      chart.geodata = geodata;\n\n      // Set projection\n      chart.projection = new am4maps.projections.Miller();\n\n      // Create map polygon series\n      const polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\n\n      // Exclude Antarctica for the world map\n      if (geodata === am4geodata_worldLow) {\n        polygonSeries.exclude = [\"AQ\"];\n      }\n\n      // Make map load polygon data (country shapes and names) from GeoJSON\n      polygonSeries.useGeodata = true;\n\n      // Configure series\n      const polygonTemplate = polygonSeries.mapPolygons.template;\n      polygonTemplate.tooltipText = \"{name}\";\n      polygonTemplate.fill = am4core.color(\"#d6dae6\");\n      if (withMarkers) {\n        let imageSeries = chart.series.push(new am4maps.MapImageSeries());\n        let imageSeriesTemplate = imageSeries.mapImages.template;\n        let circle = imageSeriesTemplate.createChild(am4core.Circle);\n        circle.radius = 4;\n        circle.fill = am4core.color(\"#374151\");\n        circle.fillOpacity = 1;\n        circle.stroke = am4core.color(\"#FFF\");\n        circle.strokeOpacity = 0.5;\n        circle.strokeWidth = 5;\n        circle.nonScaling = true;\n        circle.tooltipText = \"{title}\";\n        imageSeriesTemplate.propertyFields.latitude = \"latitude\";\n        imageSeriesTemplate.propertyFields.longitude = \"longitude\";\n        imageSeries.data = [{\n          \"latitude\": 56.130367,\n          \"longitude\": -106.346771,\n          \"title\": \"Canada\"\n        }, {\n          \"latitude\": 37.090240,\n          \"longitude\": -95.712891,\n          \"title\": \"United States\"\n        }, {\n          \"latitude\": -14.235004,\n          \"longitude\": -51.925282,\n          \"title\": \"Brazil\"\n        }, {\n          \"latitude\": 44.016521,\n          \"longitude\": 21.005859,\n          \"title\": \"Serbia\"\n        }, {\n          \"latitude\": 61.5240,\n          \"longitude\": 105.3188,\n          \"title\": \"Russia\"\n        }];\n      }\n    }\n  },\n  mounted() {\n    this.initialMap(\"chartDiv1\", am4geodata_worldLow, false); // Initialize world map without markers\n    this.initialMap(\"chartDiv2\", am4geodata_worldLow, true); // Initialize world map with markers\n    this.initialMap(\"chartDiv3\", am4geodata_canadaLow, false); // Initialize Canada map without markers\n    this.initialMap(\"chartDiv4\", am4geodata_iraqLow, false); // Initialize Iraq map without markers\n    this.initialMap(\"chartDiv5\", am4geodata_italyLow, false); // Initialize Italy map without markers\n    this.initialMap(\"chartDiv6\", am4geodata_russiaLow, false); // Initialize Russia map without markers\n    this.initialMap(\"chartDiv7\", am4geodata_spainLow, false); // Initialize Spain map without markers\n    this.initialMap(\"chartDiv8\", am4geodata_usaLow, false);\n  }\n};","map":{"version":3,"names":["Layout","pageheader","am4core","am4maps","am4geodata_worldLow","am4geodata_canadaLow","am4geodata_iraqLow","am4geodata_italyLow","am4geodata_russiaLow","am4geodata_spainLow","am4geodata_usaLow","name","data","markers","position","lat","lng","components","methods","initialMap","divId","geodata","withMarkers","chart","create","MapChart","projection","projections","Miller","polygonSeries","series","push","MapPolygonSeries","exclude","useGeodata","polygonTemplate","mapPolygons","template","tooltipText","fill","color","imageSeries","MapImageSeries","imageSeriesTemplate","mapImages","circle","createChild","Circle","radius","fillOpacity","stroke","strokeOpacity","strokeWidth","nonScaling","propertyFields","latitude","longitude","mounted"],"sources":["/Users/admin/Desktop/techrepublik/pro/subs/vue_subs/src/views/live-preview/charts&map/v-map.vue"],"sourcesContent":["<script>\r\nimport Layout from \"@/layout/main.vue\";\r\nimport pageheader from \"@/components/page-header.vue\";\r\nimport * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4maps from '@amcharts/amcharts4/maps';\r\nimport am4geodata_worldLow from '@amcharts/amcharts4-geodata/worldLow';\r\nimport am4geodata_canadaLow from \"@amcharts/amcharts4-geodata/canadaLow\";\r\nimport am4geodata_iraqLow from \"@amcharts/amcharts4-geodata/iraqLow\";\r\nimport am4geodata_italyLow from \"@amcharts/amcharts4-geodata/italyLow\";\r\nimport am4geodata_russiaLow from \"@amcharts/amcharts4-geodata/russiaLow\";\r\nimport am4geodata_spainLow from \"@amcharts/amcharts4-geodata/spainLow\";\r\nimport am4geodata_usaLow from \"@amcharts/amcharts4-geodata/usaLow\";\r\n\r\nexport default {\r\n    name: \"MAPS\",\r\n    data() {\r\n        return {\r\n            markers: [\r\n                {\r\n                    position: { lat: 10.0, lng: 10.0 },\r\n                },\r\n                {\r\n                    position: { lat: 15.0, lng: 13.0 },\r\n                },\r\n            ],\r\n        };\r\n    },\r\n    components: {\r\n        Layout, pageheader,\r\n    },\r\n    methods: {\r\n        initialMap(divId, geodata, withMarkers) {\r\n            // Create a chart instance\r\n            const chart = am4core.create(divId, am4maps.MapChart);\r\n\r\n            // Set map definition\r\n            chart.geodata = geodata;\r\n\r\n            // Set projection\r\n            chart.projection = new am4maps.projections.Miller();\r\n\r\n            // Create map polygon series\r\n            const polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n\r\n            // Exclude Antarctica for the world map\r\n            if (geodata === am4geodata_worldLow) {\r\n                polygonSeries.exclude = [\"AQ\"];\r\n            }\r\n\r\n            // Make map load polygon data (country shapes and names) from GeoJSON\r\n            polygonSeries.useGeodata = true;\r\n\r\n            // Configure series\r\n            const polygonTemplate = polygonSeries.mapPolygons.template;\r\n            polygonTemplate.tooltipText = \"{name}\";\r\n            polygonTemplate.fill = am4core.color(\"#d6dae6\");\r\n\r\n            if (withMarkers) {\r\n                let imageSeries = chart.series.push(new am4maps.MapImageSeries());\r\n\r\n                let imageSeriesTemplate = imageSeries.mapImages.template;\r\n                let circle = imageSeriesTemplate.createChild(am4core.Circle);\r\n                circle.radius = 4;\r\n                circle.fill = am4core.color(\"#374151\");\r\n                circle.fillOpacity = 1;\r\n                circle.stroke = am4core.color(\"#FFF\");\r\n                circle.strokeOpacity = 0.5;\r\n                circle.strokeWidth = 5;\r\n                circle.nonScaling = true;\r\n                circle.tooltipText = \"{title}\";\r\n\r\n                imageSeriesTemplate.propertyFields.latitude = \"latitude\";\r\n                imageSeriesTemplate.propertyFields.longitude = \"longitude\";\r\n\r\n                imageSeries.data = [{\r\n                    \"latitude\": 56.130367,\r\n                    \"longitude\": -106.346771,\r\n                    \"title\": \"Canada\"\r\n                }, {\r\n                    \"latitude\": 37.090240,\r\n                    \"longitude\": -95.712891,\r\n                    \"title\": \"United States\"\r\n                }, {\r\n                    \"latitude\": -14.235004,\r\n                    \"longitude\": -51.925282,\r\n                    \"title\": \"Brazil\"\r\n                }, {\r\n                    \"latitude\": 44.016521,\r\n                    \"longitude\": 21.005859,\r\n                    \"title\": \"Serbia\"\r\n                }, {\r\n                    \"latitude\": 61.5240,\r\n                    \"longitude\": 105.3188,\r\n                    \"title\": \"Russia\"\r\n                }];\r\n            }\r\n        },\r\n    },\r\n    mounted() {\r\n        this.initialMap(\"chartDiv1\", am4geodata_worldLow, false); // Initialize world map without markers\r\n        this.initialMap(\"chartDiv2\", am4geodata_worldLow, true);  // Initialize world map with markers\r\n        this.initialMap(\"chartDiv3\", am4geodata_canadaLow, false); // Initialize Canada map without markers\r\n        this.initialMap(\"chartDiv4\", am4geodata_iraqLow, false);  // Initialize Iraq map without markers\r\n        this.initialMap(\"chartDiv5\", am4geodata_italyLow, false); // Initialize Italy map without markers\r\n        this.initialMap(\"chartDiv6\", am4geodata_russiaLow, false); // Initialize Russia map without markers\r\n        this.initialMap(\"chartDiv7\", am4geodata_spainLow, false); // Initialize Spain map without markers\r\n        this.initialMap(\"chartDiv8\", am4geodata_usaLow, false);\r\n    },\r\n}\r\n</script>\r\n\r\n<template>\r\n    <Layout>\r\n        <pageheader title=\"Vector Map\" pageTitle=\"Maps\" />\r\n        <BRow>\r\n            <BCol lg=\"6\">\r\n                <BCard no-body>\r\n                    <BCardHeader>Basic Map With Markers</BCardHeader>\r\n                    <BCardBody>\r\n                        <div id=\"chartDiv2\" style=\"height: 365px\"></div>\r\n                    </BCardBody>\r\n                </BCard>\r\n            </BCol>\r\n            <BCol lg=\"6\">\r\n                <BCard no-body>\r\n                    <BCardHeader>World [merc] Map</BCardHeader>\r\n                    <BCardBody>\r\n                        <div id=\"chartDiv1\" style=\"height: 365px\"></div>\r\n                    </BCardBody>\r\n                </BCard>\r\n            </BCol>\r\n        </BRow>\r\n\r\n        <BRow>\r\n            <BCol lg=\"6\">\r\n                <BCard no-body>\r\n                    <BCardHeader>Canada Map</BCardHeader>\r\n\r\n                    <BCardBody>\r\n                        <div id=\"chartDiv3\" style=\"height: 365px\"></div>\r\n                    </BCardBody>\r\n                </BCard>\r\n            </BCol>\r\n            <BCol lg=\"6\">\r\n                <BCard no-body>\r\n                    <BCardHeader>Iraq Map</BCardHeader>\r\n\r\n                    <BCardBody>\r\n                        <div id=\"chartDiv4\" style=\"height: 365px\"></div>\r\n                    </BCardBody>\r\n                </BCard>\r\n            </BCol>\r\n        </BRow>\r\n\r\n        <BRow>\r\n            <BCol lg=\"6\">\r\n                <BCard no-body>\r\n                    <BCardHeader>Italy Map</BCardHeader>\r\n                    <BCardBody>\r\n                        <div id=\"chartDiv5\" style=\"height: 365px\"></div>\r\n                    </BCardBody>\r\n                </BCard>\r\n            </BCol>\r\n            <BCol lg=\"6\">\r\n                <BCard no-body>\r\n                    <BCardHeader>Russia Map</BCardHeader>\r\n                    <BCardBody>\r\n                        <div id=\"chartDiv6\" style=\"height: 365px\"></div>\r\n                    </BCardBody>\r\n                </BCard>\r\n            </BCol>\r\n        </BRow>\r\n        <BRow>\r\n            <BCol lg=\"6\">\r\n                <BCard no-body>\r\n                    <BCardHeader>Spain Map</BCardHeader>\r\n                    <BCardBody>\r\n                        <div id=\"chartDiv7\" style=\"height: 365px\"></div>\r\n                    </BCardBody>\r\n                </BCard>\r\n            </BCol>\r\n            <BCol lg=\"6\">\r\n                <BCard no-body>\r\n                    <BCardHeader>us-aea-en Map</BCardHeader>\r\n                    <BCardBody>\r\n                        <div id=\"chartDiv8\" style=\"height: 365px\"></div>\r\n                    </BCardBody>\r\n                </BCard>\r\n            </BCol>\r\n        </BRow>\r\n    </Layout>\r\n</template>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}