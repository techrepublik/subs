{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport Dropzone from \"dropzone\";\nimport awsEndpoint from '../services/urlsigner';\nexport default {\n  props: {\n    id: {\n      type: String,\n      required: true,\n      default: 'dropzone'\n    },\n    options: {\n      type: Object,\n      required: true\n    },\n    includeStyling: {\n      type: Boolean,\n      default: true,\n      required: false\n    },\n    awss3: {\n      type: Object,\n      required: false,\n      default: null\n    },\n    destroyDropzone: {\n      type: Boolean,\n      default: true,\n      required: false\n    },\n    duplicateCheck: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    useCustomSlot: {\n      type: Boolean,\n      default: false,\n      required: false\n    }\n  },\n  emits: ['vdropzone-thumbnail', 'vdropzone-duplicate-file', 'vdropzone-file-added', 'vdropzone-files-added', 'vdropzone-removed-file', 'vdropzone-success', 'vdropzone-error', 'vdropzone-s3-upload-success', 'vdropzone-s3-upload-error', 'vdropzone-success-multiple', 'vdropzone-error-multiple', 'vdropzone-sending', 'vdropzone-sending-multiple', 'vdropzone-complete', 'vdropzone-complete-multiple', 'vdropzone-canceled', 'vdropzone-canceled-multiple', 'vdropzone-max-files-reached', 'vdropzone-max-files-exceeded', 'vdropzone-processing', 'vdropzone-processing-multiple', 'vdropzone-upload-progress', 'vdropzone-total-upload-progress', 'vdropzone-reset', 'vdropzone-queue-complete', 'vdropzone-drop', 'vdropzone-drag-start', 'vdropzone-drag-end', 'vdropzone-drag-enter', 'vdropzone-drag-over', 'vdropzone-drag-leave', 'vdropzone-mounted', 'vdropzone-file-added-manually'],\n  data() {\n    return {\n      aws: null,\n      isS3: false,\n      isS3OverridesServerPropagation: false,\n      wasQueueAutoProcess: true,\n      files: [],\n      dropzoneSettings: {\n        thumbnailWidth: 200,\n        thumbnailHeight: 200\n      }\n    };\n  },\n  watch: {\n    options: {\n      handler() {\n        this.updateSettings();\n      },\n      deep: true\n    },\n    awss3: {\n      handler() {\n        this.updateAWSSettings();\n      },\n      deep: true\n    }\n  },\n  beforeMount() {\n    this.updateSettings();\n    this.updateAWSSettings();\n  },\n  mounted() {\n    if (this.$isServer && this.hasBeenMounted) {\n      return;\n    }\n    this.hasBeenMounted = true;\n    this.dropzone = new Dropzone(this.$refs.dropzoneElement, this.dropzoneSettings);\n    this.dropzone.on('thumbnail', (file, dataUrl) => {\n      this.$emit('vdropzone-thumbnail', file, dataUrl);\n    });\n    this.dropzone.on('addedfile', file => {\n      if (this.duplicateCheck && this.dropzone.getQueuedFiles().length) {\n        this.getQueuedFiles().forEach(existingFile => {\n          if (existingFile.name === file.name && existingFile.size === file.size && existingFile.lastModifiedDate.toString() === file.lastModifiedDate.toString() && existingFile.dataUrl === file.dataUrl) {\n            this.removeFile(file);\n            this.$emit('vdropzone-duplicate-file', file);\n          }\n        });\n      }\n      this.$emit('vdropzone-file-added', file);\n      if (this.isS3 && this.wasQueueAutoProcess && !file.manuallyAdded) {\n        this.getSignedAndUploadToS3(file);\n      }\n    });\n    this.dropzone.on('addedfiles', files => {\n      this.$emit('vdropzone-files-added', files);\n    });\n    this.dropzone.on('removedfile', file => {\n      this.$emit('vdropzone-removed-file', file);\n      if (file.manuallyAdded && this.dropzone.options.maxFiles !== null) this.dropzone.options.maxFiles++;\n    });\n    this.dropzone.on('success', (file, response) => {\n      this.$emit('vdropzone-success', file, response);\n      if (this.isS3) {\n        if (this.isS3OverridesServerPropagation) {\n          let xmlResponse = new window.DOMParser().parseFromString(response, 'text/xml');\n          let s3ObjectLocation = xmlResponse.firstChild.children[0].innerHTML;\n          this.$emit('vdropzone-s3-upload-success', s3ObjectLocation);\n        }\n        if (this.wasQueueAutoProcess) {\n          this.setOption('autoProcessQueue', false);\n        }\n      }\n    });\n    this.dropzone.on('successmultiple', (file, response) => {\n      this.$emit('vdropzone-success-multiple', file, response);\n    });\n    this.dropzone.on('error', (file, message, xhr) => {\n      this.$emit('vdropzone-error', file, message, xhr);\n      if (this.isS3) this.$emit('vdropzone-s3-upload-error');\n    });\n    this.dropzone.on('errormultiple', (files, message, xhr) => {\n      this.$emit('vdropzone-error-multiple', files, message, xhr);\n    });\n    this.dropzone.on('sending', (file, xhr, formData) => {\n      if (this.isS3) {\n        if (this.isS3OverridesServerPropagation) {\n          let signature = file.s3Signature;\n          Object.keys(signature).forEach(function (key) {\n            formData.append(key, signature[key]);\n          });\n        } else {\n          formData.append('s3ObjectLocation', file.s3ObjectLocation);\n        }\n      }\n      this.$emit('vdropzone-sending', file, xhr, formData);\n    });\n    this.dropzone.on('sendingmultiple', (file, xhr, formData) => {\n      this.$emit('vdropzone-sending-multiple', file, xhr, formData);\n    });\n    this.dropzone.on('complete', file => {\n      this.$emit('vdropzone-complete', file);\n    });\n    this.dropzone.on('completemultiple', files => {\n      this.$emit('vdropzone-complete-multiple', files);\n    });\n    this.dropzone.on('canceled', file => {\n      this.$emit('vdropzone-canceled', file);\n    });\n    this.dropzone.on('canceledmultiple', files => {\n      this.$emit('vdropzone-canceled-multiple', files);\n    });\n    this.dropzone.on('maxfilesreached', files => {\n      this.$emit('vdropzone-max-files-reached', files);\n    });\n    this.dropzone.on('maxfilesexceeded', file => {\n      this.$emit('vdropzone-max-files-exceeded', file);\n    });\n    this.dropzone.on('processing', file => {\n      this.$emit('vdropzone-processing', file);\n    });\n    this.dropzone.on('processingmultiple', files => {\n      this.$emit('vdropzone-processing-multiple', files);\n    });\n    this.dropzone.on('uploadprogress', (file, progress, bytesSent) => {\n      this.$emit('vdropzone-upload-progress', file, progress, bytesSent);\n    });\n    this.dropzone.on('totaluploadprogress', (totaluploadprogress, totalBytes, totalBytesSent) => {\n      this.$emit('vdropzone-total-upload-progress', totaluploadprogress, totalBytes, totalBytesSent);\n    });\n    this.dropzone.on('reset', () => {\n      this.$emit('vdropzone-reset');\n    });\n    this.dropzone.on('queuecomplete', () => {\n      this.$emit('vdropzone-queue-complete');\n    });\n    this.dropzone.on('drop', event => {\n      this.$emit('vdropzone-drop', event);\n    });\n    this.dropzone.on('dragstart', event => {\n      this.$emit('vdropzone-drag-start', event);\n    });\n    this.dropzone.on('dragend', event => {\n      this.$emit('vdropzone-drag-end', event);\n    });\n    this.dropzone.on('dragenter', event => {\n      this.$emit('vdropzone-drag-enter', event);\n    });\n    this.dropzone.on('dragover', event => {\n      this.$emit('vdropzone-drag-over', event);\n    });\n    this.dropzone.on('dragleave', event => {\n      this.$emit('vdropzone-drag-leave', event);\n    });\n    this.$emit('vdropzone-mounted');\n  },\n  beforeUnmount() {\n    if (this.destroyDropzone) {\n      this.dropzone.destroy();\n    }\n  },\n  methods: {\n    updateAWSSettings() {\n      if (this.awss3 !== null) {\n        this.aws = {\n          ...this.awss3\n        };\n        this.dropzoneSettings['autoProcessQueue'] = false;\n        this.isS3 = true;\n        this.isS3OverridesServerPropagation = this.aws.sendFileToServer === false;\n        if (this.options.autoProcessQueue !== undefined) {\n          this.wasQueueAutoProcess = this.options.autoProcessQueue;\n        }\n        if (this.isS3OverridesServerPropagation) {\n          this.dropzoneSettings['url'] = files => files[0].s3Url;\n        }\n      }\n    },\n    updateSettings() {\n      this.dropzoneSettings = Object.assign(this.dropzoneSettings, this.options);\n    },\n    manuallyAddFile: function (file, fileUrl) {\n      file.manuallyAdded = true;\n      this.dropzone.emit('addedfile', file);\n      let containsImageFileType = false;\n      if (fileUrl.indexOf('.svg') > -1 || fileUrl.indexOf('.png') > -1 || fileUrl.indexOf('.jpg') > -1 || fileUrl.indexOf('.jpeg') > -1 || fileUrl.indexOf('.gif') > -1 || fileUrl.indexOf('.webp') > -1) containsImageFileType = true;\n      if (this.dropzone.options.createImageThumbnails && containsImageFileType && file.size <= this.dropzone.options.maxThumbnailFilesize * 1024 * 1024) {\n        fileUrl && this.dropzone.emit('thumbnail', file, fileUrl);\n        let thumbnails = file.previewElement.querySelectorAll('[data-dz-thumbnail]');\n        for (let i = 0; i < thumbnails.length; i++) {\n          thumbnails[i].style.width = this.dropzoneSettings.thumbnailWidth + 'px';\n          thumbnails[i].style.height = this.dropzoneSettings.thumbnailHeight + 'px';\n          thumbnails[i].style['object-fit'] = 'contain';\n        }\n      }\n      this.dropzone.emit('complete', file);\n      if (this.dropzone.options.maxFiles) this.dropzone.options.maxFiles--;\n      this.dropzone.files.push(file);\n      this.$emit('vdropzone-file-added-manually', file);\n    },\n    setOption: function (option, value) {\n      this.dropzone.options[option] = value;\n    },\n    removeAllFiles: function (bool) {\n      this.dropzone.removeAllFiles(bool);\n    },\n    processQueue: function () {\n      let dropzoneEle = this.dropzone;\n      if (this.isS3 && !this.wasQueueAutoProcess) {\n        this.getQueuedFiles().forEach(file => {\n          this.getSignedAndUploadToS3(file);\n        });\n      } else {\n        this.dropzone.processQueue();\n      }\n      this.dropzone.on('success', function () {\n        dropzoneEle.options.autoProcessQueue = true;\n      });\n      this.dropzone.on('queuecomplete', function () {\n        dropzoneEle.options.autoProcessQueue = false;\n      });\n    },\n    init: function () {\n      return this.dropzone.init();\n    },\n    destroy: function () {\n      return this.dropzone.destroy();\n    },\n    updateTotalUploadProgress: function () {\n      return this.dropzone.updateTotalUploadProgress();\n    },\n    getFallbackForm: function () {\n      return this.dropzone.getFallbackForm();\n    },\n    getExistingFallback: function () {\n      return this.dropzone.getExistingFallback();\n    },\n    setupEventListeners: function () {\n      return this.dropzone.setupEventListeners();\n    },\n    removeEventListeners: function () {\n      return this.dropzone.removeEventListeners();\n    },\n    disable: function () {\n      return this.dropzone.disable();\n    },\n    enable: function () {\n      return this.dropzone.enable();\n    },\n    filesize: function (size) {\n      return this.dropzone.filesize(size);\n    },\n    accept: function (file, done) {\n      return this.dropzone.accept(file, done);\n    },\n    addFile: function (file) {\n      return this.dropzone.addFile(file);\n    },\n    removeFile: function (file) {\n      this.dropzone.removeFile(file);\n    },\n    getAcceptedFiles: function () {\n      return this.dropzone.getAcceptedFiles();\n    },\n    getRejectedFiles: function () {\n      return this.dropzone.getRejectedFiles();\n    },\n    getFilesWithStatus: function () {\n      return this.dropzone.getFilesWithStatus();\n    },\n    getQueuedFiles: function () {\n      return this.dropzone.getQueuedFiles();\n    },\n    getUploadingFiles: function () {\n      return this.dropzone.getUploadingFiles();\n    },\n    getAddedFiles: function () {\n      return this.dropzone.getAddedFiles();\n    },\n    getActiveFiles: function () {\n      return this.dropzone.getActiveFiles();\n    },\n    getSignedAndUploadToS3(file) {\n      let promise = awsEndpoint.sendFile(file, this.aws, this.isS3OverridesServerPropagation);\n      if (!this.isS3OverridesServerPropagation) {\n        promise.then(response => {\n          if (response.success) {\n            file.s3ObjectLocation = response.message;\n            setTimeout(() => this.dropzone.processFile(file));\n            this.$emit('vdropzone-s3-upload-success', response.message);\n          } else {\n            if ('undefined' !== typeof response.message) {\n              this.$emit('vdropzone-s3-upload-error', response.message);\n            } else {\n              this.$emit('vdropzone-s3-upload-error', 'Network Error : Could not send request to AWS. (Maybe CORS error)');\n            }\n          }\n        });\n      } else {\n        promise.then(() => {\n          setTimeout(() => this.dropzone.processFile(file));\n        });\n      }\n      promise.catch(error => {\n        alert(error);\n      });\n    },\n    setAWSSigningURL(location) {\n      if (this.isS3 && this.aws) {\n        this.aws.signingURL = location;\n      }\n    }\n  }\n};","map":{"version":3,"names":["Dropzone","awsEndpoint","props","id","type","String","required","default","options","Object","includeStyling","Boolean","awss3","destroyDropzone","duplicateCheck","useCustomSlot","emits","data","aws","isS3","isS3OverridesServerPropagation","wasQueueAutoProcess","files","dropzoneSettings","thumbnailWidth","thumbnailHeight","watch","handler","updateSettings","deep","updateAWSSettings","beforeMount","mounted","$isServer","hasBeenMounted","dropzone","$refs","dropzoneElement","on","file","dataUrl","$emit","getQueuedFiles","length","forEach","existingFile","name","size","lastModifiedDate","toString","removeFile","manuallyAdded","getSignedAndUploadToS3","maxFiles","response","xmlResponse","window","DOMParser","parseFromString","s3ObjectLocation","firstChild","children","innerHTML","setOption","message","xhr","formData","signature","s3Signature","keys","key","append","progress","bytesSent","totaluploadprogress","totalBytes","totalBytesSent","event","beforeUnmount","destroy","methods","sendFileToServer","autoProcessQueue","undefined","s3Url","assign","manuallyAddFile","fileUrl","emit","containsImageFileType","indexOf","createImageThumbnails","maxThumbnailFilesize","thumbnails","previewElement","querySelectorAll","i","style","width","height","push","option","value","removeAllFiles","bool","processQueue","dropzoneEle","init","updateTotalUploadProgress","getFallbackForm","getExistingFallback","setupEventListeners","removeEventListeners","disable","enable","filesize","accept","done","addFile","getAcceptedFiles","getRejectedFiles","getFilesWithStatus","getUploadingFiles","getAddedFiles","getActiveFiles","promise","sendFile","then","success","setTimeout","processFile","catch","error","alert","setAWSSigningURL","location","signingURL"],"sources":["/Users/admin/Desktop/techrepublik/pro/subs/vue_subs/node_modules/dropzone-vue3/src/components/vue-dropzone.vue"],"sourcesContent":["<template>\n  <div\n      :id=\"id\"\n      ref=\"dropzoneElement\"\n      :class=\"{ 'vue-dropzone dropzone': includeStyling }\"\n  >\n    <div\n        v-if=\"useCustomSlot\"\n        class=\"dz-message\"\n    >\n      <slot>Drop files here to upload</slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Dropzone from \"dropzone\"\nimport awsEndpoint from '../services/urlsigner'\n\nexport default {\n  props: {\n    id: {\n      type: String,\n      required: true,\n      default: 'dropzone'\n    },\n    options: {\n      type: Object,\n      required: true\n    },\n    includeStyling: {\n      type: Boolean,\n      default: true,\n      required: false\n    },\n    awss3: {\n      type: Object,\n      required: false,\n      default: null\n    },\n    destroyDropzone: {\n      type: Boolean,\n      default: true,\n      required: false\n    },\n    duplicateCheck: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    useCustomSlot: {\n      type: Boolean,\n      default: false,\n      required: false\n    }\n  },\n  emits: [\n    'vdropzone-thumbnail',\n    'vdropzone-duplicate-file',\n    'vdropzone-file-added',\n    'vdropzone-files-added',\n    'vdropzone-removed-file',\n    'vdropzone-success',\n    'vdropzone-error',\n    'vdropzone-s3-upload-success',\n    'vdropzone-s3-upload-error',\n    'vdropzone-success-multiple',\n    'vdropzone-error-multiple',\n    'vdropzone-sending',\n    'vdropzone-sending-multiple',\n    'vdropzone-complete',\n    'vdropzone-complete-multiple',\n    'vdropzone-canceled',\n    'vdropzone-canceled-multiple',\n    'vdropzone-max-files-reached',\n    'vdropzone-max-files-exceeded',\n    'vdropzone-processing',\n    'vdropzone-processing-multiple',\n    'vdropzone-upload-progress',\n    'vdropzone-total-upload-progress',\n    'vdropzone-reset',\n    'vdropzone-queue-complete',\n    'vdropzone-drop',\n    'vdropzone-drag-start',\n    'vdropzone-drag-end',\n    'vdropzone-drag-enter',\n    'vdropzone-drag-over',\n    'vdropzone-drag-leave',\n    'vdropzone-mounted',\n    'vdropzone-file-added-manually',\n  ],\n  data () {\n    return {\n      aws: null,\n      isS3: false,\n      isS3OverridesServerPropagation: false,\n      wasQueueAutoProcess: true,\n      files: [],\n      dropzoneSettings: {\n        thumbnailWidth: 200,\n        thumbnailHeight: 200\n      }\n    }\n  },\n  watch: {\n    options: {\n      handler () {\n        this.updateSettings()\n      },\n      deep: true,\n    },\n    awss3: {\n      handler () {\n        this.updateAWSSettings()\n      },\n      deep: true,\n    }\n  },\n  beforeMount () {\n    this.updateSettings()\n    this.updateAWSSettings()\n  },\n  mounted () {\n    if (this.$isServer && this.hasBeenMounted) {\n      return\n    }\n    this.hasBeenMounted = true\n\n    this.dropzone = new Dropzone(\n        this.$refs.dropzoneElement,\n        this.dropzoneSettings\n    )\n\n    this.dropzone.on('thumbnail', (file, dataUrl) => {\n      this.$emit('vdropzone-thumbnail', file, dataUrl)\n    })\n\n    this.dropzone.on('addedfile', (file) => {\n      if (this.duplicateCheck && this.dropzone.getQueuedFiles().length) {\n        this.getQueuedFiles().forEach(existingFile => {\n          if (\n              existingFile.name === file.name &&\n              existingFile.size === file.size &&\n              existingFile.lastModifiedDate.toString() === file.lastModifiedDate.toString() &&\n              existingFile.dataUrl === file.dataUrl\n          ) {\n            this.removeFile(file)\n            this.$emit('vdropzone-duplicate-file', file)\n          }\n        })\n      }\n\n      this.$emit('vdropzone-file-added', file)\n\n      if (this.isS3 && this.wasQueueAutoProcess && !file.manuallyAdded) {\n        this.getSignedAndUploadToS3(file)\n      }\n    })\n\n    this.dropzone.on('addedfiles', (files) => {\n      this.$emit('vdropzone-files-added', files)\n    })\n\n    this.dropzone.on('removedfile', (file) => {\n      this.$emit('vdropzone-removed-file', file)\n      if (file.manuallyAdded && this.dropzone.options.maxFiles !== null)\n        this.dropzone.options.maxFiles++\n    })\n\n    this.dropzone.on('success', (file, response) => {\n      this.$emit('vdropzone-success', file, response)\n      if (this.isS3) {\n        if (this.isS3OverridesServerPropagation) {\n          let xmlResponse = new window.DOMParser().parseFromString(\n              response,\n              'text/xml'\n          )\n          let s3ObjectLocation = xmlResponse.firstChild.children[0].innerHTML\n          this.$emit('vdropzone-s3-upload-success', s3ObjectLocation)\n        }\n        if (this.wasQueueAutoProcess) {\n          this.setOption('autoProcessQueue', false)\n        }\n      }\n    })\n\n    this.dropzone.on('successmultiple', (file, response) => {\n      this.$emit('vdropzone-success-multiple', file, response)\n    })\n\n    this.dropzone.on('error', (file, message, xhr) => {\n      this.$emit('vdropzone-error', file, message, xhr)\n      if (this.isS3) this.$emit('vdropzone-s3-upload-error')\n    })\n\n    this.dropzone.on('errormultiple', (files, message, xhr) => {\n      this.$emit('vdropzone-error-multiple', files, message, xhr)\n    })\n\n    this.dropzone.on('sending', (file, xhr, formData) => {\n      if (this.isS3) {\n        if (this.isS3OverridesServerPropagation) {\n          let signature = file.s3Signature\n          Object.keys(signature).forEach(function (key) {\n            formData.append(key, signature[key])\n          })\n        } else {\n          formData.append('s3ObjectLocation', file.s3ObjectLocation)\n        }\n      }\n      this.$emit('vdropzone-sending', file, xhr, formData)\n    })\n\n    this.dropzone.on('sendingmultiple', (file, xhr, formData) => {\n      this.$emit('vdropzone-sending-multiple', file, xhr, formData)\n    })\n\n    this.dropzone.on('complete', (file) => {\n      this.$emit('vdropzone-complete', file)\n    })\n\n    this.dropzone.on('completemultiple', (files) => {\n      this.$emit('vdropzone-complete-multiple', files)\n    })\n\n    this.dropzone.on('canceled', (file) => {\n      this.$emit('vdropzone-canceled', file)\n    })\n\n    this.dropzone.on('canceledmultiple', (files) => {\n      this.$emit('vdropzone-canceled-multiple', files)\n    })\n\n    this.dropzone.on('maxfilesreached', (files) => {\n      this.$emit('vdropzone-max-files-reached', files)\n    })\n\n    this.dropzone.on('maxfilesexceeded', (file) => {\n      this.$emit('vdropzone-max-files-exceeded', file)\n    })\n\n    this.dropzone.on('processing', (file) => {\n      this.$emit('vdropzone-processing', file)\n    })\n\n    this.dropzone.on('processingmultiple', (files) => {\n      this.$emit('vdropzone-processing-multiple', files)\n    })\n\n    this.dropzone.on('uploadprogress', (file, progress, bytesSent) => {\n      this.$emit('vdropzone-upload-progress', file, progress, bytesSent)\n    })\n\n    this.dropzone.on('totaluploadprogress', (totaluploadprogress, totalBytes, totalBytesSent) => {\n      this.$emit(\n          'vdropzone-total-upload-progress',\n          totaluploadprogress,\n          totalBytes,\n          totalBytesSent\n      )\n    })\n\n    this.dropzone.on('reset', () => {\n      this.$emit('vdropzone-reset')\n    })\n\n    this.dropzone.on('queuecomplete', () => {\n      this.$emit('vdropzone-queue-complete')\n    })\n\n    this.dropzone.on('drop', (event) => {\n      this.$emit('vdropzone-drop', event)\n    })\n\n    this.dropzone.on('dragstart', (event) => {\n      this.$emit('vdropzone-drag-start', event)\n    })\n\n    this.dropzone.on('dragend', (event) => {\n      this.$emit('vdropzone-drag-end', event)\n    })\n\n    this.dropzone.on('dragenter', (event) => {\n      this.$emit('vdropzone-drag-enter', event)\n    })\n\n    this.dropzone.on('dragover', (event) => {\n      this.$emit('vdropzone-drag-over', event)\n    })\n\n    this.dropzone.on('dragleave', (event) => {\n      this.$emit('vdropzone-drag-leave', event)\n    })\n\n    this.$emit('vdropzone-mounted')\n  },\n  beforeUnmount () {\n    if (this.destroyDropzone) {\n      this.dropzone.destroy()\n    }\n  },\n  methods: {\n    updateAWSSettings () {\n      if (this.awss3 !== null) {\n        this.aws = {...this.awss3}\n        this.dropzoneSettings['autoProcessQueue'] = false\n        this.isS3 = true\n        this.isS3OverridesServerPropagation = this.aws.sendFileToServer === false\n        if (this.options.autoProcessQueue !== undefined) {\n          this.wasQueueAutoProcess = this.options.autoProcessQueue\n        }\n\n        if (this.isS3OverridesServerPropagation) {\n          this.dropzoneSettings['url'] = files => files[0].s3Url\n        }\n      }\n    },\n    updateSettings () {\n      this.dropzoneSettings = Object.assign(this.dropzoneSettings, this.options)\n    },\n    manuallyAddFile: function (file, fileUrl) {\n      file.manuallyAdded = true\n      this.dropzone.emit('addedfile', file)\n      let containsImageFileType = false\n      if (\n          fileUrl.indexOf('.svg') > -1 ||\n          fileUrl.indexOf('.png') > -1 ||\n          fileUrl.indexOf('.jpg') > -1 ||\n          fileUrl.indexOf('.jpeg') > -1 ||\n          fileUrl.indexOf('.gif') > -1 ||\n          fileUrl.indexOf('.webp') > -1\n      )\n        containsImageFileType = true\n      if (\n          this.dropzone.options.createImageThumbnails &&\n          containsImageFileType &&\n          file.size <= this.dropzone.options.maxThumbnailFilesize * 1024 * 1024\n      ) {\n        fileUrl && this.dropzone.emit('thumbnail', file, fileUrl)\n\n        let thumbnails = file.previewElement.querySelectorAll(\n            '[data-dz-thumbnail]'\n        )\n        for (let i = 0; i < thumbnails.length; i++) {\n          thumbnails[i].style.width =\n              this.dropzoneSettings.thumbnailWidth + 'px'\n          thumbnails[i].style.height =\n              this.dropzoneSettings.thumbnailHeight + 'px'\n          thumbnails[i].style['object-fit'] = 'contain'\n        }\n      }\n      this.dropzone.emit('complete', file)\n      if (this.dropzone.options.maxFiles) this.dropzone.options.maxFiles--\n      this.dropzone.files.push(file)\n      this.$emit('vdropzone-file-added-manually', file)\n    },\n    setOption: function (option, value) {\n      this.dropzone.options[option] = value\n    },\n    removeAllFiles: function (bool) {\n      this.dropzone.removeAllFiles(bool)\n    },\n    processQueue: function () {\n      let dropzoneEle = this.dropzone\n      if (this.isS3 && !this.wasQueueAutoProcess) {\n        this.getQueuedFiles().forEach(file => {\n          this.getSignedAndUploadToS3(file)\n        })\n      } else {\n        this.dropzone.processQueue()\n      }\n      this.dropzone.on('success', function () {\n        dropzoneEle.options.autoProcessQueue = true\n      })\n      this.dropzone.on('queuecomplete', function () {\n        dropzoneEle.options.autoProcessQueue = false\n      })\n    },\n    init: function () {\n      return this.dropzone.init()\n    },\n    destroy: function () {\n      return this.dropzone.destroy()\n    },\n    updateTotalUploadProgress: function () {\n      return this.dropzone.updateTotalUploadProgress()\n    },\n    getFallbackForm: function () {\n      return this.dropzone.getFallbackForm()\n    },\n    getExistingFallback: function () {\n      return this.dropzone.getExistingFallback()\n    },\n    setupEventListeners: function () {\n      return this.dropzone.setupEventListeners()\n    },\n    removeEventListeners: function () {\n      return this.dropzone.removeEventListeners()\n    },\n    disable: function () {\n      return this.dropzone.disable()\n    },\n    enable: function () {\n      return this.dropzone.enable()\n    },\n    filesize: function (size) {\n      return this.dropzone.filesize(size)\n    },\n    accept: function (file, done) {\n      return this.dropzone.accept(file, done)\n    },\n    addFile: function (file) {\n      return this.dropzone.addFile(file)\n    },\n    removeFile: function (file) {\n      this.dropzone.removeFile(file)\n    },\n    getAcceptedFiles: function () {\n      return this.dropzone.getAcceptedFiles()\n    },\n    getRejectedFiles: function () {\n      return this.dropzone.getRejectedFiles()\n    },\n    getFilesWithStatus: function () {\n      return this.dropzone.getFilesWithStatus()\n    },\n    getQueuedFiles: function () {\n      return this.dropzone.getQueuedFiles()\n    },\n    getUploadingFiles: function () {\n      return this.dropzone.getUploadingFiles()\n    },\n    getAddedFiles: function () {\n      return this.dropzone.getAddedFiles()\n    },\n    getActiveFiles: function () {\n      return this.dropzone.getActiveFiles()\n    },\n    getSignedAndUploadToS3 (file) {\n      let promise = awsEndpoint.sendFile(\n          file,\n          this.aws,\n          this.isS3OverridesServerPropagation\n      )\n      if (!this.isS3OverridesServerPropagation) {\n        promise.then(response => {\n          if (response.success) {\n            file.s3ObjectLocation = response.message\n            setTimeout(() => this.dropzone.processFile(file))\n            this.$emit('vdropzone-s3-upload-success', response.message)\n          } else {\n            if ('undefined' !== typeof response.message) {\n              this.$emit('vdropzone-s3-upload-error', response.message)\n            } else {\n              this.$emit(\n                  'vdropzone-s3-upload-error',\n                  'Network Error : Could not send request to AWS. (Maybe CORS error)'\n              )\n            }\n          }\n        })\n      } else {\n        promise.then(() => {\n          setTimeout(() => this.dropzone.processFile(file))\n        })\n      }\n      promise.catch(error => {\n        alert(error)\n      })\n    },\n    setAWSSigningURL (location) {\n      if (this.isS3 && this.aws) {\n        this.aws.signingURL = location\n      }\n    }\n  }\n}\n</script>\n\n<style>\n.vue-dropzone {\n  border: 2px solid #e5e5e5;\n  font-family: \"Arial\", sans-serif;\n  letter-spacing: 0.2px;\n  color: #777;\n  transition: 0.2s linear;\n}\n\n.vue-dropzone:hover {\n  background-color: #f6f6f6;\n}\n\n.vue-dropzone > i {\n  color: #ccc;\n}\n\n.vue-dropzone > .dz-preview .dz-image {\n  border-radius: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.vue-dropzone > .dz-preview .dz-image img:not([src]) {\n  width: 200px;\n  height: 200px;\n}\n\n.vue-dropzone > .dz-preview .dz-image:hover img {\n  transform: none;\n  -webkit-filter: none;\n}\n\n.vue-dropzone > .dz-preview .dz-details {\n  bottom: 0;\n  top: 0;\n  color: white;\n  background-color: rgba(33, 150, 243, 0.8);\n  transition: opacity 0.2s linear;\n  text-align: left;\n}\n\n.vue-dropzone > .dz-preview .dz-details .dz-filename {\n  overflow: hidden;\n}\n\n.vue-dropzone > .dz-preview .dz-details .dz-filename span,\n.vue-dropzone > .dz-preview .dz-details .dz-size span {\n  background-color: transparent;\n}\n\n.vue-dropzone > .dz-preview .dz-details .dz-filename:not(:hover) span {\n  border: none;\n}\n\n.vue-dropzone > .dz-preview .dz-details .dz-filename:hover span {\n  background-color: transparent;\n  border: none;\n}\n\n.vue-dropzone > .dz-preview .dz-progress .dz-upload {\n  background: #cccccc;\n}\n\n.vue-dropzone > .dz-preview .dz-remove {\n  position: absolute;\n  z-index: 30;\n  color: white;\n  margin-left: 15px;\n  padding: 10px;\n  top: inherit;\n  bottom: 15px;\n  border: 2px white solid;\n  text-decoration: none;\n  text-transform: uppercase;\n  font-size: 0.8rem;\n  font-weight: 800;\n  letter-spacing: 1.1px;\n  opacity: 0;\n}\n\n.vue-dropzone > .dz-preview:hover .dz-remove {\n  opacity: 1;\n}\n\n.vue-dropzone > .dz-preview .dz-success-mark svg,\n.vue-dropzone > .dz-preview .dz-error-mark svg {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.vue-dropzone > .dz-preview .dz-error-message {\n  margin-left: auto;\n  margin-right: auto;\n  left: 0;\n  width: 100%;\n  text-align: center;\n}\n\n.vue-dropzone > .dz-preview .dz-error-message:after {\n  display: none;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}