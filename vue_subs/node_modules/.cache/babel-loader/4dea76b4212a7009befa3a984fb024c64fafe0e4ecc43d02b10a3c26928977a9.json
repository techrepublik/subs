{"ast":null,"code":"/**\r\n * Zoom out button functionality.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Button } from \"./Button\";\nimport { Sprite } from \"../Sprite\";\nimport { registry } from \"../Registry\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport * as $path from \"../rendering/Path\";\nimport * as $type from \"../../core/utils/Type\";\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a zoom out button.\r\n *\r\n * @see {@link ICloseButtonEvents} for a list of available events\r\n * @see {@link ICloseButtonAdapters} for a list of available Adapters\r\n */\nvar CloseButton = /** @class */function (_super) {\n  __extends(CloseButton, _super);\n  /**\r\n   * Constructor\r\n   */\n  function CloseButton() {\n    var _this =\n    // Init\n    _super.call(this) || this;\n    _this.className = \"CloseButton\";\n    _this.padding(8, 8, 8, 8);\n    _this.showSystemTooltip = true;\n    _this.width = 30;\n    _this.height = 30;\n    var interfaceColors = new InterfaceColorSet();\n    _this.cursorOverStyle = MouseCursorStyle.pointer;\n    var background = _this.background;\n    background.cornerRadius(20, 20, 20, 20);\n    var bgc = interfaceColors.getFor(\"background\");\n    background.fill = bgc;\n    background.stroke = interfaceColors.getFor(\"primaryButton\");\n    background.strokeOpacity = 1;\n    background.strokeWidth = 1;\n    var downColor = interfaceColors.getFor(\"primaryButtonActive\");\n    var bhs = background.states.getKey(\"hover\");\n    bhs.properties.strokeWidth = 3;\n    bhs.properties.fill = bgc;\n    var bds = background.states.getKey(\"down\");\n    bds.properties.stroke = downColor;\n    bds.properties.fill = bgc;\n    // Create an icon\n    var icon = new Sprite();\n    icon.element = _this.paper.add(\"path\");\n    icon.stroke = background.stroke;\n    _this.icon = icon;\n    // Apply theme\n    _this.applyTheme();\n    return _this;\n  }\n  CloseButton.prototype.validate = function () {\n    _super.prototype.validate.call(this);\n    var w = this.pixelWidth / 3;\n    var h = this.pixelHeight / 3;\n    var path = $path.moveTo({\n      x: -w / 2,\n      y: -h / 2\n    });\n    path += $path.lineTo({\n      x: w / 2,\n      y: h / 2\n    });\n    path += $path.moveTo({\n      x: w / 2,\n      y: -h / 2\n    });\n    path += $path.lineTo({\n      x: -w / 2,\n      y: h / 2\n    });\n    this.icon.path = path;\n    this.invalidateLayout();\n  };\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n  CloseButton.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Close\");\n    }\n  };\n  return CloseButton;\n}(Button);\nexport { CloseButton };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"CloseButton\"] = CloseButton;","map":{"version":3,"names":["Button","Sprite","registry","InterfaceColorSet","$path","$type","MouseCursorStyle","CloseButton","_super","__extends","_this","call","className","padding","showSystemTooltip","width","height","interfaceColors","cursorOverStyle","pointer","background","cornerRadius","bgc","getFor","fill","stroke","strokeOpacity","strokeWidth","downColor","bhs","states","getKey","properties","bds","icon","element","paper","add","applyTheme","prototype","validate","w","pixelWidth","h","pixelHeight","path","moveTo","x","y","lineTo","invalidateLayout","applyInternalDefaults","hasValue","readerTitle","language","translate","registeredClasses"],"sources":["../../../../../src/.internal/core/elements/CloseButton.ts"],"sourcesContent":["/**\r\n * Zoom out button functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button, IButtonProperties, IButtonAdapters, IButtonEvents } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { RoundedRectangle } from \"./RoundedRectangle\";\r\nimport { registry } from \"../Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[CloseButton]].\r\n */\r\nexport interface ICloseButtonProperties extends IButtonProperties { }\r\n\r\n/**\r\n * Defines events for [[CloseButton]].\r\n */\r\nexport interface ICloseButtonEvents extends IButtonEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CloseButton]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICloseButtonAdapters extends IButtonAdapters, ICloseButtonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a zoom out button.\r\n *\r\n * @see {@link ICloseButtonEvents} for a list of available events\r\n * @see {@link ICloseButtonAdapters} for a list of available Adapters\r\n */\r\nexport class CloseButton extends Button {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICloseButtonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICloseButtonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICloseButtonEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"CloseButton\";\r\n\r\n\t\tthis.padding(8, 8, 8, 8);\r\n\t\tthis.showSystemTooltip = true;\r\n\r\n\t\tthis.width = 30;\r\n\t\tthis.height = 30;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.cursorOverStyle = MouseCursorStyle.pointer;\r\n\r\n\t\tlet background: RoundedRectangle = this.background;\r\n\t\tbackground.cornerRadius(20, 20, 20, 20);\r\n\r\n\t\tlet bgc = interfaceColors.getFor(\"background\");\r\n\t\tbackground.fill = bgc;\r\n\t\tbackground.stroke = interfaceColors.getFor(\"primaryButton\");\r\n\t\tbackground.strokeOpacity = 1;\r\n\t\tbackground.strokeWidth = 1;\r\n\r\n\t\tlet downColor = interfaceColors.getFor(\"primaryButtonActive\")\r\n\r\n\t\tlet bhs =background.states.getKey(\"hover\");\r\n\t\tbhs.properties.strokeWidth = 3;\r\n\t\tbhs.properties.fill = bgc;\r\n\r\n\t\tlet bds = background.states.getKey(\"down\");\t\t\t\t\r\n\t\tbds.properties.stroke = downColor;\r\n\t\tbds.properties.fill = bgc;\r\n\r\n\t\t// Create an icon\r\n\t\tlet icon: Sprite = new Sprite();\r\n\t\ticon.element = this.paper.add(\"path\");\r\n\t\ticon.stroke = background.stroke;\r\n\r\n\t\tthis.icon = icon;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\r\n\t\tlet w = this.pixelWidth / 3;\r\n\t\tlet h = this.pixelHeight / 3;\r\n\r\n\t\tlet path = $path.moveTo({ x: -w / 2, y: -h / 2 });\r\n\t\tpath += $path.lineTo({ x: w / 2, y: h / 2 });\r\n\t\tpath += $path.moveTo({ x: w / 2, y: -h / 2 });\r\n\t\tpath += $path.lineTo({ x: -w / 2, y: h / 2 });\r\n\t\tthis.icon.path = path;\r\n\t\tthis.invalidateLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Close\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CloseButton\"] = CloseButton;\r\n"],"mappings":"AAAA;;;;AAIA;;;;;;AAMA,SAASA,MAAM,QAA2D,UAAU;AACpF,SAASC,MAAM,QAAQ,WAAW;AAElC,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,iBAAiB,QAAQ,oCAAoC;AACtE,OAAO,KAAKC,KAAK,MAAM,mBAAmB;AAC1C,OAAO,KAAKC,KAAK,MAAM,uBAAuB;AAC9C,SAASC,gBAAgB,QAAQ,8BAA8B;AA2B/D;;;;;;AAOA;;;;;;AAMA,IAAAC,WAAA,0BAAAC,MAAA;EAAiCC,SAAA,CAAAF,WAAA,EAAAC,MAAA;EAiBhC;;;EAGA,SAAAD,YAAA;IAAA,IAAAG,KAAA;IAEC;IACAF,MAAA,CAAAG,IAAA,MAAO;IACPD,KAAI,CAACE,SAAS,GAAG,aAAa;IAE9BF,KAAI,CAACG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACxBH,KAAI,CAACI,iBAAiB,GAAG,IAAI;IAE7BJ,KAAI,CAACK,KAAK,GAAG,EAAE;IACfL,KAAI,CAACM,MAAM,GAAG,EAAE;IAEhB,IAAIC,eAAe,GAAG,IAAId,iBAAiB,EAAE;IAE7CO,KAAI,CAACQ,eAAe,GAAGZ,gBAAgB,CAACa,OAAO;IAE/C,IAAIC,UAAU,GAAqBV,KAAI,CAACU,UAAU;IAClDA,UAAU,CAACC,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAEvC,IAAIC,GAAG,GAAGL,eAAe,CAACM,MAAM,CAAC,YAAY,CAAC;IAC9CH,UAAU,CAACI,IAAI,GAAGF,GAAG;IACrBF,UAAU,CAACK,MAAM,GAAGR,eAAe,CAACM,MAAM,CAAC,eAAe,CAAC;IAC3DH,UAAU,CAACM,aAAa,GAAG,CAAC;IAC5BN,UAAU,CAACO,WAAW,GAAG,CAAC;IAE1B,IAAIC,SAAS,GAAGX,eAAe,CAACM,MAAM,CAAC,qBAAqB,CAAC;IAE7D,IAAIM,GAAG,GAAET,UAAU,CAACU,MAAM,CAACC,MAAM,CAAC,OAAO,CAAC;IAC1CF,GAAG,CAACG,UAAU,CAACL,WAAW,GAAG,CAAC;IAC9BE,GAAG,CAACG,UAAU,CAACR,IAAI,GAAGF,GAAG;IAEzB,IAAIW,GAAG,GAAGb,UAAU,CAACU,MAAM,CAACC,MAAM,CAAC,MAAM,CAAC;IAC1CE,GAAG,CAACD,UAAU,CAACP,MAAM,GAAGG,SAAS;IACjCK,GAAG,CAACD,UAAU,CAACR,IAAI,GAAGF,GAAG;IAEzB;IACA,IAAIY,IAAI,GAAW,IAAIjC,MAAM,EAAE;IAC/BiC,IAAI,CAACC,OAAO,GAAGzB,KAAI,CAAC0B,KAAK,CAACC,GAAG,CAAC,MAAM,CAAC;IACrCH,IAAI,CAACT,MAAM,GAAGL,UAAU,CAACK,MAAM;IAE/Bf,KAAI,CAACwB,IAAI,GAAGA,IAAI;IAEhB;IACAxB,KAAI,CAAC4B,UAAU,EAAE;;EAClB;EAEO/B,WAAA,CAAAgC,SAAA,CAAAC,QAAQ,GAAf;IACChC,MAAA,CAAA+B,SAAA,CAAMC,QAAQ,CAAA7B,IAAA,MAAE;IAEhB,IAAI8B,CAAC,GAAG,IAAI,CAACC,UAAU,GAAG,CAAC;IAC3B,IAAIC,CAAC,GAAG,IAAI,CAACC,WAAW,GAAG,CAAC;IAE5B,IAAIC,IAAI,GAAGzC,KAAK,CAAC0C,MAAM,CAAC;MAAEC,CAAC,EAAE,CAACN,CAAC,GAAG,CAAC;MAAEO,CAAC,EAAE,CAACL,CAAC,GAAG;IAAC,CAAE,CAAC;IACjDE,IAAI,IAAIzC,KAAK,CAAC6C,MAAM,CAAC;MAAEF,CAAC,EAAEN,CAAC,GAAG,CAAC;MAAEO,CAAC,EAAEL,CAAC,GAAG;IAAC,CAAE,CAAC;IAC5CE,IAAI,IAAIzC,KAAK,CAAC0C,MAAM,CAAC;MAAEC,CAAC,EAAEN,CAAC,GAAG,CAAC;MAAEO,CAAC,EAAE,CAACL,CAAC,GAAG;IAAC,CAAE,CAAC;IAC7CE,IAAI,IAAIzC,KAAK,CAAC6C,MAAM,CAAC;MAAEF,CAAC,EAAE,CAACN,CAAC,GAAG,CAAC;MAAEO,CAAC,EAAEL,CAAC,GAAG;IAAC,CAAE,CAAC;IAC7C,IAAI,CAACT,IAAI,CAACW,IAAI,GAAGA,IAAI;IACrB,IAAI,CAACK,gBAAgB,EAAE;EACxB,CAAC;EAED;;;;EAIU3C,WAAA,CAAAgC,SAAA,CAAAY,qBAAqB,GAA/B;IACC3C,MAAA,CAAA+B,SAAA,CAAMY,qBAAqB,CAAAxC,IAAA,MAAE;IAC7B,IAAI,CAACN,KAAK,CAAC+C,QAAQ,CAAC,IAAI,CAACC,WAAW,CAAC,EAAE;MACtC,IAAI,CAACA,WAAW,GAAG,IAAI,CAACC,QAAQ,CAACC,SAAS,CAAC,OAAO,CAAC;;EAErD,CAAC;EAEF,OAAAhD,WAAC;AAAD,CAAC,CA3FgCP,MAAM;;AA6FvC;;;;;;AAMAE,QAAQ,CAACsD,iBAAiB,CAAC,aAAa,CAAC,GAAGjD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}