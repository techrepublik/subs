{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\r\n * Zoom control module\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Container } from \"../../core/Container\";\nimport { Button } from \"../../core/elements/Button\";\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\nimport { keyboard } from \"../../core/utils/Keyboard\";\nimport { getInteraction } from \"../../core/interaction/Interaction\";\nimport { percent } from \"../../core/utils/Percent\";\nimport { registry } from \"../../core/Registry\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a control for zooming the map.\r\n *\r\n * @see {@link IZoomControlEvents} for a list of available events\r\n * @see {@link IZoomControlAdapters} for a list of available Adapters\r\n * @important\r\n */\nvar ZoomControl = /** @class */function (_super) {\n  __extends(ZoomControl, _super);\n  /**\r\n   * Constructor\r\n   */\n  function ZoomControl() {\n    var _this = _super.call(this) || this;\n    /**\r\n     * A target map.\r\n     */\n    _this._chart = new MutableValueDisposer();\n    _this.className = \"ZoomControl\";\n    _this.align = \"right\";\n    _this.valign = \"bottom\";\n    _this.layout = \"vertical\";\n    _this.padding(5, 5, 5, 5);\n    var interfaceColors = new InterfaceColorSet();\n    var plusButton = _this.createChild(Button);\n    plusButton.shouldClone = false;\n    plusButton.label.text = \"+\";\n    //plusButton.fontFamily = \"Verdana\";\n    _this.plusButton = plusButton;\n    var slider = _this.createChild(Container);\n    slider.shouldClone = false;\n    slider.background.fill = interfaceColors.getFor(\"alternativeBackground\");\n    slider.background.fillOpacity = 0.05;\n    slider.background.events.on(\"hit\", _this.handleBackgroundClick, _this, false);\n    slider.events.on(\"sizechanged\", _this.updateThumbSize, _this, false);\n    _this.slider = slider;\n    var thumb = slider.createChild(Button);\n    thumb.shouldClone = false;\n    thumb.padding(0, 0, 0, 0);\n    thumb.draggable = true;\n    thumb.events.on(\"drag\", _this.handleThumbDrag, _this, false);\n    _this.thumb = thumb;\n    var minusButton = _this.createChild(Button);\n    minusButton.shouldClone = false;\n    minusButton.label.text = \"-\";\n    //minusButton.fontFamily = \"Verdana\";\n    _this.minusButton = minusButton;\n    // Set roles\n    _this.thumb.role = \"slider\";\n    _this.thumb.readerLive = \"polite\";\n    // Set reader text\n    _this.thumb.readerTitle = _this.language.translate(\"Use arrow keys to zoom in and out\");\n    _this.minusButton.readerTitle = _this.language.translate(\"Press ENTER to zoom in\");\n    _this.plusButton.readerTitle = _this.language.translate(\"Press ENTER to zoom out\");\n    _this.applyTheme();\n    _this.events.on(\"propertychanged\", function (event) {\n      if (event.property == \"layout\") {\n        _this.fixLayout();\n      }\n    }, undefined, false);\n    _this._disposers.push(_this._chart);\n    _this.fixLayout();\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n  ZoomControl.prototype.fixLayout = function () {\n    var plusButton = this.plusButton;\n    var minusButton = this.minusButton;\n    var thumb = this.thumb;\n    var slider = this.slider;\n    plusButton.x = undefined;\n    plusButton.y = undefined;\n    minusButton.x = undefined;\n    minusButton.y = undefined;\n    thumb.x = undefined;\n    thumb.y = undefined;\n    slider.x = undefined;\n    slider.y = undefined;\n    plusButton.padding(6, 10, 6, 10);\n    minusButton.padding(6, 10, 6, 10);\n    minusButton.label.align = \"center\";\n    minusButton.label.valign = \"middle\";\n    plusButton.label.align = \"center\";\n    plusButton.label.valign = \"middle\";\n    if (this.layout == \"vertical\") {\n      this.width = 40;\n      this.height = undefined;\n      minusButton.width = percent(100);\n      minusButton.height = undefined;\n      thumb.width = percent(100);\n      thumb.height = undefined;\n      plusButton.width = percent(100);\n      plusButton.height = undefined;\n      slider.width = percent(100);\n      minusButton.marginTop = 1;\n      plusButton.marginBottom = 2;\n      slider.height = 0;\n      minusButton.toFront();\n      plusButton.toBack();\n      thumb.minX = 0;\n      thumb.maxX = 0;\n      thumb.minY = 0;\n    } else if (this.layout == \"horizontal\") {\n      this.height = 40;\n      this.width = undefined;\n      minusButton.height = percent(100);\n      minusButton.width = undefined;\n      plusButton.height = percent(100);\n      plusButton.width = undefined;\n      thumb.height = percent(100);\n      thumb.width = undefined;\n      thumb.minX = 0;\n      thumb.minY = 0;\n      thumb.maxY = 0;\n      slider.height = percent(100);\n      slider.width = 0;\n      minusButton.toBack();\n      plusButton.toFront();\n    }\n  };\n  /**\r\n   * Handles zoom operation after clicking on the slider background.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param event  Event\r\n   */\n  ZoomControl.prototype.handleBackgroundClick = function (event) {\n    var sprite = event.target;\n    var y = event.spritePoint.y;\n    var chart = this.chart;\n    var maxPower = Math.log(chart.maxZoomLevel) / Math.LN2;\n    var minPower = Math.log(chart.minZoomLevel) / Math.LN2;\n    var power = (sprite.pixelHeight - y) / sprite.pixelHeight * (minPower + (maxPower - minPower));\n    var zoomLevel = Math.pow(2, power);\n    chart.zoomToGeoPoint(chart.zoomGeoPoint, zoomLevel);\n  };\n  Object.defineProperty(ZoomControl.prototype, \"chart\", {\n    /**\r\n     * @return Map/chart\r\n     */\n    get: function () {\n      return this._chart.get();\n    },\n    /**\r\n     * A main chart/map that this zoom control is for.\r\n     *\r\n     * @param chart  Map/chart\r\n     */\n    set: function (chart) {\n      var _this = this;\n      this._chart.set(chart, new MultiDisposer([chart.events.on(\"maxsizechanged\", this.updateThumbSize, this, false), chart.events.on(\"zoomlevelchanged\", this.updateThumb, this, false), this.minusButton.events.on(\"hit\", function () {\n        chart.zoomOut(chart.zoomGeoPoint);\n      }, chart, false), getInteraction().body.events.on(\"keyup\", function (ev) {\n        if (_this.topParent.hasFocused) {\n          // ENTER is now handled globally\n          if (keyboard.isKey(ev.event, \"plus\")) {\n            chart.zoomIn();\n          } else if (keyboard.isKey(ev.event, \"minus\")) {\n            chart.zoomOut();\n          }\n        }\n      }, chart), this.plusButton.events.on(\"hit\", function () {\n        chart.zoomIn(chart.zoomGeoPoint);\n      }, chart, false)]));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Updates the slider's thumb size based on the available zoom space.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  ZoomControl.prototype.updateThumbSize = function () {\n    var chart = this.chart;\n    if (chart) {\n      var slider = this.slider;\n      var thumb = this.thumb;\n      if (this.layout == \"vertical\") {\n        thumb.minHeight = Math.min(this.slider.pixelHeight, 20);\n        thumb.height = slider.pixelHeight / this.stepCount;\n        thumb.maxY = slider.pixelHeight - thumb.pixelHeight;\n        if (thumb.pixelHeight <= 1) {\n          thumb.visible = false;\n        } else {\n          thumb.visible = true;\n        }\n      } else {\n        thumb.minWidth = Math.min(this.slider.pixelWidth, 20);\n        thumb.width = slider.pixelWidth / this.stepCount;\n        thumb.maxX = slider.pixelWidth - thumb.pixelWidth;\n        if (thumb.pixelWidth <= 1) {\n          thumb.visible = false;\n        } else {\n          thumb.visible = true;\n        }\n      }\n    }\n  };\n  /**\r\n   * Updates thumb according to current zoom position from map.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  ZoomControl.prototype.updateThumb = function () {\n    var slider = this.slider;\n    var chart = this.chart;\n    var thumb = this.thumb;\n    if (!thumb.isDown) {\n      var step = (Math.log(chart.zoomLevel) - Math.log(this.chart.minZoomLevel)) / Math.LN2;\n      if (this.layout == \"vertical\") {\n        thumb.y = slider.pixelHeight - (slider.pixelHeight - thumb.pixelHeight) * step / this.stepCount - thumb.pixelHeight;\n      } else {\n        thumb.x = slider.pixelWidth * step / this.stepCount;\n      }\n    }\n  };\n  /**\r\n   * Zooms the actual map when slider position changes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  ZoomControl.prototype.handleThumbDrag = function () {\n    var slider = this.slider;\n    var chart = this.chart;\n    var thumb = this.thumb;\n    var step;\n    var minStep = Math.log(this.chart.minZoomLevel) / Math.LN2;\n    if (this.layout == \"vertical\") {\n      step = this.stepCount * (slider.pixelHeight - thumb.pixelY - thumb.pixelHeight) / (slider.pixelHeight - thumb.pixelHeight);\n    } else {\n      step = this.stepCount * thumb.pixelX / slider.pixelWidth;\n    }\n    step = minStep + step;\n    var zoomLevel = Math.pow(2, step);\n    chart.zoomToGeoPoint(undefined, zoomLevel, false, 0);\n  };\n  Object.defineProperty(ZoomControl.prototype, \"stepCount\", {\n    /**\r\n     * Returns the step countfor the slider grid according to map's min and max\r\n     * zoom level settings.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Step count\r\n     */\n    get: function () {\n      return Math.log(this.chart.maxZoomLevel) / Math.LN2 - Math.log(this.chart.minZoomLevel) / Math.LN2;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Creates a background element for slider control.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Background\r\n   */\n  ZoomControl.prototype.createBackground = function () {\n    return new RoundedRectangle();\n  };\n  return ZoomControl;\n}(Container);\nexport { ZoomControl };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"ZoomControl\"] = ZoomControl;","map":{"version":3,"names":["Container","Button","RoundedRectangle","MutableValueDisposer","MultiDisposer","keyboard","getInteraction","percent","registry","InterfaceColorSet","ZoomControl","_super","__extends","_this","call","_chart","className","align","valign","layout","padding","interfaceColors","plusButton","createChild","shouldClone","label","text","slider","background","fill","getFor","fillOpacity","events","on","handleBackgroundClick","updateThumbSize","thumb","draggable","handleThumbDrag","minusButton","role","readerLive","readerTitle","language","translate","applyTheme","event","property","fixLayout","undefined","_disposers","push","prototype","x","y","width","height","marginTop","marginBottom","toFront","toBack","minX","maxX","minY","maxY","sprite","target","spritePoint","chart","maxPower","Math","log","maxZoomLevel","LN2","minPower","minZoomLevel","power","pixelHeight","zoomLevel","pow","zoomToGeoPoint","zoomGeoPoint","Object","defineProperty","get","set","updateThumb","zoomOut","body","ev","topParent","hasFocused","isKey","zoomIn","minHeight","min","stepCount","visible","minWidth","pixelWidth","isDown","step","minStep","pixelY","pixelX","createBackground","registeredClasses"],"sources":["../../../../../src/.internal/charts/map/ZoomControl.ts"],"sourcesContent":["/**\r\n * Zoom control module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { Button } from \"../../core/elements/Button\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { keyboard } from \"../../core/utils/Keyboard\";\r\nimport { getInteraction } from \"../../core/interaction/Interaction\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ZoomControl]].\r\n */\r\nexport interface IZoomControlProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[ZoomControl]].\r\n */\r\nexport interface IZoomControlEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ZoomControl]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IZoomControlAdapters extends IContainerAdapters, IZoomControlProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a control for zooming the map.\r\n *\r\n * @see {@link IZoomControlEvents} for a list of available events\r\n * @see {@link IZoomControlAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ZoomControl extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IZoomControlProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IZoomControlAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IZoomControlEvents;\r\n\r\n\t/**\r\n\t * Zoom in button element.\r\n\t */\r\n\tpublic plusButton: Button;\r\n\r\n\t/**\r\n\t * Zoom out button element.\r\n\t */\r\n\tpublic minusButton: Button;\r\n\r\n\t/**\r\n\t * A zoom slider background element.\r\n\t */\r\n\tpublic slider: Container;\r\n\r\n\t/**\r\n\t * A zoom slider thumb element.\r\n\t */\r\n\tpublic thumb: Button;\r\n\r\n\t/**\r\n\t * A target map.\r\n\t */\r\n\tprotected _chart: MutableValueDisposer<MapChart> = new MutableValueDisposer<MapChart>();\r\n\r\n\t/**\r\n\t * A type to use for the background element for zoom control.\r\n\t */\r\n\tpublic _background: RoundedRectangle;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"ZoomControl\";\r\n\r\n\t\tthis.align = \"right\";\r\n\t\tthis.valign = \"bottom\";\r\n\r\n\t\tthis.layout = \"vertical\";\r\n\t\tthis.padding(5, 5, 5, 5);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tlet plusButton: Button = this.createChild(Button);\r\n\t\tplusButton.shouldClone = false;\r\n\t\tplusButton.label.text = \"+\";\r\n\t\t//plusButton.fontFamily = \"Verdana\";\r\n\t\tthis.plusButton = plusButton;\r\n\r\n\t\tlet slider: Container = this.createChild(Container);\r\n\t\tslider.shouldClone = false;\r\n\t\tslider.background.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tslider.background.fillOpacity = 0.05;\r\n\t\tslider.background.events.on(\"hit\", this.handleBackgroundClick, this, false);\r\n\t\tslider.events.on(\"sizechanged\", this.updateThumbSize, this, false);\r\n\t\tthis.slider = slider;\r\n\r\n\t\tlet thumb: Button = slider.createChild(Button);\r\n\t\tthumb.shouldClone = false;\r\n\t\tthumb.padding(0, 0, 0, 0);\r\n\t\tthumb.draggable = true;\r\n\t\tthumb.events.on(\"drag\", this.handleThumbDrag, this, false);\r\n\t\tthis.thumb = thumb;\r\n\r\n\t\tlet minusButton: Button = this.createChild(Button);\r\n\t\tminusButton.shouldClone = false;\r\n\t\tminusButton.label.text = \"-\";\r\n\t\t//minusButton.fontFamily = \"Verdana\";\r\n\t\tthis.minusButton = minusButton;\r\n\r\n\t\t// Set roles\r\n\t\tthis.thumb.role = \"slider\";\r\n\t\tthis.thumb.readerLive = \"polite\";\r\n\r\n\t\t// Set reader text\r\n\t\tthis.thumb.readerTitle = this.language.translate(\"Use arrow keys to zoom in and out\");\r\n\t\tthis.minusButton.readerTitle = this.language.translate(\"Press ENTER to zoom in\");\r\n\t\tthis.plusButton.readerTitle = this.language.translate(\"Press ENTER to zoom out\");\r\n\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.events.on(\"propertychanged\", (event) => {\r\n\t\t\tif (event.property == \"layout\") {\r\n\t\t\t\tthis.fixLayout();\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\r\n\t\tthis._disposers.push(this._chart);\r\n\r\n\t\tthis.fixLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected fixLayout() {\r\n\r\n\t\tlet plusButton = this.plusButton;\r\n\t\tlet minusButton = this.minusButton;\r\n\r\n\t\tlet thumb = this.thumb;\r\n\t\tlet slider = this.slider;\r\n\r\n\t\tplusButton.x = undefined;\r\n\t\tplusButton.y = undefined;\r\n\r\n\t\tminusButton.x = undefined;\r\n\t\tminusButton.y = undefined;\r\n\r\n\t\tthumb.x = undefined;\r\n\t\tthumb.y = undefined;\r\n\r\n\t\tslider.x = undefined;\r\n\t\tslider.y = undefined;\r\n\r\n\t\tplusButton.padding(6, 10, 6, 10);\r\n\t\tminusButton.padding(6, 10, 6, 10);\r\n\r\n\t\tminusButton.label.align = \"center\";\r\n\t\tminusButton.label.valign = \"middle\";\r\n\r\n\t\tplusButton.label.align = \"center\";\r\n\t\tplusButton.label.valign = \"middle\";\r\n\r\n\t\tif (this.layout == \"vertical\") {\r\n\t\t\tthis.width = 40;\r\n\t\t\tthis.height = undefined;\r\n\r\n\t\t\tminusButton.width = percent(100);\r\n\t\t\tminusButton.height = undefined;\r\n\r\n\t\t\tthumb.width = percent(100);\r\n\t\t\tthumb.height = undefined;\r\n\r\n\t\t\tplusButton.width = percent(100);\r\n\t\t\tplusButton.height = undefined;\r\n\r\n\t\t\tslider.width = percent(100);\r\n\t\t\tminusButton.marginTop = 1;\r\n\t\t\tplusButton.marginBottom = 2;\r\n\r\n\t\t\tslider.height = 0;\r\n\r\n\t\t\tminusButton.toFront();\r\n\t\t\tplusButton.toBack();\r\n\r\n\t\t\tthumb.minX = 0;\r\n\t\t\tthumb.maxX = 0;\r\n\t\t\tthumb.minY = 0;\r\n\r\n\r\n\t\t}\r\n\t\telse if (this.layout == \"horizontal\") {\r\n\t\t\tthis.height = 40;\r\n\t\t\tthis.width = undefined;\r\n\r\n\t\t\tminusButton.height = percent(100);\r\n\t\t\tminusButton.width = undefined;\r\n\r\n\t\t\tplusButton.height = percent(100);\r\n\t\t\tplusButton.width = undefined;\r\n\r\n\t\t\tthumb.height = percent(100);\r\n\t\t\tthumb.width = undefined;\r\n\r\n\t\t\tthumb.minX = 0;\r\n\t\t\tthumb.minY = 0;\r\n\t\t\tthumb.maxY = 0;\r\n\r\n\t\t\tslider.height = percent(100);\r\n\t\t\tslider.width = 0;\r\n\r\n\t\t\tminusButton.toBack();\r\n\t\t\tplusButton.toFront();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Handles zoom operation after clicking on the slider background.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleBackgroundClick(event: AMEvent<Sprite, ISpriteEvents>[\"hit\"]): void {\r\n\t\tlet sprite: Sprite = event.target;\r\n\t\tlet y: number = event.spritePoint.y;\r\n\t\tlet chart: MapChart = this.chart;\r\n\r\n\t\tlet maxPower: number = Math.log(chart.maxZoomLevel) / Math.LN2;\r\n\t\tlet minPower: number = Math.log(chart.minZoomLevel) / Math.LN2;\r\n\r\n\t\tlet power: number = (sprite.pixelHeight - y) / sprite.pixelHeight * (minPower + (maxPower - minPower));\r\n\t\tlet zoomLevel: number = Math.pow(2, power);\r\n\t\tchart.zoomToGeoPoint(chart.zoomGeoPoint, zoomLevel);\r\n\t}\r\n\r\n\t/**\r\n\t * A main chart/map that this zoom control is for.\r\n\t *\r\n\t * @param chart  Map/chart\r\n\t */\r\n\tpublic set chart(chart: MapChart) {\r\n\t\tthis._chart.set(chart, new MultiDisposer([\r\n\t\t\tchart.events.on(\"maxsizechanged\", this.updateThumbSize, this, false),\r\n\t\t\tchart.events.on(\"zoomlevelchanged\", this.updateThumb, this, false),\r\n\r\n\t\t\tthis.minusButton.events.on(\"hit\", () => { chart.zoomOut(chart.zoomGeoPoint) }, chart, false),\r\n\r\n\t\t\tgetInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\t\tif (this.topParent.hasFocused) {\r\n\t\t\t\t\t// ENTER is now handled globally\r\n\t\t\t\t\tif (keyboard.isKey(ev.event, \"plus\")) {\r\n\t\t\t\t\t\tchart.zoomIn();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (keyboard.isKey(ev.event, \"minus\")) {\r\n\t\t\t\t\t\tchart.zoomOut();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, chart),\r\n\t\t\tthis.plusButton.events.on(\"hit\", () => { chart.zoomIn(chart.zoomGeoPoint) }, chart, false)\r\n\t\t]));\r\n\t}\r\n\r\n\t/**\r\n\t * @return Map/chart\r\n\t */\r\n\tpublic get chart(): MapChart {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the slider's thumb size based on the available zoom space.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateThumbSize(): void {\r\n\t\tlet chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tlet slider: Container = this.slider;\r\n\t\t\tlet thumb: Button = this.thumb;\r\n\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\tthumb.minHeight = Math.min(this.slider.pixelHeight, 20);\r\n\r\n\t\t\t\tthumb.height = slider.pixelHeight / this.stepCount;\r\n\t\t\t\tthumb.maxY = slider.pixelHeight - thumb.pixelHeight;\r\n\r\n\t\t\t\tif (thumb.pixelHeight <= 1) {\r\n\t\t\t\t\tthumb.visible = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthumb.visible = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthumb.minWidth = Math.min(this.slider.pixelWidth, 20);\r\n\t\t\t\tthumb.width = slider.pixelWidth / this.stepCount;\r\n\t\t\t\tthumb.maxX = slider.pixelWidth - thumb.pixelWidth;\r\n\r\n\t\t\t\tif (thumb.pixelWidth <= 1) {\r\n\t\t\t\t\tthumb.visible = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthumb.visible = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates thumb according to current zoom position from map.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateThumb(): void {\r\n\t\tlet slider: Container = this.slider;\r\n\t\tlet chart: MapChart = this.chart;\r\n\t\tlet thumb: Button = this.thumb;\r\n\r\n\t\tif (!thumb.isDown) {\r\n\t\t\tlet step: number = (Math.log(chart.zoomLevel) - Math.log(this.chart.minZoomLevel)) / Math.LN2;\r\n\r\n\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\tthumb.y = slider.pixelHeight - (slider.pixelHeight - thumb.pixelHeight) * step / this.stepCount - thumb.pixelHeight;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthumb.x = slider.pixelWidth * step / this.stepCount;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the actual map when slider position changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleThumbDrag(): void {\r\n\t\tlet slider: Container = this.slider;\r\n\t\tlet chart: MapChart = this.chart;\r\n\t\tlet thumb: Button = this.thumb;\r\n\t\tlet step: number;\r\n\r\n\t\tlet minStep = Math.log(this.chart.minZoomLevel) / Math.LN2;\r\n\r\n\t\tif (this.layout == \"vertical\") {\r\n\t\t\tstep = this.stepCount * (slider.pixelHeight - thumb.pixelY - thumb.pixelHeight) / (slider.pixelHeight - thumb.pixelHeight);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstep = this.stepCount * thumb.pixelX / slider.pixelWidth;\r\n\t\t}\r\n\t\tstep = minStep + step;\r\n\r\n\t\tlet zoomLevel: number = Math.pow(2, step);\r\n\t\tchart.zoomToGeoPoint(undefined, zoomLevel, false, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the step countfor the slider grid according to map's min and max\r\n\t * zoom level settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Step count\r\n\t */\r\n\tpublic get stepCount(): number {\r\n\t\treturn Math.log(this.chart.maxZoomLevel) / Math.LN2 - Math.log(this.chart.minZoomLevel) / Math.LN2;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a background element for slider control.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Background\r\n\t */\r\n\tpublic createBackground(): this[\"_background\"] {\r\n\t\treturn new RoundedRectangle();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ZoomControl\"] = ZoomControl;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}