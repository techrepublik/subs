{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { atan, cos, sqrtPi, tan } from \"./math.js\";\nexport function foucautRaw(lambda, phi) {\n  var k = phi / 2,\n    cosk = cos(k);\n  return [2 * lambda / sqrtPi * cos(phi) * cosk * cosk, sqrtPi * tan(k)];\n}\nfoucautRaw.invert = function (x, y) {\n  var k = atan(y / sqrtPi),\n    cosk = cos(k),\n    phi = 2 * k;\n  return [x * sqrtPi / 2 / (cos(phi) * cosk * cosk), phi];\n};\nexport default function () {\n  return projection(foucautRaw).scale(135.264);\n}","map":{"version":3,"names":["geoProjection","projection","atan","cos","sqrtPi","tan","foucautRaw","lambda","phi","k","cosk","invert","x","y","scale"],"sources":["/home/josh/Documents/projects/subs/vue_subs/node_modules/d3-geo-projection/src/foucaut.js"],"sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {atan, cos, sqrtPi, tan} from \"./math.js\";\n\nexport function foucautRaw(lambda, phi) {\n  var k = phi / 2, cosk = cos(k);\n  return [ 2 * lambda / sqrtPi * cos(phi) * cosk * cosk, sqrtPi * tan(k)];\n}\n\nfoucautRaw.invert = function(x, y) {\n  var k = atan(y / sqrtPi), cosk = cos(k), phi = 2 * k;\n  return [x * sqrtPi / 2 / (cos(phi) * cosk * cosk), phi];\n};\n\nexport default function() {\n  return projection(foucautRaw)\n      .scale(135.264);\n}\n"],"mappings":"AAAA,SAAQA,aAAa,IAAIC,UAAU,QAAO,QAAQ;AAClD,SAAQC,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,GAAG,QAAO,WAAW;AAEhD,OAAO,SAASC,UAAUA,CAACC,MAAM,EAAEC,GAAG,EAAE;EACtC,IAAIC,CAAC,GAAGD,GAAG,GAAG,CAAC;IAAEE,IAAI,GAAGP,GAAG,CAACM,CAAC,CAAC;EAC9B,OAAO,CAAE,CAAC,GAAGF,MAAM,GAAGH,MAAM,GAAGD,GAAG,CAACK,GAAG,CAAC,GAAGE,IAAI,GAAGA,IAAI,EAAEN,MAAM,GAAGC,GAAG,CAACI,CAAC,CAAC,CAAC;AACzE;AAEAH,UAAU,CAACK,MAAM,GAAG,UAASC,CAAC,EAAEC,CAAC,EAAE;EACjC,IAAIJ,CAAC,GAAGP,IAAI,CAACW,CAAC,GAAGT,MAAM,CAAC;IAAEM,IAAI,GAAGP,GAAG,CAACM,CAAC,CAAC;IAAED,GAAG,GAAG,CAAC,GAAGC,CAAC;EACpD,OAAO,CAACG,CAAC,GAAGR,MAAM,GAAG,CAAC,IAAID,GAAG,CAACK,GAAG,CAAC,GAAGE,IAAI,GAAGA,IAAI,CAAC,EAAEF,GAAG,CAAC;AACzD,CAAC;AAED,eAAe,YAAW;EACxB,OAAOP,UAAU,CAACK,UAAU,CAAC,CACxBQ,KAAK,CAAC,OAAO,CAAC;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}