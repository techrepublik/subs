{"ast":null,"code":"import { atan, cos, tan } from \"./math.js\";\nimport parallel1 from \"./parallel1.js\";\nexport function cylindricalStereographicRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, (1 + cosPhi0) * tan(phi / 2)];\n  }\n  forward.invert = function (x, y) {\n    return [x / cosPhi0, atan(y / (1 + cosPhi0)) * 2];\n  };\n  return forward;\n}\nexport default function () {\n  return parallel1(cylindricalStereographicRaw).scale(124.75);\n}","map":{"version":3,"names":["atan","cos","tan","parallel1","cylindricalStereographicRaw","phi0","cosPhi0","forward","lambda","phi","invert","x","y","scale"],"sources":["/home/josh/Documents/projects/subs/vue_subs/node_modules/d3-geo-projection/src/cylindricalStereographic.js"],"sourcesContent":["import {atan, cos, tan} from \"./math.js\";\nimport parallel1 from \"./parallel1.js\";\n\nexport function cylindricalStereographicRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, (1 + cosPhi0) * tan(phi / 2)];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, atan(y / (1 + cosPhi0)) * 2];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(cylindricalStereographicRaw)\n      .scale(124.75);\n}\n"],"mappings":"AAAA,SAAQA,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAO,WAAW;AACxC,OAAOC,SAAS,MAAM,gBAAgB;AAEtC,OAAO,SAASC,2BAA2BA,CAACC,IAAI,EAAE;EAChD,IAAIC,OAAO,GAAGL,GAAG,CAACI,IAAI,CAAC;EAEvB,SAASE,OAAOA,CAACC,MAAM,EAAEC,GAAG,EAAE;IAC5B,OAAO,CAACD,MAAM,GAAGF,OAAO,EAAE,CAAC,CAAC,GAAGA,OAAO,IAAIJ,GAAG,CAACO,GAAG,GAAG,CAAC,CAAC,CAAC;EACzD;EAEAF,OAAO,CAACG,MAAM,GAAG,UAASC,CAAC,EAAEC,CAAC,EAAE;IAC9B,OAAO,CAACD,CAAC,GAAGL,OAAO,EAAEN,IAAI,CAACY,CAAC,IAAI,CAAC,GAAGN,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;EACnD,CAAC;EAED,OAAOC,OAAO;AAChB;AAEA,eAAe,YAAW;EACxB,OAAOJ,SAAS,CAACC,2BAA2B,CAAC,CACxCS,KAAK,CAAC,MAAM,CAAC;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}