{"ast":null,"code":"import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { acos, asin, atan2, cos, degrees, radians, sin, sqrt } from \"./math.js\";\nfunction satelliteVerticalRaw(P) {\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n      k = (P - 1) / (P - cosPhi * cos(lambda));\n    return [k * cosPhi * sin(lambda), k * sin(phi)];\n  }\n  forward.invert = function (x, y) {\n    var rho2 = x * x + y * y,\n      rho = sqrt(rho2),\n      sinc = (P - sqrt(1 - rho2 * (P + 1) / (P - 1))) / ((P - 1) / rho + rho / (P - 1));\n    return [atan2(x * sinc, rho * sqrt(1 - sinc * sinc)), rho ? asin(y * sinc / rho) : 0];\n  };\n  return forward;\n}\nexport function satelliteRaw(P, omega) {\n  var vertical = satelliteVerticalRaw(P);\n  if (!omega) return vertical;\n  var cosOmega = cos(omega),\n    sinOmega = sin(omega);\n  function forward(lambda, phi) {\n    var coordinates = vertical(lambda, phi),\n      y = coordinates[1],\n      A = y * sinOmega / (P - 1) + cosOmega;\n    return [coordinates[0] * cosOmega / A, y / A];\n  }\n  forward.invert = function (x, y) {\n    var k = (P - 1) / (P - 1 - y * sinOmega);\n    return vertical.invert(k * x, k * y * cosOmega);\n  };\n  return forward;\n}\nexport default function () {\n  var distance = 2,\n    omega = 0,\n    m = projectionMutator(satelliteRaw),\n    p = m(distance, omega);\n\n  // As a multiple of radius.\n  p.distance = function (_) {\n    if (!arguments.length) return distance;\n    return m(distance = +_, omega);\n  };\n  p.tilt = function (_) {\n    if (!arguments.length) return omega * degrees;\n    return m(distance, omega = _ * radians);\n  };\n  return p.scale(432.147).clipAngle(acos(1 / distance) * degrees - 1e-6);\n}","map":{"version":3,"names":["geoProjectionMutator","projectionMutator","acos","asin","atan2","cos","degrees","radians","sin","sqrt","satelliteVerticalRaw","P","forward","lambda","phi","cosPhi","k","invert","x","y","rho2","rho","sinc","satelliteRaw","omega","vertical","cosOmega","sinOmega","coordinates","A","distance","m","p","_","arguments","length","tilt","scale","clipAngle"],"sources":["/Users/admin/Desktop/techrepublik/pro/subs/vue_subs/node_modules/d3-geo-projection/src/satellite.js"],"sourcesContent":["import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {acos, asin, atan2, cos, degrees, radians, sin, sqrt} from \"./math.js\";\n\nfunction satelliteVerticalRaw(P) {\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        k = (P - 1) / (P - cosPhi * cos(lambda));\n    return [\n      k * cosPhi * sin(lambda),\n      k * sin(phi)\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var rho2 = x * x + y * y,\n        rho = sqrt(rho2),\n        sinc = (P - sqrt(1 - rho2 * (P + 1) / (P - 1))) / ((P - 1) / rho + rho / (P - 1));\n    return [\n      atan2(x * sinc, rho * sqrt(1 - sinc * sinc)),\n      rho ? asin(y * sinc / rho) : 0\n    ];\n  };\n\n  return forward;\n}\n\nexport function satelliteRaw(P, omega) {\n  var vertical = satelliteVerticalRaw(P);\n  if (!omega) return vertical;\n  var cosOmega = cos(omega),\n      sinOmega = sin(omega);\n\n  function forward(lambda, phi) {\n    var coordinates = vertical(lambda, phi),\n        y = coordinates[1],\n        A = y * sinOmega / (P - 1) + cosOmega;\n    return [\n      coordinates[0] * cosOmega / A,\n      y / A\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var k = (P - 1) / (P - 1 - y * sinOmega);\n    return vertical.invert(k * x, k * y * cosOmega);\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var distance = 2,\n      omega = 0,\n      m = projectionMutator(satelliteRaw),\n      p = m(distance, omega);\n\n  // As a multiple of radius.\n  p.distance = function(_) {\n    if (!arguments.length) return distance;\n    return m(distance = +_, omega);\n  };\n\n  p.tilt = function(_) {\n    if (!arguments.length) return omega * degrees;\n    return m(distance, omega = _ * radians);\n  };\n\n  return p\n      .scale(432.147)\n      .clipAngle(acos(1 / distance) * degrees - 1e-6);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}