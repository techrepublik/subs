import { BvEvent } from '../../utils';
import type { AlignmentJustifyContent, Booleanish, ClassValue, Size } from '../../types';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    align?: "fill" | AlignmentJustifyContent | undefined;
    ariaControls?: string | undefined;
    ariaLabel?: string | undefined;
    disabled?: Booleanish | undefined;
    ellipsisClass?: ClassValue;
    ellipsisText?: string | undefined;
    firstClass?: ClassValue;
    firstNumber?: Booleanish | undefined;
    firstText?: string | undefined;
    hideEllipsis?: Booleanish | undefined;
    hideGotoEndButtons?: Booleanish | undefined;
    labelFirstPage?: string | undefined;
    labelLastPage?: string | undefined;
    labelNextPage?: string | undefined;
    labelPage?: string | undefined;
    labelPrevPage?: string | undefined;
    lastClass?: ClassValue;
    lastNumber?: Booleanish | undefined;
    lastText?: string | undefined;
    limit?: number | undefined;
    modelValue?: string | number | undefined;
    nextClass?: ClassValue;
    nextText?: string | undefined;
    pageClass?: ClassValue;
    perPage?: string | number | undefined;
    pills?: Booleanish | undefined;
    prevClass?: ClassValue;
    prevText?: string | undefined;
    size?: keyof import("../../types").BaseSize | undefined;
    totalRows?: string | number | undefined;
}>, {
    align: string;
    ariaControls: undefined;
    ariaLabel: string;
    disabled: boolean;
    ellipsisClass: undefined;
    ellipsisText: string;
    firstClass: undefined;
    firstNumber: boolean;
    firstText: string;
    hideEllipsis: boolean;
    hideGotoEndButtons: boolean;
    labelFirstPage: string;
    labelLastPage: string;
    labelNextPage: string;
    labelPage: string;
    labelPrevPage: string;
    lastClass: undefined;
    lastNumber: boolean;
    lastText: string;
    limit: number;
    modelValue: number;
    nextClass: undefined;
    nextText: string;
    pageClass: undefined;
    perPage: number;
    pills: boolean;
    prevClass: undefined;
    prevText: string;
    size: undefined;
    totalRows: number;
}>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    "update:modelValue": (value: number) => void;
    "page-click": (event: BvEvent, pageNumber: number) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    align?: "fill" | AlignmentJustifyContent | undefined;
    ariaControls?: string | undefined;
    ariaLabel?: string | undefined;
    disabled?: Booleanish | undefined;
    ellipsisClass?: ClassValue;
    ellipsisText?: string | undefined;
    firstClass?: ClassValue;
    firstNumber?: Booleanish | undefined;
    firstText?: string | undefined;
    hideEllipsis?: Booleanish | undefined;
    hideGotoEndButtons?: Booleanish | undefined;
    labelFirstPage?: string | undefined;
    labelLastPage?: string | undefined;
    labelNextPage?: string | undefined;
    labelPage?: string | undefined;
    labelPrevPage?: string | undefined;
    lastClass?: ClassValue;
    lastNumber?: Booleanish | undefined;
    lastText?: string | undefined;
    limit?: number | undefined;
    modelValue?: string | number | undefined;
    nextClass?: ClassValue;
    nextText?: string | undefined;
    pageClass?: ClassValue;
    perPage?: string | number | undefined;
    pills?: Booleanish | undefined;
    prevClass?: ClassValue;
    prevText?: string | undefined;
    size?: keyof import("../../types").BaseSize | undefined;
    totalRows?: string | number | undefined;
}>, {
    align: string;
    ariaControls: undefined;
    ariaLabel: string;
    disabled: boolean;
    ellipsisClass: undefined;
    ellipsisText: string;
    firstClass: undefined;
    firstNumber: boolean;
    firstText: string;
    hideEllipsis: boolean;
    hideGotoEndButtons: boolean;
    labelFirstPage: string;
    labelLastPage: string;
    labelNextPage: string;
    labelPage: string;
    labelPrevPage: string;
    lastClass: undefined;
    lastNumber: boolean;
    lastText: string;
    limit: number;
    modelValue: number;
    nextClass: undefined;
    nextText: string;
    pageClass: undefined;
    perPage: number;
    pills: boolean;
    prevClass: undefined;
    prevText: string;
    size: undefined;
    totalRows: number;
}>>> & {
    "onUpdate:modelValue"?: ((value: number) => any) | undefined;
    "onPage-click"?: ((event: BvEvent, pageNumber: number) => any) | undefined;
}, {
    disabled: Booleanish;
    align: AlignmentJustifyContent | 'fill';
    size: Size;
    modelValue: string | number;
    ariaLabel: string;
    ariaControls: string;
    limit: number;
    pills: Booleanish;
    ellipsisClass: ClassValue;
    ellipsisText: string;
    firstClass: ClassValue;
    firstNumber: Booleanish;
    firstText: string;
    hideEllipsis: Booleanish;
    hideGotoEndButtons: Booleanish;
    labelFirstPage: string;
    labelLastPage: string;
    labelNextPage: string;
    labelPage: string;
    labelPrevPage: string;
    lastClass: ClassValue;
    lastNumber: Booleanish;
    lastText: string;
    nextClass: ClassValue;
    nextText: string;
    pageClass: ClassValue;
    perPage: string | number;
    prevClass: ClassValue;
    prevText: string;
    totalRows: string | number;
}, {}>, {
    "first-text"?(_: {}): any;
    "prev-text"?(_: {}): any;
    "ellipsis-text"?(_: {}): any;
    page?(_: {
        active: boolean;
        disabled: boolean;
        page: number;
        index: number;
        content: number;
    }): any;
    "next-text"?(_: {}): any;
    "last-text"?(_: {}): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
